{
    "figura.permissions.category.low": "Низкий",
    "figura.backend.warning": "Предупреждение",
    "figura.toast.wardrobe_copy.error": "Не удалось скопировать файлы!",
    "figura.permissions.infinity": "Много",
    "figura.permissions.category.max": "Максимальный",
    "figura.toast.panic_enabled": "Режим паники включён!",
    "figura.permissions.disabled": "Отключено",
    "figura.toast.cache_clear": "Кэш очищен!",
    "figura.permissions.category.low.info": "Низкий уровень разрешений\nБольшинство функций отключены\nПодходит для очень простых аватаров",
    "figura.permissions.category.blocked.info": "Нет разрешений\nВсе функции Figura отключены\nКак если бы аватар отсутствовал",
    "figura.backend.user_not_found": "Игрок не найден",
    "figura.backend.disconnected": "Облако не подключено!",
    "figura.permissions.enabled": "Включено",
    "figura.backend.delete_error": "Ошибка удаления аватара",
    "figura.permissions.category.high.info": "Высокий уровень разрешений\nВсе функции доступны, но возможности скриптов всё ещё ограничены\nПодходит для сложных аватаров",
    "figura.toast.reload": "Аватар обновлён!",
    "figura.toast.avatar_wizard.success": "Аватар создан!",
    "figura.backend.connected": "Облако подключено!",
    "figura": "Figura",
    "figura.toast.avatar_wizard.error": "Не удалось создать аватар!",
    "figura.backend.equip_error": "Не удалось поставить выбранные аватары",
    "figura.toast.clipboard": "Скопировано в буфер обмена!",
    "figura.toast.load_error": "Ошибка загрузки аватара!",
    "figura.backend.upload_too_many": "У вас слишком много аватаров",
    "figura.permissions.category.default.info": "Умеренный уровень разрешений\nБольшинство функций доступны, кроме некоторых важных\nМожно изменять ванильные модели, но не имя\nПодходит для многих доступных аватаров",
    "figura.toast.avatar_data_clear": "Данные аватара очищены!",
    "figura.toast.wardrobe_copy.success": "Скопировано %s файлов!",
    "figura.toast.panic_disabled": "Режим паники выключен!",
    "figura.toast.permission_change": "Разрешения изменены на",
    "figura.backend.upload_success": "Аватар загружен!",
    "figura.backend.avatar_not_found": "Аватар не найден",
    "figura.toast.reload_all": "Все аватары обновлены!",
    "figura.permissions.category.max.info": "Максимальный уровень разрешений\nВсë включено и выставлено на максимум\nМожно использовать все ресурсы компьютера\nПодходит для очень сложных аватаров",
    "figura.backend.delete_success": "Аватар удалëн!",
    "figura.permissions.category.blocked": "Заблокировано",
    "figura.permissions.value.init_inst": "Инструкций инициализации",
    "figura.backend.upload_error": "Ошибка отправки аватара",
    "figura.permissions.category.default": "По умолчанию",
    "figura.backend.ping_size": "Пинг слишком большой",
    "figura.toast.new_version": "Вышло обновление!",
    "figura.backend.ping_rate": "Слишком много пингов",
    "figura.backend.upload_too_big": "Аватар слишком большой",
    "figura.permissions.category.high": "Высокий",
    "figura.permissions.value.volume.tooltip": "Регулирует громкость создаваемых аватаром звуков",
    "figura.gui.permissions.reload_all": "Обновить все",
    "figura.gui.context.copy_path": "Копировать путь",
    "figura.gui.text_hint.folder_path": "Путь",
    "figura.gui.panels.title.profile": "Профиль",
    "figura.gui.help.lua_manual": "Руководство Lua",
    "figura.gui.panels.title.sound": "Звуки аватара",
    "figura.badges.system.sound": "Аватар воспроизводит звук!",
    "figura.config.nameplate_level.1": "Нет",
    "figura.config.chat_nameplate": "Изменения в чате",
    "figura.gui.status.backend.3": "Подключено",
    "figura.gui.size": "Размер",
    "figura.gui.status.backend": "Облако",
    "figura.gui.avatar_wizard.authors": "Авторы",
    "figura.permissions.value.vanilla_model_edit": "Изменение ванильной модели",
    "figura.gui.context.open_folder": "Открыть папку",
    "figura.config.format_script.1": "Нет",
    "figura.permissions.value.texture_size": "Размеры текстуры",
    "figura.gui.avatar_wizard.hide_elytra": "Скрыть ванильные элитры",
    "figura.gui.wardrobe.sound.tooltip": "Звуки аватара",
    "figura.gui.avatar_wizard.name": "Название",
    "figura.gui.cancel": "Отмена",
    "figura.gui.status.script.0": "нет",
    "figura.gui.status.texture": "Текстура",
    "figura.gui.status.backend.2": "Подключение",
    "figura.gui.text_hint.hex_color": "Цвет",
    "figura.gui.panels.title.permissions": "Разрешения",
    "figura.gui.avatar_wizard.hide_armor": "Скрыть ванильную броню",
    "figura.gui.avatar_wizard.elytra": "Модель элитр",
    "figura.config.render_debug_parts_pivot.tooltip.cubes": "кубов",
    "figura.gui.sound.play": "Воспроизвести",
    "figura.config.nameplate_render.3": "Никогда",
    "figura.gui.text_hint.any": "Текст",
    "figura.gui.help.docs": "Документация",
    "figura.gui.avatar_wizard.player_model": "Модель игрока",
    "figura.config.format_script.3": "Сильное",
    "figura.gui.panels.title.browser": "Браузер",
    "figura.config.nameplate_render.1": "Стандартное",
    "figura.config.sound_badge": "Индикатор звука",
    "figura.config.iris_compatibility_fix.1": "Нет",
    "figura.gui.text_hint.ip": "IP-адрес",
    "figura.popup_menu.reload": "Обновить аватар",
    "figura.gui.status.backend.1": "Соединение потеряно",
    "figura.gui.load_error": "Ошибка загрузки",
    "figura.emoji.heart": "Сердца",
    "figura.config.allow_fp_hands": "Руки от первого лица",
    "figura.gui.on": "Вкл",
    "figura.gui.help.links": "Ссылки",
    "figura.badges.special.translator": "Переводчик Figura!",
    "figura.gui.context.copy_uuid": "Копировать UUID",
    "figura.emoji.symbol": "Символы",
    "figura.gui.help.ingame_docs": "Документация Фигуры",
    "figura.gui.status.size": "Размер",
    "figura.permissions.value.init_inst.tooltip": "Максимальное количество инструкций кода на этапе инициализации скрипта",
    "figura.gui.text_hint.search": "Поиск",
    "figura.emoji.meme": "Мемы",
    "figura.gui.panels.title.settings": "Настройки",
    "figura.gui.status.texture.3": "в порядке",
    "figura.ellipsis": "…",
    "figura.gui.error.no_avatar": "Аватар не выбран!",
    "figura.permissions.value.volume": "Громкость аватара",
    "figura.config.log_location.1": "Чат",
    "figura.gui.status.texture.0": "нет",
    "figura.gui.help.external_wiki": "Вики",
    "figura.gui.help.figura_version": "Версия Figura: %s",
    "figura.gui.avatar_wizard.cape": "Модель плаща",
    "figura.config.render_debug_parts_pivot.tooltip.groups": "групп",
    "figura.gui.status.size.3": "в порядке",
    "figura.config.format_script.2": "Слабое",
    "figura.gui.panels.title.help": "Помощь",
    "figura.permissions.value.sounds.tooltip": "Максимальное количество создаваемых аватаром звуков в секунду",
    "figura.gui.context.reload": "Обновить аватар",
    "figura.gui.duplicate_keybind": "Клавишу уже используют:\n%s",
    "figura.gui.status.script.3": "в порядке",
    "figura.gui.action_wheel.slots_indicator": "Ячейки %s–%s из %s",
    "figura.gui.status.size.2": "Размер аватара составляет более 75%% от максимального для загрузки (%s)",
    "figura.gui.avatar_wizard.hide_cape": "Скрыть ванильный плащ",
    "figura.badges.system.error": "Скрипт аватара содержит ошибку!",
    "figura.gui.avatar_wizard.description": "Описание",
    "figura.emoji.nature": "Природа",
    "figura.gui.help.lua_version": "Версия Lua: %s",
    "figura.gui.permissions.tick.world": "Мир: %s",
    "figura.config.render_debug_parts_pivot.1": "Выкл",
    "figura.gui.avatar_settings.tooltip": "Настройки аватара",
    "figura.gui.load_error.unknown": "Неизвестная ошибка",
    "figura.gui.wardrobe.new_avatar.tooltip": "Создать новый аватар",
    "figura.tab": "  ",
    "figura.gui.avatar_wizard.slim": "Тонкие руки",
    "figura.gui.avatar_wizard.model": "Модель",
    "figura.gui.avatar_wizard.hide_player": "Скрыть ванильного игрока",
    "figura.gui.permissions.render.world": "Мир: %s",
    "figura.gui.off": "Выкл",
    "figura.gui.permissions.render.animations": "Анимации: %s",
    "figura.gui.done": "Готово",
    "figura.gui.permissions.size": "Размер аватара",
    "figura.badges.special.donator": "Спасибо за поддержку Figura!",
    "figura.config.preview_nameplate": "Отрисовка имени в интерфейсе",
    "figura.config.paperdoll_y.tooltip": "Определяет смещение позиции куклы по оси Y",
    "figura.config.panic_button": "Кнопка паники",
    "figura.config.paperdoll_pitch.tooltip": "Определяет поворот куклы по оси тангажа",
    "figura.gui.sound.stop": "Остановить",
    "figura.config.server_ip.tooltip": "Определяет IP-адрес облака для сетевых функций Figura",
    "figura.config.format_script.tooltip.1": "Сжимает скрипт за счёт удаления комментариев, пробельных символов и пустых строк",
    "figura.config.entity_nameplate.tooltip": "Определяет уровень изменений имён у сущностей",
    "figura.config.action_wheel_title.tooltip": "Определяет расположение текста выбранного действия",
    "figura.config.toast_time": "Длительность уведомлений",
    "figura.config.background_scroll_speed": "Скорость движения фона",
    "figura.gui.authors": "Авторы",
    "figura.config.log_pings.tooltip": "Выводит информацию об отправленных и полученных пингах\nМесто вывода контролируется настройкой «Вывод информации»",
    "figura.config.paperdoll.tooltip": "Настройки куклы",
    "figura.gui.status.size.1": "Размер аватара превышает максимальный для загрузки (%s)",
    "figura.config.button_location": "Кнопка в меню",
    "figura.gui.wardrobe.folder.tooltip": "Открыть корневую папку с аватарами",
    "figura.config.nameplate": "Имя",
    "figura.config.log_location.tooltip": "Определяет, куда функции print выводят информацию",
    "figura.command.docs_type_hover": "Нажмите, чтобы показать документацию по %s",
    "figura.command.debug.success": "Данные отладки сохранены в папку Figura",
    "figura.config.action_wheel_mode.2": "Переключение",
    "figura.config.paperdoll_yaw": "Рыскание",
    "figura.config.log_number_length": "Длина выводимых чисел",
    "figura.config.popup_min_size": "Минимальный размер меню игрока",
    "figura.config.first_person_matrices.tooltip": "Определяет, можно ли изменять матрицы модели в виде от первого лица",
    "figura.config.connection_toasts": "Уведомления о подключении к облаку",
    "figura.config.action_wheel_button": "Кнопка колеса действий",
    "figura.config.easter_eggs.tooltip": "Включает весёлые и неожиданные аспекты Figura (скука смертная!)",
    "figura.config.paperdoll_pitch": "Тангаж",
    "figura.config.paperdoll_invisible.tooltip": "Скрывает эффект невидимости у куклы",
    "figura.config.update_channel.1": "Нет",
    "figura.config.sync_pings": "Синхронизация пингов",
    "figura.gui.panels.title.avatar": "Предпросмотр аватара",
    "figura.config.paperdoll_x.tooltip": "Определяет смещение позиции куклы по оси X",
    "figura.config.script": "Скрипт",
    "figura.config.paperdoll_scale.tooltip": "Определяет размер куклы",
    "figura.gui.status.script.2": "Скрипт аватара сделан для более новой версии Figura",
    "figura.config.action_wheel_decorations.tooltip": "Показывает данные предмета в значке действия, такие как прочность и количество",
    "figura.command.load.invalid": "Неверный путь «%s»",
    "figura.config.nameplate_level.3": "Скрипт + значки",
    "figura.config.log_others": "Вывод скриптов других игроков",
    "figura.config.render_debug_parts_pivot.3": "У всех",
    "figura.config.log_location": "Вывод информации",
    "figura.config.update_channel.3": "Пререлизы",
    "figura.badges.system.warning": "Аватар сделан для более новой версии Figura и может работать неправильно!",
    "figura.config.misc.tooltip": "Настройки, не попадающие под другие категории",
    "figura.config.wardrobe_button.tooltip": "Открывает экран гардероба Figura",
    "figura.config.reload_button.tooltip": "Обновляет текущий выбранный аватар",
    "figura.config.main_dir": "Расположение папки Figura",
    "figura.gui.text_hint.positive_int": "Целое",
    "figura.gui.text_hint.float": "Число",
    "figura.config.ui": "Интерфейс",
    "figura.config.nameplate_render.2": "Стандартное + при взгляде",
    "figura.command.docs_export.error": "Не удалось экспортировать документацию!",
    "figura.config.first_person_paperdoll": "Только от первого лица",
    "figura.gui.wardrobe.expand_wardrobe.tooltip": "Развернуть список гардероба",
    "figura.gui.avatar_wizard.dummy_model": "Встроить модель",
    "figura.config.popup_max_size": "Максимальный размер меню игрока",
    "figura.config.action_wheel_mode.1": "Удерживание",
    "figura.command.load.loading": "Загрузка аватара!",
    "figura.config.reload_button": "Обновить аватар",
    "figura.gui.wardrobe.unselect.tooltip": "Отменить выбор аватара",
    "figura.config.popup_scale.tooltip": "Определяет множитель размера меню игрока",
    "figura.config.button_location.5": "Внизу справа",
    "figura.config.dev": "Для разработчиков",
    "figura.config.paperdoll_x": "Смещение по X",
    "figura.gui.status.script.1": "Скрипт аватара содержит ошибку",
    "figura.config.paperdoll_yaw.tooltip": "Определяет поворот куклы по оси рыскания",
    "figura.config.list_nameplate": "Изменения в списке игроков",
    "figura.config.popup_button.tooltip": "Открывает меню быстрых действий с игроком перед камерой",
    "figura.gui.expand": "Развернуть",
    "figura.gui.reset_all": "Сбросить все",
    "figura.config.log_pings.2": "Только у себя",
    "figura.config.has_paperdoll.tooltip": "Определяет, показывать ли куклу",
    "figura.config.update_channel.2": "Релизы",
    "figura.gui.avatar_wizard.spyglass_pivot": "Подзорная труба",
    "figura.config.panic_button.tooltip": "Останавливает отрисовку всех аватаров",
    "figura.gui.wardrobe.minimize_wardrobe.tooltip": "Свернуть список гардероба",
    "figura.config.button_location.1": "Значок",
    "figura.config.popup_scale": "Размер меню игрока",
    "figura.config.misc": "Разное",
    "figura.config.self_nameplate.tooltip": "Определяет, показывать ли вам своё имя",
    "figura.config.list_nameplate.tooltip": "Определяет уровень изменений имён в списке игроков",
    "figura.config.format_script.tooltip.2": "Выберите аватар повторно, чтобы изменения вступили в силу",
    "figura.gui.name": "Название",
    "figura.badges.special.dev": "Разработчик Figura!",
    "figura.gui.error.no_keybinds": "У аватара нет горячих клавиш!",
    "figura.config.nameplate.tooltip": "Настройки имени",
    "figura.gui.minimise": "Свернуть",
    "figura.gui.wardrobe.keybind.tooltip": "Горячие клавиши аватара",
    "figura.config.action_wheel_title.3": "Сверху",
    "figura.config.action_wheel_scale.tooltip": "Определяет размер колеса действий",
    "figura.config.chat_messages.tooltip.2": "Опасно: сообщения всё ещё подписаны",
    "figura.config.toast_title_time.tooltip": "Определяет, через сколько секунд заголовок длинного уведомления сменяется сообщением",
    "figura.gui.avatar_wizard.meta": "Метаданные аватара",
    "figura.config.wardrobe_file_names.tooltip": "Показывает в гардеробе названия файлов вместо названий из метаданных (avatar.json)",
    "figura.config.first_person_matrices": "Матрицы от первого лица",
    "figura.gui.avatar_wizard.dummy_script": "Встроить скрипт",
    "figura.config.chat_messages.tooltip.3": "Figura не несёт ответственности за использование этой функции",
    "figura.config.popup_min_size.tooltip": "Определяет минимальный размер меню игрока вдали",
    "figura.config.wardrobe_button": "Кнопка гардероба",
    "figura.config.action_wheel_title": "Текст выбранного действия",
    "figura.config.action_wheel_mode.4": "Переключение (пуск при закрытии)",
    "figura.config.update_channel.tooltip": "Определяет, для каких версий Figura нужно проверять наличие обновлений",
    "figura.config.sync_pings.tooltip.2": "Обратите внимание: если этот параметр включен, ваши ping-запросы никогда не будут выполняться, если вы не подключены к серверной части!",
    "figura.badges.special.contest": "Победитель конкурса Figura! GG!",
    "figura.config.nameplate_render": "Условие отрисовки имён",
    "figura.config.paperdoll_invisible": "Скрытие невидимости",
    "figura.config.chat_messages": "Доступ скриптов к чату",
    "figura.config.chat_nameplate.tooltip": "Определяет уровень изменений имён в чате",
    "figura.config.log_pings.1": "Выкл",
    "figura.config.connection_toasts.tooltip": "Показывает уведомления, связанные с состоянием подключения к облаку",
    "figura.gui.error.no_wheel_page": "У колеса действий нет активной страницы!",
    "figura.config.popup_button": "Меню игрока",
    "figura.gui.wardrobe.delete.tooltip": "Удалить аватар из облака",
    "figura.config.paperdoll_always_on.tooltip": "Определяет, показывать ли куклу всегда или только во время определённых действий",
    "figura.command.debug.error": "Не удалось сохранить данные отладки!",
    "figura.gui.avatar_wizard.pivots": "Опорные точки",
    "figura.config.paperdoll_always_on": "Всегда",
    "figura.config.button_location.2": "Вверху слева",
    "figura.badges.system.default": "Значок Figura!",
    "figura.config.has_paperdoll": "Отрисовка куклы",
    "figura.gui.status.script": "Скрипт",
    "figura.config.action_wheel_scale": "Размер колеса действий",
    "figura.config.paperdoll_y": "Смещение по Y",
    "figura.config.easter_eggs": "Пасхалки",
    "figura.config.toast_title_time": "Длительность заголовков уведомлений",
    "figura.gui.error.no_sounds": "У аватара нет собственных звуков!",
    "figura.config.format_script": "Форматирование скрипта",
    "figura.config.action_wheel_mode": "Режим колеса действий",
    "figura.config.button_location.3": "Вверху справа",
    "figura.config.log_pings.3": "У всех",
    "figura.config.action_wheel_title.5": "Снизу",
    "figura.config.entity_nameplate": "Изменения у сущностей",
    "figura.config.render_debug_parts_pivot.tooltip": "Показывает опорные точки %d и %d во время отрисовки отладочных хитбоксов",
    "figura.command.docs_export.success": "Документация экспортирована в папку Figura",
    "figura.gui.create": "Создать",
    "figura.config.preview_nameplate.tooltip": "Определяет, показывать ли имя в интерфейсе",
    "figura.config.action_wheel_decorations": "Данные предмета в значке",
    "figura.gui.status.size.0": "нет",
    "figura.config.action_wheel_button.tooltip": "Открывает колесо действий",
    "figura.config.button_location.tooltip": "Положение кнопки Figura в игровом меню",
    "figura.gui.status.reason": "Причина",
    "figura.gui.avatar_wizard.items_pivot": "Удерживаемые предметы",
    "figura.config.log_location.2": "Журнал",
    "figura.config.chat_messages.tooltip.1": "Разрешает скриптам изменять или отправлять сообщения в чате",
    "figura.config.allow_fp_hands.tooltip": "Определяет, может ли скрипт изменять позицию, поворот и размер предковых типов для рук в виде от первого лица",
    "figura.config.main_dir.tooltip": "Определяет расположение папки Figura",
    "figura.config.first_person_paperdoll.tooltip": "Определяет, должна ли кукла показываться только в виде от первого лица",
    "figura.gui.avatar_wizard.parrots_pivot": "Попугаи на плечах",
    "figura.config.nameplate_level.2": "Скрипт",
    "figura.config.dev.tooltip": "Экспериментальные настройки и настройки для разработчиков",
    "figura.config.log_number_length.tooltip": "Определяет количество знаков после запятой у чисел с вывода функций print",
    "figura.command.click_to_open": "Нажмите здесь, чтобы открыть",
    "figura.config.log_others.tooltip": "Выводит ошибки и сообщения скриптов аватаров других игроков",
    "figura.config.sync_pings.tooltip.1": "Определяет, должны ли свои пинги выполнятся локально или приходить обратно от сервера",
    "figura.config.action_wheel_mode.3": "Удерживание (пуск при закрытии)",
    "figura.config.figura_inventory.tooltip": "Показывает в инвентаре аватар вместо стандартной модели игрока",
    "figura.config.wardrobe_file_names": "Названия файлов в гардеробе",
    "figura.config.nameplate_render.tooltip": "Определяет, при каких условиях имена сущностей видны",
    "figura.config.update_channel": "Канал обновлений Figura",
    "figura.config.action_wheel_title.1": "В подсказке",
    "figura.config.ui.tooltip": "Настройки интерфейса",
    "figura.config.figura_inventory": "Аватар в инвентаре",
    "figura.popup_menu.cancel": "Отмена",
    "figura.config.script.tooltip": "Настройки скрипта",
    "figura.config.background_scroll_speed.tooltip": "Определяет множитель скорости движения фона в интерфейсе",
    "figura.config.self_nameplate": "Отрисовка своего имени",
    "figura.config.button_location.4": "Внизу слева",
    "figura.config.paperdoll_scale": "Размер",
    "figura.badges.special.discord_staff": "Модератор Discord-сервера Figura!",
    "figura.config.action_wheel_mode.tooltip": "Определяет режим взаимодействия с колесом действий",
    "figura.config.render_debug_parts_pivot": "Отрисовка опорных точек",
    "figura.gui.text_hint.int": "Целое",
    "figura.gui.text_hint.name": "Имя/UUID",
    "figura.config.popup_max_size.tooltip": "Определяет максимальный размер меню игрока вблизи",
    "figura.gui.panels.title.wardrobe": "Гардероб",
    "figura.config.render_debug_parts_pivot.2": "Только у себя",
    "figura.gui.panels.title.keybind": "Горячие клавиши аватара",
    "figura.gui.wardrobe.upload.tooltip": "Загрузить аватар в облако\nДругие игроки видят только загруженный аватар",
    "figura.gui.avatar_wizard.empty_events": "Встроить пустые события",
    "figura.gui.avatar_wizard.scripting": "Скрипт",
    "figura.config.server_ip": "Адрес облака Figura",
    "figura.gui.avatar_wizard.helmet_item_pivot": "Предмет на голове",
    "figura.gui.context.copy_name": "Копировать имя",
    "figura.gui.wardrobe.reload.tooltip": "Обновить аватар из облака",
    "figura.config.toast_time.tooltip": "Определяет, сколько секунд уведомление Figura находится на экране",
    "figura.config.action_wheel_title.2": "У курсора",
    "figura.config.paperdoll": "Кукла",
    "figura.config.action_wheel_title.4": "По центру",
    "figura.gui.complexity": "Сложность",
    "figura.config.log_pings": "Вывод пингов",
    "figura.permissions.value.world_tick_inst.tooltip": "Максимальное количество инструкций кода на этапе обработки события WORLD_TICK",
    "figura.permissions.value.tick_inst": "Инструкций такта",
    "figura.permissions.value.particles.tooltip": "Максимальное количество создаваемых аватаром частиц в секунду",
    "figura.permissions.value.animation_inst.tooltip": "Максимальное количество инструкций кода ключевого кадра, а также кода на этапе обработки событий анимаций",
    "figura.permissions.value.texture_size.tooltip": "Максимальные размеры текстур, создаваемых скриптом\nНе учитываются текстуры, предварительно загруженные из аватара",
    "figura.permissions.value.world_tick_inst": "Инструкций такта мира",
    "figura.permissions.value.complexity": "Сложность модели",
    "figura.permissions.value.complexity.tooltip": "Максимальная допустимая для аватара сложность\nСложность равна количеству граней в аватаре\nНапример, сложность простого куба равна 6\nСкрытые части модели не увеличивают сложность",
    "figura.permissions.value.particles": "Частиц",
    "figura.permissions.value.sounds": "Звуков",
    "figura.permissions.value.bb_animations": "Сложность анимаций",
    "figura.permissions.value.world_render_inst.tooltip": "Максимальное количество инструкций кода на этапе обработки события WORLD_RENDER",
    "figura.permissions.value.render_inst": "Инструкций рендера",
    "figura.permissions.value.animation_inst": "Инструкций анимаций",
    "figura.permissions.value.tick_inst.tooltip": "Максимальное количество инструкций кода на этапе обработки события TICK",
    "figura.permissions.value.render_inst.tooltip": "Максимальное количество инструкций кода на этапе обработки события RENDER",
    "figura.permissions.value.bb_animations.tooltip": "Максимальная допустимая для аватара сложность анимаций\nСложность равна количеству используемых каналов анимации\nСложность анимаций рассчитывается только при воспроизведении",
    "figura.permissions.value.vanilla_model_edit.tooltip": "Определяет, может ли аватар делать изменения, связанные с ванильной моделью, такие как скрытие модели игрока, брони, элитр и так далее",
    "figura.permissions.value.world_render_inst": "Инструкций рендера мира",
    "figura.permissions.value.nameplate_edit": "Изменение имени",
    "figura.permissions.value.offscreen_rendering.tooltip": "Определяет, должна ли производится отрисовка аватара, пока он вне поля зрения игровой камеры",
    "figura.permissions.value.custom_render_layer": "Собственные слои рендера",
    "figura.permissions.value.custom_render_layer.tooltip": "Определяет, может ли аватар создавать слои рендера для использования своего GLSL-кода (шейдеры)",
    "figura.permissions.value.custom_sounds": "Собственные звуки",
    "figura.permissions.value.custom_sounds.tooltip": "Определяет, может ли аватар воспроизводить звуки, которые он же и предоставляет",
    "figura.permissions.value.custom_skull.tooltip": "Определяет, может ли аватар изменять модель блока головы своего игрока",
    "figura.permissions.value.nameplate_edit.tooltip": "Определяет, может ли аватар изменять своё имя: текст, расположение и видимость",
    "figura.permissions.value.offscreen_rendering": "Отрисовка вне поля зрения",
    "figura.permissions.value.custom_skull": "Собственная голова игрока",
    "figura.config.nameplate_render.1.tooltip": "Стандартное поведение без изменений",
    "figura.config.emojis": "Эмодзи",
    "figura.emoji.logo": "Логотипы",
    "figura.config.log_location.2.tooltip": "Журнал вывода клиента",
    "figura.config.rendering": "Рендеринг",
    "figura.config.action_wheel_title.4.tooltip": "Показывать в центре колеса действий",
    "figura.gui.permissions.render.entity": "Сущность: %s",
    "figura.gui.permissions.complexity": "Сложность модели",
    "figura.badges.no_permissions.texture_size": "Текстуры слишком большие",
    "figura.badges.pride.bigender": "Figura-значок бигендеров!",
    "figura.config.iris_compatibility_fix.3": "Сдвиг + свечение",
    "figura.config.action_wheel_mode.2.tooltip": "Переключать кнопкой видимость колеса действий",
    "figura.config.clear_avatar_data": "Очистить данные аватаров",
    "figura.gui.load_error.scripts": "Неверный скрипт",
    "figura.badges.pride.lesbian": "Figura-значок лесбиянок!",
    "figura.config.format_script.1.tooltip": "Не сжимать скрипт",
    "figura.config.update_channel.1.tooltip": "Не проверять наличие обновлений",
    "figura.gui.old_version.tooltip": "Вы путешественник во времени? Последняя версия — %s",
    "figura.gui.permissions.precise": "Точный режим",
    "figura.config.action_wheel_title.6.tooltip": "Показывать под значками всех действий",
    "figura.emoji.hand": "Руки",
    "figura.badges.pride.asexual": "Figura-значок асексуалов!",
    "figura.badges.pride.bisexual": "Figura-значок бисексуалов!",
    "figura.config.action_wheel_title.6": "Под значками",
    "figura.config.avatar_portrait": "Аватары в списке игроков",
    "figura.emoji.portrait": "Пользователи",
    "figura.gui.permissions.expand_permissions.tooltip": "Развернуть расширенное меню разрешений",
    "figura.badges.pride.pansexual": "Figura-значок пансексуалов!",
    "figura.badges.no_permissions.sounds": "Превышено ограничение по звукам",
    "figura.badges.pride.finsexual": "Figura-значок финсексуалов!",
    "figura.config.action_wheel_mode.4.tooltip": "Как «Переключение», но закрытие колеса запускает выбранное действие",
    "figura.config.force_smooth_avatar": "Мягкое освещение аватаров",
    "figura.config.action_wheel_slots_indicator.2.tooltip": "Показывать в центре колеса действий",
    "figura.config.button_location.4.tooltip": "Показывать текстом в нижнем левом углу экрана",
    "figura.emoji.face_sad": "Грусть",
    "figura.config.action_wheel": "Колесо действий",
    "figura.gui.load_error.metadata": "Неверный avatar.json",
    "figura.emoji.face_fear": "Испуг",
    "figura.config.render_debug_parts_pivot.3.tooltip": "Показывать опорные точки у всех аватаров",
    "figura.config.default_permission_level.tooltip": "Определяет уровень разрешений, выдаваемый новым игрокам",
    "figura.command.export_texture.error": "Не удалось экспортировать текстуру!",
    "figura.gui.help.about": "О проекте",
    "figura.config.action_wheel_title.2.tooltip": "Показывать рядом с курсором",
    "figura.badges.no_permissions.bb_animations": "Анимации модели слишком сложные",
    "figura.popup_menu.increase_permissions": "Добавить разрешения",
    "figura.config.emojis.1.tooltip": "Не преобразовывать текст в эмодзи",
    "figura.config.action_wheel_title.7": "По сторонам",
    "figura.emoji.animated": "Анимации",
    "figura.badges.pride.agender": "Figura-значок агендерных!",
    "figura.config.text_scroll_speed": "Скорость прокрутки текста",
    "figura.gui.permissions.init.root": "Корень: %s",
    "figura.emoji.animal": "Животные",
    "figura.emoji.reference_logo": "Отсылки на логотипы",
    "figura.badges.pride.demigender": "Figura-значок демигендеров!",
    "figura.badges.pride.pride": "Прайд-значок Figura!",
    "figura.config.emojis.3": "Вкл + подсказки",
    "figura.config.log_pings.1.tooltip": "Не выводить данные пингов",
    "figura.config.clear_cache": "Очистить кэш",
    "figura.gui.context.favorite.add": "Добавить в избранное",
    "figura.badges.pride.polysexual": "Figura-значок полисексуалов!",
    "figura.command.no_avatar_error": "Аватар не выбран!",
    "figura.emoji.reference": "Отсылки",
    "figura.badges.pride.nonbinary": "Figura-значок небинарных!",
    "figura.config.action_wheel_slots_indicator.3.tooltip": "Показывать под колесом действий",
    "figura.config.format_script.4": "АСД",
    "figura.config.emojis.2": "Вкл",
    "figura.config.log_pings.2.tooltip": "Выводить данные пингов только своего аватара",
    "figura.config.redownload_assets": "Обновить ресурсы",
    "figura.gui.permissions.init": "Инструкций инициализации",
    "figura.popup_menu.decrease_permissions": "Убавить разрешения",
    "figura.badges.pride.genderfluid": "Figura-значок гендерфлюидов!",
    "figura.config.action_wheel_title.1.tooltip": "Показывать как подсказку интерфейса Figura",
    "figura.config.text_scroll_delay": "Задержка прокрутки текста",
    "figura.gui.context.set_permissions": "Задать разрешения",
    "figura.config.render_debug_parts_pivot.2.tooltip": "Показывать опорные точки только у своего аватара",
    "figura.config.button_location.3.tooltip": "Показывать текстом в верхнем правом углу экрана",
    "figura.gui.avatar_wizard.armor_pivots": "Броня",
    "figura.config.render_debug_parts_pivot.1.tooltip": "Не показывать опорные точки",
    "figura.config.text_scroll_delay.tooltip": "Определяет задержку (в тактах) перед прокруткой текста",
    "figura.command.export_avatar.error": "Не удалось экспортировать аватар!",
    "figura.badges.pride.genderqueer": "Figura-значок гендерквиров!",
    "figura.config.iris_compatibility_fix.3.tooltip": "Когда шейдеры активны, изменять тип рендера свечения на более совместимый: вместо стандартного типа eyes применять полностью освещённые текстуры",
    "figura.config.emojis.tooltip": "Преобразует в эмодзи записи вида :emoji_name: на табличках и в чате\nИзменения отразятся на табличках только при перезагрузке мира",
    "figura.config.iris_compatibility_fix.tooltip": "Исправления, обеспечивающие совместимость с модами на шейдеры\nЕсли таких модов нет, исправления не будут применены",
    "figura.config.clear_cache.tooltip": "Очищает файлы кэша, такие как кэш аватаров и состояния интерфейса\nНе очищает настройки и сохранённые разрешения",
    "figura.emoji.face_nervous": "Нервность",
    "figura.gui.permissions.disconnected": "(офлайн)",
    "figura.badges.system.permissions": "Аватару нужно больше разрешений!",
    "figura.badges.pride.demigirl": "Figura-значок демигёрл-персон!",
    "figura.badges.pride.demisexual": "Figura-значок демисексуалов!",
    "figura.badges.pride.disability": "Figura-значок инвалидности!",
    "figura.config.iris_compatibility_fix": "Совместимость с шейдерами",
    "figura.config.action_wheel_mode.3.tooltip": "Как «Удерживание», но закрытие колеса запускает выбранное действие",
    "figura.config.emojis.3.tooltip": "Преобразовывать текст в эмодзи\nПодсказки к эмодзи появляются автоматически (так же как и подсказки к командам)",
    "figura.emoji.face_biba": "Биба",
    "figura.emoji.pride": "Прайд",
    "figura.config.action_wheel_slots_indicator.3": "Снизу",
    "figura.config.update_channel.3.tooltip": "Проверять наличие новых релизов и пререлизов (нестабильных версий)",
    "figura.config.emojis.2.tooltip": "Преобразовывать текст в эмодзи\nПодсказки к эмодзи появляются при нажатии Tab (так же как и подсказки к именам игроков)",
    "figura.gui.permissions.reset": "Сбросить",
    "figura.emoji.reference_bloons": "Отсылки на Bloons",
    "figura.gui.text_hint.positive_float": "Число",
    "figura.badges.pride.intersex": "Figura-значок интерсекс-людей!",
    "figura.config.preview_head_rotation": "Поворот головы в интерфейсе",
    "figura.config.action_wheel.tooltip": "Настройки колеса действий",
    "figura.config.debug_mode": "Режим отладки",
    "figura.config.log_pings.3.tooltip": "Выводить данные пингов всех аватаров",
    "figura.config.action_wheel_title.5.tooltip": "Показывать под колесом действий",
    "figura.config.emojis.1": "Выкл",
    "figura.command.export_texture.success": "Текстура экспортирована в папку Figura",
    "figura.gui.clear": "Очистить",
    "figura.gui.permissions.render.post_world": "Мир (после): %s",
    "figura.badges.pride.gaymen": "Figura-значок геев!",
    "figura.config.action_wheel_slots_indicator.2": "По центру",
    "figura.config.gui_fps.tooltip": "Показывает счётчик FPS в верхнем левом углу интерфейса Figura",
    "figura.emoji.misc": "Прочее",
    "figura.gui.permissions.render.post_entity": "Сущность (после): %s",
    "figura.config.iris_compatibility_fix.2": "Сдвиг",
    "figura.config.local_assets": "Локальные ресурсы",
    "figura.gui.permissions.figura_only.tooltip": "Показывать только игроков с аватаром",
    "figura.badges.special.texture_artist": "Художник Figura!",
    "figura.badges.no_permissions.init_inst": "Скрипт превысил ограничение по ресурсам",
    "figura.config.nameplate_level.2.tooltip": "Разрешить изменения имён скриптами",
    "figura.config.action_wheel_title.3.tooltip": "Показывать над колесом действий",
    "figura.emoji.reference_retro": "Ретроотсылки",
    "figura.gui.not_available_yet": "Пока недоступно",
    "figura.config.gui_fps": "Отображение FPS",
    "figura.emoji.face_angry": "Злость",
    "figura.emoji.face_silly": "Глуповатость",
    "figura.emoji.object": "Объекты",
    "figura.gui.favorited": "В избранном",
    "figura.gui.panels.title.docs": "Документация Lua",
    "figura.badges.pride.aroace": "Figura-значок ароэйс-персон!",
    "figura.config.action_wheel_slots_indicator": "Текст нумерации ячеек",
    "figura.command.export_avatar.success": "Аватар экспортирован в папку Figura",
    "figura.emoji.face_happy": "Радость",
    "figura.badges.pride.transgender": "Figura-значок трансгендеров!",
    "figura.badges.pride.aromantic": "Figura-значок ароматиков!",
    "figura.badges.pride.demiromantic": "Figura-значок демироматиков!",
    "figura.config.action_wheel_slots_indicator.1": "Сверху",
    "figura.config.action_wheel_slots_indicator.1.tooltip": "Показывать над колесом действий",
    "figura.config.update_channel.2.tooltip": "Проверять только наличие новых релизов (стабильных версий)",
    "figura.config.local_assets.tooltip": "Определяет, должны ли ресурсы загружаться с сервера Figura или из локальной папки local_cache",
    "figura.docs.world.raycast_entity": "Производит рейкаст сущности в мире, возвращает карту, содержащую сущность и ее позицию.",
    "figura.gui.load_error.sounds": "Неверный звук аватара",
    "figura.badges.no_permissions.complexity": "Модель слишком сложная",
    "figura.emoji.face_misc": "Прочие лица",
    "figura.gui.permissions.minimize_permissions.tooltip": "Свернуть расширенное меню разрешений",
    "figura.gui.permissions.disconnected.tooltip": "Показывать аватары не в сети",
    "figura.badges.no_permissions.nameplate_edit": "Невозможно изменить имя",
    "figura.config.nameplate_level.3.tooltip": "Разрешить добавление специальных значков Figura",
    "figura.config.format_script.2.tooltip": "Минимальное сжатие: удалять только комментарии и лишние пробельные символы",
    "figura.docs.world.exists": "Проверяет существует ли мир на данный момент\nБудет выдавать true в большинстве случаев, может выдать false при перемещении между измерениями",
    "figura.gui.load_error.models": "Неверная модель",
    "figura.badges.no_permissions.custom_sounds": "Невозможно использовать собственные звуки",
    "figura.badges.no_permissions.vanilla_model_edit": "Невозможно изменить ванильную модель",
    "figura.gui.context.favorite.remove": "Удалить из избранного",
    "figura.docs.world.raycast_block": "Производит рейкаст блока в мире, возвращает карту, содержащую блок и его позицию.",
    "figura.gui.permissions.init.entity": "Сущность: %s",
    "figura.gui.permissions.tick": "Инструкций тактов",
    "figura.gui.permissions.tick.entity": "Сущность: %s",
    "figura.gui.permissions.render": "Инструкций рендера",
    "figura.badges.no_permissions.particles": "Превышено ограничение по частицам",
    "figura.emoji.food": "Еда",
    "figura.gui.panic": "Включён режим паники — функции Figura недоступны!\nВыключите режим паники с помощью клавиши [%s]",
    "figura.gui.new_version.tooltip": "Новая версия Figura уже доступна! %s\nНажмите, чтобы загрузить её в браузере!",
    "figura.gui.wardrobe.drop_files": "Скопировать следующие файлы в гардероб?",
    "figura.popup_menu.permission_screen": "Открыть экран разрешений",
    "figura.badges.pride.demiboy": "Figura-значок демибой-персон!",
    "figura.badges.pride.plural": "Figura-значок плюральных!",
    "figura.badges.special.immortalized": "Увековеченный аватар Figura!",
    "figura.badges.pride.genderfae": "Figura-значок гендерфэй-персон!",
    "figura.config.nameplate_render.2.tooltip": "Показывать имя только при наведении на сущность",
    "figura.config.nameplate_render.3.tooltip": "Не показывать имя",
    "figura.config.nameplate_level.1.tooltip": "Не применять изменения",
    "figura.config.reduced_motion": "Пониженное движение",
    "figura.config.button_location.1.tooltip": "Показывать небольшим значком справа от кнопки «Жалобы»/«Открыть для сети»",
    "figura.config.button_location.2.tooltip": "Показывать текстом в верхнем левом углу экрана",
    "figura.config.button_location.5.tooltip": "Показывать текстом в нижнем правом углу экрана",
    "figura.config.sound_badge.tooltip": "Добавляет в имя небольшой индикатор, когда аватар воспроизводит звук\nИндикатор не виден, если не видны значки",
    "figura.config.log_location.1.tooltip": "Внутриигровой чат (чат также есть в журнале вывода)",
    "figura.config.format_script.4.tooltip": "Преобразовывать код в абстрактное синтаксическое дерево и реконструировать его в теоретически оптимальное представление",
    "figura.config.iris_compatibility_fix.1.tooltip": "Не применять исправления совместимости",
    "figura.config.iris_compatibility_fix.2.tooltip": "Немного сдвигать особые типы рендера, чтобы их отрисовка происходила поверх других типов рендера",
    "figura.config.action_wheel_title.7.tooltip": "Показывать по сторонам от всех действий",
    "figura.config.avatar_portrait.tooltip": "Показывает в списке игроков аватары вместо скинов",
    "figura.config.preview_head_rotation.tooltip": "Показывает поворот головы в интерфейсе предпросмотра аватара\nЕсли выключено, то аватар всегда смотрит вперёд",
    "figura.config.reduced_motion.tooltip": "Отключает все экранные анимации, делая их мгновенными\nПеремещает всплывающие подсказки в нижнюю часть экрана\nНе затрагивает анимации, у которых есть свои настройки (такие как прокрутка текста)",
    "figura.config.default_permission_level": "Уровень разрешений по умолчанию",
    "figura.config.force_smooth_avatar.tooltip": "Принудительно добавляет эффект мягкого освещения на все аватары",
    "figura.config.format_script.3.tooltip": "Как «Слабое», но сжимать всё в одну строку",
    "figura.config.rendering.tooltip": "Настройки рендеринга",
    "figura.config.action_wheel_mode.1.tooltip": "Показывать колесо действий, пока кнопка нажата",
    "figura.config.action_wheel_slots_indicator.tooltip": "Определяет расположение текста нумерации ячеек текущей страницы\nЭтот текст может быть заменён текстом выбранного действия, если у них одинаковое расположение",
    "figura.config.text_scroll_speed.tooltip": "Определяет скорость прокрутки текста",
    "figura.config.debug_mode.tooltip": "Включает режим отладки Figura, предназначенный в основном для разработки мода",
    "figura.config.redownload_assets.tooltip": "Повторно загружает обновляемые ресурсы с сервера (эмодзи, переводы и т. п.)\nОбычно ресурсы обновляются только во время запуска игры\nОбновление может привести к зависанию из-за перезагрузки ресурсов игры",
    "figura.config.clear_avatar_data.tooltip": "Очищает все сохранённые ConfigAPI-данные аватаров\nУдаляет все файлы из соответствующей папки",
    "figura.command.no_script_error": "У выбранного аватара не активен скрипт!",
    "figura.command.no_renderer_error": "У выбранного аватара не активен рендерер!",
    "figura.docs.world.get_spawn_point": "Возвращает вектор с координатами спавна мира",
    "figura.docs.world.get_build_height": "Возвращает минимальный и максимальный лимит строительства в мире в виде нескольких результатов",
    "figura.docs.world.new_item": "Парсит и создает новый ItemStack из полученной строки\nМожно задать количество и уровень повреждения",
    "figura.docs.text.function": "Функция",
    "figura.docs.globals": "Документация по глобальным переменным и функциям, которые мод добавляет в среду исполнения Lua",
    "figura.docs.enum.key_ids": "Список доступных идентификаторов горячих клавиш\nИспользуется в KeybindAPI",
    "figura.docs.enum.use_actions": "Список доступных анимаций использования предмета\nИспользуется в ItemStackAPI",
    "figura.docs.text.aliases": "Псевдонимы",
    "figura.docs.enum.render_types": "Список доступных типов рендера\nИспользуется в ModelParts",
    "figura.docs.text.description": "Описание",
    "figura.docs.enum.parent_types": "Список доступных предковых типов\nИспользуется в ModelParts",
    "figura.docs.enum.empty": "В этом перечислении нет значений!",
    "figura.docs.enum": "Содержит все специальные строковые значения",
    "figura.docs": "Команда /figura docs позволяет получить документацию по всем типам и функциям, которые мод добавляет в среду исполнения скрипта Lua",
    "figura.docs.globals.list_files": "Функция возвращает таблицу со всеми названиями файлов скриптов из папки по указанному пути\nЕсли путь не указан, функция получит названия файлов из корневой папки\nВторой аргумент (логический тип) определяет, получать ли также названия файлов из подпапок\nПуть к папке можно указать относительно текущего скрипта с помощью `./` и `../`",
    "figura.docs.text.type": "Тип",
    "figura.docs.text.field": "Поле",
    "figura.docs.text.syntax": "Синтаксис",
    "figura.docs.text.entries": "Значения",
    "figura.docs.text.not_editable": "неизменяемое",
    "figura.docs.text.returns": "возвращает",
    "figura.docs.enum.entity_poses": "Список доступных поз сущности\nИспользуется в EntityAPI",
    "figura.docs.globals.type": "Переопределённая функция type() из Lua\nДля типа, добавленного Figura, возвращает его название, которое указано в документации и глобальной переменной figuraMetatables\nДля таблицы возвращает из соответствующей метатаблицы значение __type, если оно задано",
    "figura.docs.enum.render_modes": "Список допустимых режимов рендера\nИспользуется в событии RENDER",
    "figura.docs.enum.play_states": "Список доступных состояний анимации\nИспользуется в Animation",
    "figura.docs.enum.colors": "Список встроенных в мод цветов\nИспользуется везде, где можно указать код цвета",
    "figura.docs.text.extends": "наследует",
    "figura.docs.enum.player_model_parts": "Список доступных частей модели игрока\nИспользуется в PlayerAPI",
    "figura.docs.text.editable": "изменяемое",
    "figura.docs.enum.loop_modes": "Список доступных режимов зацикливания анимации\nИспользуется в Animation",
    "figura.docs.enum.keybinds": "Список доступных клавиш\nИспользуется в KeybindAPI",
    "figura.docs.enum.post_effects": "Список доступных эффектов постобработки\nИспользуется в RendererAPI",
    "figura.docs.enum.texture_types": "Список доступных типов текстуры\nИспользуется в ModelParts",
    "figura.docs.enum.item_display_modes": "Список доступных режимов отображения предмета\nИспользуется в ItemTask",
    "figura.docs.globals.vec": "Другой вариант vectors.vec()",
    "figura.docs.globals.require": "Функция принимает названия скрипта без расширения .lua\nЕсли скрипт ещё не выполнялся, функция запустит его и вернёт возвращённое скриптом значение\nЕсли скрипт уже выполнялся, функция не запустит его и вернёт возвращённое в первый раз значение\nЕсли скрипт ничего не возвращает, функция вернёт true\nЕсли по указанному названию нет скриптов, возникнет ошибка\nНазвание можно указать как путь относительно текущего скрипта с помощью `./` и `../`",
    "figura.docs.world.get_moon_phase": "Получает текущую фазу луны, храниться в целочисленном виде",
    "figura.docs.vector3.crossed": "Возвращает новый вектор, который является перекрестным произведением этого и другого векторов",
    "figura.docs.world": "Глобальный API предназначенный для чтения информации из мира Майнкрафта\nДоступ осуществляется с использованием имени \"world\"",
    "figura.docs.world.is_loaded": "Проверяет загружен ли чанк в заданной позиции\nЕсли вам нужно получить доступ к блоку, обычно эффективнее использовать getBlockState()",
    "figura.docs.vector_n.dot": "Возвращает скалярное произведение этого вектора с другим",
    "figura.docs.vector_n.normalize": "Изменяет этот вектор так, чтобы его длина была равна 1, если только его длина изначально не была равна 0\nВозвращает self для объединения в цепочку",
    "figura.docs.vector_n.floor": "Возвращает копию этого вектора с округленными в меньшую сторону значениями",
    "figura.docs.world.get_rain_gradient": "Получает текущий градиент дождя, интерполированный от предыдущего такта к нынещнему\nСтандартное значение дельты это 1, что является текущим тактом",
    "figura.docs.vertex.set_pos": "Устанавливает вектор позиции этой вершины",
    "figura.docs.vertex.set_normal": "Устанавливает вектор нормали этой вершины",
    "figura.docs.vector_n.transform": "Преобразует этот вектор по заданной матрице и возвращает self для объединения в цепочку",
    "figura.docs.vector_n.clamp_length": "Изменяет этот вектор так, чтобы его длина была между minLength и maxLength\nЕсли длина вектора равна нулю, он остается неизмененным\nВозвращает self для объединения в цепочку",
    "figura.docs.globals.print": "Функция выводит аргументы в чат\nМожно вызывать с любым количеством аргументов (хоть и синтаксис говорит об обратном)\nКаждый новый аргумент отделяется несколькими пробелами при выводе\nВозвращает строковое представление всех значений",
    "figura.docs.world.get_time": "Получает текущее время мира\nЕсли есть значение дельты, то оно добавляется ко времени\nСтандартное значение дельты это ноль",
    "figura.docs.vector3.cross": "Устанавливает для этого вектора значение перекрестного произведения самого себя и другого вектора\nВозвращает self для объединения в цепочку",
    "figura.docs.world.get_strong_redstone_power": "Получает прямой уровень мощности редстоуна у блока в заданной позиции",
    "figura.docs.vector_n.apply_func": "Вызывает данную функцию для каждого элемента этого вектора и устанавливает значения вектора в возвращаемые значения\nТекущий индекс и его значение задаются в качестве аргументов функции\nВозвращает self для объединения в цепочку",
    "figura.docs.vertex": "Объект Вершина",
    "figura.docs.vector_n.length_squared": "Возвращает длину этого вектора в квадрате\nПодходит, когда вас интересуют только относительные длины, поскольку позволяет избежать квадратного корня",
    "figura.docs.vector_n.copy": "Создает и возвращает копию этого вектора",
    "figura.docs.vector_n.normalized": "Возвращает копию этого вектора длиной 1, если только его длина изначально не была равна 0",
    "figura.docs.vector_n.clamped": "Возвращает измененную копию этого вектора, ограниченную от minLength до maxlength\nЕсли длина вектора равна нулю, то и длинна копии тоже",
    "figura.docs.vector_n.length": "Возвращает длину этого вектора",
    "figura.docs.vector_n.to_rad": "Возвращает копию этого вектора в радианах",
    "figura.docs.vector_n.to_deg": "Возвращает копию этого вектора в градусах",
    "figura.docs.vector_n.ceil": "Возвращает копию этого вектора с округленными в большую сторону значениями",
    "figura.docs.vector_n.augmented": "Возвращает расширенную форму этого вектора\nРасширенная форма - это вектор той же длины + 1\nНовая ось будет иметь заданное значение, или же 1, если оно не указано",
    "figura.docs.world.get_time_of_day": "Получает текущее время дня\nЕсли есть значение дельты, то оно добавляется ко времени\nСтандартное значение дельты это ноль",
    "figura.docs.world.is_thundering": "Проверяет, происходит ли сейчас в мире гроза/молния",
    "figura.docs.world.get_light_level": "Получает общий уровень освещенности блока в заданной позиции",
    "figura.docs.world.get_sky_light_level": "Получает уровень освещенности блока небом в заданной позиции",
    "figura.docs.world.get_block_light_level": "Получает уровень освещения блока в заданной позиции",
    "figura.docs.world.is_open_sky": "Проверяет открыто ли небо в заданной позиции",
    "figura.docs.vertex.get_pos": "Возвращает вектор позиции этой вершины",
    "figura.docs.vertex.get_uv": "Возвращает UV вектор этой вершины",
    "figura.docs.vertex.set_uv": "Устанавливает UV вектор этой вершины",
    "figura.docs.vertex.get_normal": "Возвращает вектор нормали этой вершины",
    "figura.docs.world.get_biome": "Получает биом расположенный в заданной позиции",
    "figura.docs.world.get_block_state": "Получает BlockState блока в заданной позиции\nЕсли блок выгружен возвращает void_air",
    "figura.docs.world.get_blocks": "Получает список всех состояний блока в указанной области\nМаксимальный размер области 8 x 8 x 8",
    "figura.docs.world.get_redstone_power": "Получает уровень мощности редстоуна у блока в заданной позиции",
    "figura.docs.world.get_dimension": "Получает название измерения",
    "figura.docs.world.get_entity": "Возвращает объект EntityAPI их этой сущности UUID, или nil если сущность не была найдена",
    "figura.docs.world.get_players": "Возвращает таблицу, содержащую экземпляры Player от всех игроков в мире\nИгроки индексированы по их именам",
    "figura.docs.world.avatar_vars": "Возвращает таблицу содержащую значения сохраненные функцией \"avatar:store()\" от всех загруженных аватаров\nТаблица будет индексирована UUID аватара владельца",
    "figura.docs.world.new_block": "Парсит и создает новый BlockState из полученной строки\nДля функций состояния блока, которые зависят от его положения, может быть задана позиция в мире",
    "figura.docs.action_wheel.new_action": "Создаёт действие без добавления на страницу",
    "figura.docs.globals.world": "Глобальный объект WorldAPI и его подтипы",
    "figura.docs.wheel_page.set_action": "Задаёт действие в ячейке по указанному номеру\nЕсли номер равен -1, действие будет добавлено в первую незанятую ячейку",
    "figura.docs.globals.player": "Глобальный объект EntityAPI и его подтипы",
    "figura.docs.math": "Содержит функции, которые Figura добавляет в таблицу math стандартной библиотеки Lua",
    "figura.docs.wheel_action.set_hover_texture": "Задаёт текстуру-значок действия при наведении\nВсе значения указываются в пикселях\nUV по умолчанию — 0, 0; высота и ширина по умолчанию (height и width) — вся текстура; размер по умолчанию (scale) — 1",
    "figura.docs.action_wheel.left_click": "Функция, выполняемая при нажатии левой кнопки мыши",
    "figura.docs.action_wheel.get_page": "Возвращает страницу с указанным названием\nЕсли название не указано, возвращает таблицу со всеми созданными страницами, у которых есть название",
    "figura.docs.globals.user": "Альтернатива для player, на случай если пользователь аватара не является игроком",
    "figura.docs.wheel_action.get_title": "Получает название действия",
    "figura.docs.globals.models": "Глобальный объект с моделями аватара и его подтипы",
    "figura.docs.globals.client": "Глобальный объект ClientAPI",
    "figura.docs.math.lerp_angle": "Как math.lerp(), но значения ограничены диапазоном от 0 до 360\nРасчёт выполняется в направлении кратчайшего угла\nНапример, результатом функции между 340 и 20 с параметром 0.75 будет 10",
    "figura.docs.math.player_scale": "Константа масштабирования игрока относительно мира",
    "figura.docs.math.clamp": "Ограничивает заданное число между нижней и верхней границей (min и max)",
    "figura.docs.globals.renderer": "Глобальный объект RendererAPI",
    "figura.docs.wheel_page.should_keep_slots": "Возвращает true, если нужно сохранять номер текущей группы ячеек при добавлении этой страницы на колесо действий",
    "figura.docs.wheel_action.get_color": "Получает цвет действия",
    "figura.docs.globals.to_json": "Преобразует значение Lua в JSON-строку.\nФункции преобразуются в null.",
    "figura.docs.wheel_page.set_slots_shift": "Задаёт номер текущей группы ячеек на странице\nЗначение равно номеру любой текущей ячейки, разделённому на 8 с округлением вверх",
    "figura.docs.globals.vanilla_model": "Глобальный объект VanillaModelAPI и его подтипы",
    "figura.docs.action_wheel.get_selected": "Возвращает номер выбранного действия",
    "figura.docs.globals.events": "Глобальный объект EventsAPI и его подтипы",
    "figura.docs.wheel_page.get_action": "Получает действие в ячейке по указанному номеру",
    "figura.docs.globals.parse_json": "Преобразует JSON-строку в значение Lua.\nОбъекты и массивы соответствующим образом преобразуются в таблицы.",
    "figura.docs.globals.host": "Глобальный объект HostAPI",
    "figura.docs.wheel_page.new_action": "Добавляет действие в ячейку по указанному номеру\nЕсли номер не указан, действие будет добавлено в первую незанятую ячейку",
    "figura.docs.wheel_action.set_item": "Задаёт предмет-значок действия",
    "figura.docs.math.world_scale": "Константа масштабирования мира относительно игрока",
    "figura.docs.globals.animations": "Глобальный объект AnimationsAPI и его подтипы",
    "figura.docs.globals.avatar": "Глобальный объект AvatarAPI",
    "figura.docs.wheel_action.get_hover_color": "Получает цвет действия при наведении",
    "figura.docs.action_wheel.is_enabled": "Возвращает true, если колесо действий видно",
    "figura.docs.action_wheel.set_page": "Заменяет страницу у колеса действий на указанную или на страницу с указанным названием",
    "figura.docs.wheel_action.set_title": "Задаёт название действия",
    "figura.docs.globals.vectors": "Глобальный объект VectorsAPI и его подтипы",
    "figura.docs.globals.keybinds": "Глобальный объект KeybindAPI и его подтипы",
    "figura.docs.math.map": "Преобразует заданное значение из одного диапазона к другому\nНапример, результатом преобразования 20 из диапазона 0–200 к диапазону 100–200 будет 110",
    "figura.docs.action_wheel": "Глобальный API для настройки колеса действий аватара",
    "figura.docs.globals.figura_metatables": "Таблица с метатаблицами всех типов объектов Figura\nМетатаблицы изменяемы",
    "figura.docs.action_wheel.scroll": "Функция, выполняемая при прокрутке колеса мыши",
    "figura.docs.wheel_action": "Действие в колесе действий Figura\nДействия можно прокручивать, нажимать и переключать",
    "figura.docs.globals.matrices": "Глобальный объект MatricesAPI и его подтипы",
    "figura.docs.globals.textures": "Глобальный объект TextureAPI",
    "figura.docs.math.lerp": "Линейно интерполирует значение от первого ко второму на основе параметра t\nРаботает как с обычными числами, так и с векторами и матрицами одного типа",
    "figura.docs.math.round": "Округляет заданное число до ближайшего целого",
    "figura.docs.globals.particles": "Глобальный объект ParticleAPI",
    "figura.docs.globals.nameplate": "Глобальный объект NameplateAPI и его подтипы",
    "figura.docs.wheel_page.get_title": "Возвращает название страницы",
    "figura.docs.globals.sounds": "Глобальный объект SoundAPI",
    "figura.docs.wheel_action.set_hover_item": "Задаёт предмет-значок действия при наведении",
    "figura.docs.wheel_page": "Контейнер колеса действий, предназначенный для хранения до 8 действий",
    "figura.docs.globals.pings": "Глобальный объект PingAPI",
    "figura.docs.wheel_action.set_hover_color": "Задаёт цвет действия при наведении",
    "figura.docs.globals.config": "Глобальный объект ConfigAPI",
    "figura.docs.wheel_page.keep_slots": "Определяет, нужно ли сохранять номер текущей группы ячеек при добавлении этой страницы на колесо действий",
    "figura.docs.wheel_action.set_texture": "Задаёт текстуру-значок действия\nВсе значения указываются в пикселях\nUV по умолчанию — 0, 0; высота и ширина по умолчанию (height и width) — вся текстура; размер по умолчанию (scale) — 1",
    "figura.docs.action_wheel.right_click": "Функция, выполняемая при нажатии правой кнопки мыши",
    "figura.docs.globals.action_wheel": "Глобальный объект ActionWheelAPI и его подтипы",
    "figura.docs.wheel_action.set_color": "Задаёт цвет действия",
    "figura.docs.action_wheel.execute": "Выполняет действие по заданному номеру\nЕсли номер равен null, функция выполняет текущее выбранное действие\nВторой параметр определяет, следует ли выполнять действие левой или правой кнопки мыши",
    "figura.docs.vector_n.y": "Вторая координата этого вектора\nТакже может быть получена с индексами \"g\" и [2]",
    "figura.docs.action_wheel.get_selected_action": "Возвращает выбранное действие",
    "figura.docs.wheel_action.right_click": "Функция, выполняемая при нажатии правой кнопки мыши\nУ функции один аргумент\nПервый аргумент — действие",
    "figura.docs.wheel_action.set_on_left_click": "Задаёт функцию, выполняемую при нажатии левой кнопки мыши\nУ функции один аргумент\nПервый аргумент — действие",
    "figura.docs.wheel_action.set_on_right_click": "Задаёт функцию, выполняемую при нажатии правой кнопки мыши\nУ функции один аргумент\nПервый аргумент — действие",
    "figura.docs.vector2": "Вектор, содержащий 2 числа\nМожет быть создан с использованием функций \"vectors\" api",
    "figura.docs.math.short_angle": "Возвращает кратчайший угол между двумя углами\nНапример, кратчайшим углом между 350 и 0 градусами будет угол в 10 градусов",
    "figura.docs.action_wheel.new_page": "Создаёт страницу колеса действий\nЕсли задано название, его можно будет использовать в других функциях\nЕсли не задано название, функция только вернёт страницу",
    "figura.docs.vector4": "Вектор, содержащий 4 числа\nМожет быть создан с использованием функций \"vectors\" api",
    "figura.docs.math.sign": "Возвращает знак заданного числа\nВозвращает 1, если число положительное; -1, если оно отрицательное; и 0, если оно равно 0",
    "figura.docs.action_wheel.get_current_page": "Возвращает текущую страницу колеса действий или nil, если такой страницы нет",
    "figura.docs.wheel_page.set_keep_slots": "Задаёт, нужно ли сохранять номер текущей группы ячеек при добавлении этой страницы на колесо действий",
    "figura.docs.wheel_page.get_actions": "Получает таблицу действий в группе ячеек по указанному номеру\nЕсли номер не указан, возвращает все действия на странице\nНумерация индексов в таблице соответствует номерам ячеек; пустые ячейки содержат nil",
    "figura.docs.wheel_action.untoggle": "Функция, выполняемая при переходе в выключенное состояние\nУ функции два аргумента\nПервый аргумент — состояние включённости\nВторой аргумент — действие",
    "figura.docs.wheel_action.scroll": "Функция, выполняемая при прокрутке колеса мыши\nУ функции два аргумента\nПервый аргумент — направление прокрутки\nВторой аргумент — действие",
    "figura.docs.wheel_page.get_slots_shift": "Получает номер текущей группы ячеек на странице\nЗначение равно номеру любой текущей ячейки, разделённому на 8 с округлением вверх",
    "figura.docs.wheel_action.toggle": "Функция, выполняемая при переходе во включённое состояние (и при переходе в выключенное состояние, если отдельная функция не задана)\nУ функции два аргумента\nПервый аргумент — состояние включённости\nВторой аргумент — действие",
    "figura.docs.wheel_action.left_click": "Функция, выполняемая при нажатии левой кнопки мыши\nУ функции один аргумент\nПервый аргумент — действие",
    "figura.docs.vector_n.unpack": "Возвращает каждое из значений этого вектора в качестве аргумента",
    "figura.docs.vector3": "Вектор, содержащий 3 числа\nМожет быть создан с использованием функций \"vectors\" api",
    "figura.docs.vector_n.x": "Первая координата этого вектора\nТакже может быть получена с помощью индексов \"r\" и [1]",
    "figura.docs.vector_n.z": "Третья координата этого вектора\nТакже может быть получена с помощью индексов \"b\" и [3]",
    "figura.docs.vector_n.w": "Четвертая координата этого вектора\nТакже может быть получена с помощью индексов \"a\" и [4]",
    "figura.docs.animation.get_name": "Возвращает название анимации",
    "figura.docs.wheel_action.set_toggle_color": "Задаёт цвет действия во включённом состоянии",
    "figura.docs.avatar.get_badges": "Получает значки пользователя в виде строки.",
    "figura.docs.animation.set_playing": "Функция, объединяющая play() и stop()\nЕсли указано true, анимация будет запущена; если false — остановлена",
    "figura.docs.animation.restart": "Перезапускает анимацию\nЗапускает анимацию, если она остановлена\nЭквивалентно запуску анимации с предварительной остановкой",
    "figura.docs.animation.set_length": "Задаёт продолжительность анимации (в секундах)",
    "figura.docs.animations.stop_all": "Останавливает все запущенные (и приостановленные) анимации",
    "figura.docs.animation.set_loop_delay": "Задаёт время ожидания между циклами анимации",
    "figura.docs.wheel_action.get_toggle_title": "Получает название действия во включённом состоянии",
    "figura.docs.animation.get_start_delay": "Получает время ожидания перед запуском анимации",
    "figura.docs.avatar.get_current_instructions": "Получает текущее количество выполненных аватаром инструкций\nКоличество сбрасывается до 0 при возникновении определённых событий",
    "figura.docs.animation.get_priority": "Получает приоритет анимации",
    "figura.docs.avatar.get_max_world_tick_count": "Получает максимальное количество инструкций события WORLD_TICK, разрешённое зрителем",
    "figura.docs.animation.get_play_state": "Получает состояние анимации",
    "figura.docs.animation.name": "Название анимации",
    "figura.docs.animation.new_code": "Задаёт код, который будет выполнен в указанный момент анимации\nПерезаписывает предыдущий код у момента (если есть)",
    "figura.docs.avatar.get_max_render_count": "Получает максимальное количество инструкций событий RENDER и POST_RENDER, разрешённое зрителем",
    "figura.docs.animation.set_speed": "Задаёт скорость анимации\nАнимация с отрицательной скоростью запускается в обратном порядке",
    "figura.docs.avatar.has_texture": "Возвращает true, если у аватара есть текстуры",
    "figura.docs.animation.get_blend": "Получает коэффициент смешивания ключевых кадров анимации",
    "figura.docs.animation.get_length": "Получает продолжительность анимации",
    "figura.docs.animation.get_override_scale": "Возвращает true, если анимация переопределяет ванильный размер своих частей",
    "figura.docs.avatar.get_tick_count": "Получает количество инструкций события TICK аватара за последний такт",
    "figura.docs.wheel_action.set_toggle_texture": "Задаёт текстуру-значок действия во включённом состоянии\nВсе значения указываются в пикселях\nUV по умолчанию — 0, 0; высота и ширина по умолчанию (height и width) — вся текстура; размер по умолчанию (scale) — 1",
    "figura.docs.animation.set_offset": "Задаёт время пропуска анимации\nВремя пропускается в каждом цикле",
    "figura.docs.animation.set_blend": "Задаёт коэффициент смешивания ключевых кадров анимации",
    "figura.docs.wheel_action.set_toggled": "Задаёт состояние включённости действия",
    "figura.docs.avatar.get_version": "Получает версию Figura из avatar.json",
    "figura.docs.wheel_action.get_toggle_color": "Получает цвет действия во включённом состоянии",
    "figura.docs.avatar.get_size": "Получает размер файла аватара в байтах",
    "figura.docs.avatar.has_script_error": "Возвращает true, если скрипт остановлен из-за ошибки (немного бесполезно, лол)",
    "figura.docs.animation.set_override_pos": "Задаёт, должна ли анимация переопределять ванильную позицию своих частей",
    "figura.docs.animations.get_animations": "Возвращает таблицу со всеми анимациями",
    "figura.docs.animation.set_priority": "Задаёт приоритет анимации\nВместо смешивания анимация с высоким приоритетом переопределяет анимации с низким",
    "figura.docs.avatar.get_uuid": "Возвращает UUID владельца аватара",
    "figura.docs.animation.play": "Запускает анимацию\nПродолжает анимацию, если она приостановлена",
    "figura.docs.animation.stop": "Останавливает анимацию",
    "figura.docs.avatar.get_max_complexity": "Получает максимальную сложность модели (количество граней), разрешённую зрителем",
    "figura.docs.animation.animation.is_stopped": "Возвращает true, если анимация остановлена",
    "figura.docs.animation.set_override_rot": "Задаёт, должна ли анимация переопределять ванильный поворот своих частей",
    "figura.docs.animation.get_loop": "Получает режим зацикливания анимации",
    "figura.docs.animation.set_override": "Задаёт, должна ли анимация переопределять ванильные поворот, позицию и размер своих частей\nЭквивалентно вызову overrideRot(), overridePos() и overrideScale() вместе",
    "figura.docs.avatar.get_max_world_render_count": "Получает максимальное количество инструкций событий WORLD_RENDER и POST_WORLD_RENDER, разрешённое зрителем",
    "figura.docs.animation.get_loop_delay": "Получает время ожидания между циклами анимации",
    "figura.docs.animation.get_speed": "Получает скорость анимации",
    "figura.docs.animation.animation.is_playing": "Возвращает true, если анимация запущена",
    "figura.docs.avatar.get_complexity": "Получает текущую сложность аватара",
    "figura.docs.animation.get_time": "Получает текущее время анимации",
    "figura.docs.animation": "Анимация Blockbench",
    "figura.docs.animation.pause": "Приостанавливает анимацию",
    "figura.docs.avatar.get_init_count": "Получает количество инструкций инициализации аватара",
    "figura.docs.wheel_action.is_toggled": "Возвращает true, если действие находится во включённом состоянии",
    "figura.docs.wheel_action.set_toggle_item": "Задаёт предмет-значок действия во включённом состоянии",
    "figura.docs.avatar.get_name": "Получает название аватара",
    "figura.docs.avatar.get_max_init_count": "Получает максимальное количество инструкций инициализации, разрешённое зрителем",
    "figura.docs.avatar.get_max_sounds": "Получает максимальное количество звуков, разрешённое зрителем",
    "figura.docs.wheel_action.set_on_scroll": "Задаёт функцию, выполняемую при прокрутке колеса мыши\nУ функции два аргумента\nПервый аргумент — направление прокрутки\nВторой аргумент — действие",
    "figura.docs.avatar.get_world_render_count": "Получает количество инструкций событий WORLD_RENDER и POST_WORLD_RENDER аватара за последний кадр",
    "figura.docs.animation.animation.is_paused": "Возвращает true, если анимация приостановлена",
    "figura.docs.animation.set_time": "Задаёт текущее время анимации",
    "figura.docs.animation.set_start_delay": "Задаёт время ожидания перед запуском анимации\nВо время ожидания анимация считается запущенной",
    "figura.docs.avatar.get_authors": "Получает авторов аватара в виде строки",
    "figura.docs.animations.get_playing": "Возвращает таблицу со всеми запущенными анимациями\nПринимает булево значение если оно равно true, таблицу будут включены анимации в состоянии HOLDING.",
    "figura.docs.animation.set_override_scale": "Задаёт, должна ли анимация переопределять ванильный размер своих частей",
    "figura.docs.avatar.get_permission_level": "Возвращает текущий уровень разрешений для аватара",
    "figura.docs.avatar.get_max_tick_count": "Получает максимальное количество инструкций события TICK, разрешённое зрителем",
    "figura.docs.avatar.get_max_particles": "Получает максимальное количество частиц, разрешённое зрителем",
    "figura.docs.wheel_action.set_on_untoggle": "Задаёт функцию, выполняемую при переходе в выключенное состояние\nУ функции два аргумента\nПервый аргумент — состояние включённости\nВторой аргумент — действие",
    "figura.docs.avatar.get_color": "Получает текущий цвет аватара, который используется в качестве темы",
    "figura.docs.wheel_action.set_toggle_title": "Задаёт название действия во включённом состоянии",
    "figura.docs.avatar": "Глобальный API, содержащий функции для работы с метаданными аватара и получения информации о скрипте",
    "figura.docs.animations": "Глобальный API для управления анимациями Blockbench",
    "figura.docs.animation.get_offset": "Получает время пропуска анимации",
    "figura.docs.animation.get_override_rot": "Возвращает true, если анимация переопределяет ванильный поворот своих частей",
    "figura.docs.animation.set_loop": "Задаёт режим зацикливания анимации",
    "figura.docs.avatar.get_world_tick_count": "Получает количество инструкций события WORLD_TICK аватара за последний такт",
    "figura.docs.avatar.get_remaining_sounds": "Получает количество звуков, которое ещё можно воспроизвести",
    "figura.docs.animation.get_override_pos": "Возвращает true, если анимация переопределяет ванильную позицию своих частей",
    "figura.docs.vanilla_part.set_scale": "Установить масштаб этой части",
    "figura.docs.vanilla_group_part.set_visible": "Устанавливает видимость этого и дочерних объектов",
    "figura.docs.vectors.vec4": "Создает и возвращает Vector4 с заданными значениями\nПустые значения будут нулями",
    "figura.docs.vectors.vec2": "Создает и возвращает Vector2 с заданными значениями\nПустые значения становятся нулевыми",
    "figura.docs.globals.print_table": "Первый аргумент — таблица или userdata типа, добавленного Figura\nВыводит таблицу в чат в раскрытом виде\nДля userdata функция перед выводом преобразует значение в таблицу или строку\nАргумент maxDepth — максимальная глубина вложенности выводимых в раскрытом виде таблиц\nЗначение по умолчанию для maxDepth равно 1\nЕсли значение silent равно true, функция ничего не выведет в чат, а только вернёт строку",
    "figura.docs.vectors": "Глобальный API, предоставляющий функции, предназначенные для создания и других манипуляций с векторами\nДоступ осуществляется с помощью имени \"vectors\"",
    "figura.docs.avatar.store": "Сохраняет заданную пару ключ-значение в метаданные аватара\nКто-то другой может получить эти метаданные в своём скрипте с помощью world.avatarVars()\nКлюч должен быть строкой",
    "figura.docs.avatar.get_render_count": "Получает количество инструкций событий RENDER и POST_RENDER аватара за последний кадр",
    "figura.docs.globals.print_json": "Выводит текстовый компонент (JSON-строку) в чат без каких-либо надписей в начале сообщения\nМожно вызывать с любым количеством аргументов (хоть и синтаксис говорит об обратном)\nКаждый новый аргумент присоединяется к предыдущему при выводе\nВозвращает вывод чата как строку",
    "figura.docs.wheel_action.set_on_toggle": "Задаёт функцию, выполняемую при переходе во включённое состояние (и при переходе в выключенное состояние, если отдельная функция не задана)\nУ функции два аргумента\nПервый аргумент — состояние включённости\nВторой аргумент — действие",
    "figura.docs.avatar.get_remaining_particles": "Получает количество частиц, которое ещё можно создать",
    "figura.docs.avatar.set_color": "Задает текущую цветовую гамму вашего аватара, используемую в качестве темы вашего аватара. Если у пользователя есть специальный значок, он может ввести название значка, чтобы задать для него цвет.",
    "figura.docs.avatar.get_entity_name": "Получает имя сущности аватара\nЕсли не получилось, получает название аватара",
    "figura.docs.avatar.get_entity_init_count": "Получает количество инструкций события ENTITY_INIT аватара",
    "figura.docs.vanilla_group_part.set_rot": "Устанавливает поворот этого и дочерних объектов",
    "figura.docs.vanilla_group_part.set_scale": "Установить масштаб этого и дочерних объектов",
    "figura.docs.vectors.vec3": "Создает и возвращает Vector3 с заданными значениями\nПустые значения становятся нулевыми",
    "figura.docs.vectors.rgb_to_int": "Конвертирует заданный цвет из формата RGB в число",
    "figura.docs.vectors.int_to_rgb": "Конвертирует цвет из числа в формат RGB",
    "figura.docs.vector_n.reset": "Возвращает этот вектор к нулевым значениям и возвращает сам себя для цепочки",
    "figura.permissions.value.buffer_size": "Размер буфера",
    "figura.permissions.value.buffer_size.tooltip": "Максимальный размер создаваемого аватаром буфера байтов",
    "figura.config.networking": "Сеть",
    "figura.config.networking_restriction.1.tooltip": "Можно использовать только ссылки, проходящие сетевой фильтр",
    "figura.permissions.value.networking.tooltip": "Разрешает аватару использовать сетевые функции",
    "figura.config.networking.tooltip": "Раздел, посвящённый сетевым функциям Figura.\nЭти функции могут предоставлять опасность, поэтому у них такие продвинутые настройки.\nFigura не несёт ответственности за использование сетевых функций.",
    "figura.config.networking_restriction.3.tooltip": "Можно использовать любые ссылки",
    "figura.config.networking_logging.1.tooltip": "Записывать только в файл",
    "figura.config.networking_logging.3.tooltip": "Записывать в файл, журнал игры и чат",
    "figura.gui.network_filter.list.filter_mode.2.tooltip": "Ссылки пройдут фильтр, если они начинаются с источника фильтра",
    "figura.gui.network_filter.list.filter_mode.4.tooltip": "Ссылки пройдут фильтр, если они соответствуют шаблону RegEx, указанному в источнике фильтра",
    "figura.permissions.value.cancel_sounds": "Отмена звуков",
    "figura.permissions.value.cancel_sounds.tooltip": "Определяет, может ли аватар останавливать воспроизведение любого звука с помощью события ON_PLAY_SOUND",
    "figura.permissions.value.buffers_count": "Количество буферов",
    "figura.permissions.value.buffers_count.tooltip": "Максимальное количество создаваемых аватаром буферов",
    "figura.permissions.value.networking": "Сеть",
    "figura.permissions.value.max_sockets_count": "Сокетов",
    "figura.permissions.value.max_sockets_count.tooltip": "Максимальное количество открытых сокетов",
    "figura.badges.no_permissions.cancel_sounds": "Невозможно отменить звук",
    "figura.gui.network_filter": "Сетевой фильтр",
    "figura.gui.network_filter.list.filter_mode.0": "Равно",
    "figura.gui.network_filter.list.filter_mode.0.tooltip": "Ссылки пройдут фильтр, если они полностью соответствуют источнику фильтра",
    "figura.gui.network_filter.list.filter_mode.1": "Содержит",
    "figura.gui.network_filter.list.filter_mode.1.tooltip": "Ссылки пройдут фильтр, если они полностью содержат источник фильтра",
    "figura.gui.network_filter.list.filter_mode.2": "Начинается с",
    "figura.gui.network_filter.list.filter_mode.3": "Заканчивается на",
    "figura.gui.network_filter.list.filter_mode.3.tooltip": "Ссылки пройдут фильтр, если они заканчиваются источником фильтра",
    "figura.gui.network_filter.list.filter_mode.4": "RegEx",
    "figura.gui.network_filter.list.add_filter_entry": "Добавить запись фильтра",
    "figura.config.allow_networking": "Доступ к сети",
    "figura.config.allow_networking.tooltip": "Разрешает аватару использовать сеть, если у него есть соответствующие разрешения",
    "figura.config.networking_restriction": "Ограничение к сети",
    "figura.config.networking_restriction.tooltip": "Определяет тип ограничения к сети",
    "figura.config.networking_restriction.1": "Белый список",
    "figura.config.networking_restriction.2": "Чёрный список",
    "figura.config.networking_restriction.2.tooltip": "Можно использовать любые ссылки, кроме ссылок, проходящих сетевой фильтр",
    "figura.config.networking_restriction.3": "Нет",
    "figura.config.network_filter": "Сетевой фильтр",
    "figura.config.network_filter.tooltip": "Список сетевых фильтров",
    "figura.config.networking_logging": "Вывод сети",
    "figura.config.networking_logging.tooltip": "Режим вывода сети",
    "figura.config.networking_logging.1": "Файл",
    "figura.config.networking_logging.2": "Файл + журнал",
    "figura.config.networking_logging.2.tooltip": "Записывать в файл и журнал игры",
    "figura.config.networking_logging.3": "Файл + журнал + чат",
    "figura.config.networking_logging.4": "Нет",
    "figura.config.networking_logging.4.tooltip": "Не записывать вывод",
    "figura.docs.enum.string_encodings": "Список доступных кодировок\nИспользуется в Buffer",
    "figura.docs.enum.block_raycast_types": "Список доступных типов рейкаста до блока\nИспользуется при обработке блоков в raycast:block()",
    "figura.docs.enum.fluid_raycast_types": "Список доступных типов рейкаста до жидкости\nИспользуется при обработке жидкости в raycast:block()",
    "figura.docs.enum.heightmap_types": "Список доступных типов карты высот\nИспользуется в world.getHeight()",
    "figura.docs.enum.registries": "Список доступных реестров\nИспользуется в client:getRegistry()",
    "figura.docs.globals.data": "Глобальный объект DataAPI",
    "figura.docs.globals.net": "Глобальный объект NetworkingAPI",
    "figura.docs.globals.json": "Глобальный объект JsonAPI",
    "figura.docs.globals.file": "Глобальный объект FileAPI",
    "figura.docs.globals.resources": "Глобальный объект ResourcesAPI",
    "figura.docs.globals.raycast": "Глобальный объект RaycastAPI",
    "figura.docs.avatar.get_animation_complexity": "Получает текущую сложность анимации аватара",
    "figura.docs.avatar.get_max_animation_complexity": "Получает максимальную сложность анимации (количество используемых каналов), разрешённую зрителем",
    "figura.docs.avatar.get_max_texture_size": "Получает максимальные размеры текстур, разрешённые зрителем",
    "figura.docs.avatar.get_animation_count": "Получает количество инструкций Lua в анимациях",
    "figura.docs.avatar.get_max_animation_count": "Получает максимальное количество инструкций Lua в анимациях, разрешённое зрителем",
    "figura.docs.avatar.get_buffers_count": "Получает количество открытых аватаром буферов",
    "figura.docs.avatar.get_max_buffers_count": "Получает максимальное количество буферов, разрешённое зрителем",
    "figura.docs.avatar.can_edit_nameplate": "Возвращает true, если зритель разрешает изменение имени",
    "figura.docs.biome": "Прокси-класс биома\nОбъект биома можно получить через WorldAPI\nТакже содержит сохранённую позицию, необходимую для некоторых функций",
    "figura.docs.biome.get_sky_color": "Получает RGB-вектор цвета неба в биоме",
    "figura.docs.avatar.can_have_custom_skull": "Возвращает true, если зритель разрешает аватару изменение модели блока головы игрока",
    "figura.docs.biome.set_pos": "Задаёт сохранённую позицию биома\nСохранённая позиция применяется внутри некоторых прокси-функций",
    "figura.docs.biome.get_tags": "Получает теги биома",
    "figura.network.header_disabled": "Заголовок %s отключен, пропускаем!",
    "figura.docs.avatar.can_render_offscreen": "Возвращает true, если зритель разрешает отрисовку аватара вне поля зрения",
    "figura.docs.avatar.get_nbt": "Получает информацию об аватаре в формате NBT",
    "figura.docs.avatar.get_max_buffer_size": "Получает максимальный размер буфера байтов, разрешённый зрителем",
    "figura.docs.biome.get_pos": "Возвращает сохранённую позицию биома\nСохранённая позиция применяется внутри некоторых прокси-функций",
    "figura.docs.biome.get_temperature": "Получает температуру биома",
    "figura.docs.biome.get_foliage_color": "Получает RGB-вектор цвета листьев в биоме",
    "figura.docs.biome.get_grass_color": "Получает RGB-вектор цвета травы в биоме",
    "figura.docs.avatar.get_sockets_count": "Получает количество открытых аватаром сокетов",
    "figura.docs.avatar.get_max_sockets_count": "Получает максимальное количество сокетов, разрешённое зрителем",
    "figura.docs.avatar.can_edit_vanilla_model": "Возвращает true, если зритель разрешает изменение ванильной модели",
    "figura.docs.avatar.can_use_custom_sounds": "Возвращает true, если зритель разрешает воспроизведение собственных звуков",
    "figura.docs.biome.id": "Идентификатор биома",
    "figura.docs.biome.get_id": "Возвращает идентификатор биома",
    "figura.docs.biome.get_precipitation": "Получает тип осадков в биоме\nВозможные значения: NONE, RAIN, SNOW",
    "figura.docs.biome.get_downfall": "Получает влажность биома",
    "figura.docs.biome.get_fog_color": "Получает RGB-вектор цвета тумана в биоме",
    "figura.docs.biome.is_hot": "Возвращает true, если в биоме горячо",
    "figura.docs.blockstate.id": "Идентификатор блока",
    "figura.docs.blockstate.get_id": "Возвращает идентификатор блока",
    "figura.docs.blockstate.get_properties": "Возвращает таблицу со свойствами блока",
    "figura.docs.blockstate.get_pos": "Возвращает сохранённую позицию блока\nСохранённая позиция применяется внутри некоторых прокси-функций",
    "figura.docs.biome.get_water_color": "Получает RGB-вектор цвета воды в биоме",
    "figura.docs.biome.get_water_fog_color": "Получает RGB-вектор цвета тумана под водой в биоме",
    "figura.docs.biome.is_cold": "Возвращает true, если в биоме холодно",
    "figura.docs.blockstate": "Прокси-класс состояния блока\nОбъект можно получить через WorldAPI\nТакже содержит сохранённую позицию, необходимую для некоторых функций",
    "figura.docs.blockstate.properties": "Таблица со свойствами блока\nЕсли у блока нет свойств, таблица пуста",
    "figura.docs.blockstate.get_comparator_output": "Получает уровень сигнала компаратора от блока",
    "figura.docs.blockstate.is_solid_block": "Возвращает true, если блок твёрдый",
    "figura.docs.blockstate.get_hardness": "Получает прочность блока",
    "figura.docs.blockstate.has_emissive_lighting": "Возвращает true, если блок использует светящиеся текстуры",
    "figura.docs.blockstate.has_block_entity": "Возвращает true, если у блока есть соответствующий блок-сущность",
    "figura.docs.blockstate.set_pos": "Задаёт сохранённую позицию состояния блока\nСохранённая позиция применяется внутри некоторых прокси-функций",
    "figura.docs.blockstate.is_translucent": "Возвращает true, если блок пропускает свет от неба",
    "figura.docs.blockstate.get_opacity": "Получает непрозрачность блока\nНепрозрачность определяет эффективность воздействия блока на уровень освещённости",
    "figura.docs.blockstate.get_map_color": "Получает цвет блока на карте в виде RGB-вектора с диапазоном чисел от 0 до 1",
    "figura.docs.blockstate.is_full_cube": "Возвращает true, если хитбокс блока занимает весь куб",
    "figura.docs.blockstate.get_blast_resistance": "Получает уровень взрывоустойчивости у блока",
    "figura.docs.blockstate.get_velocity_multiplier": "Получает множитель скорости у блока\n(В игре изменён у песка душ и блоков мёда)",
    "figura.docs.blockstate.get_jump_velocity_multiplier": "Получает множитель высоты прыжка у блока\n(В игре изменён у блоков мёда)",
    "figura.docs.blockstate.is_opaque": "Возвращает true, если блок непрозрачный",
    "figura.docs.event": "Перехватчик определённого внутриигрового события\nК перехватчику можно привязать функции, чтобы затем они выполнялись при возникновении соответствующего события",
    "figura.docs.blockstate.emits_redstone_power": "Возвращает true, если блок может подавать сигнал редстоуна",
    "figura.docs.blockstate.get_luminance": "Получает уровень светимости у блока",
    "figura.docs.blockstate.to_state_string": "Возвращает состояние блока как строку, применяемую в командах",
    "figura.docs.blockstate.get_collision_shape": "Возвращает таблицу с параллелепипедами, отвечающими за коллизию блока\nКаждый параллелепипед — это таблица с двумя векторами, определяющими противоположные углы",
    "figura.docs.events.resource_reload": "Событие RESOURCE_RELOAD выполняется при перезагрузке клиентских ресурсов (это может пригодится для обновления связанных с ресурсами текстур аватара)",
    "figura.docs.blockstate.get_fluid_tags": "Получает таблицу с тегами жидкости блока",
    "figura.docs.events.get_events": "Возвращает таблицу со всеми типами событий",
    "figura.docs.blockstate.as_item": "Возвращает соответствующий блоку предмет\nЕсли такого предмета нет, возвращает воздух",
    "figura.docs.blockstate.get_sounds": "Получает таблицу с высотой, громкостью и названиями звуков блока",
    "figura.docs.blockstate.get_friction": "Получает уровень трения у блока\n(В игре изменён у блоков слизи и льда)",
    "figura.docs.blockstate.has_collision": "Возвращает true, если у блока есть коллизия",
    "figura.docs.blockstate.get_tags": "Возвращает таблицу с тегами блока",
    "figura.docs.http_response": "Объект, содержащий HTTP-ответ",
    "figura.docs.http_request_builder.get_method": "Возвращает метод запроса",
    "figura.docs.http_request_builder.get_headers": "Возвращает таблицу со всеми заголовками, установленными для этого запроса",
    "figura.docs.http_response.get_response_code": "Возвращает код ответа",
    "figura.docs.http_request_builder.get_uri": "Возвращает URI запроса",
    "figura.docs.http_request_builder.get_body": "Возвращает содержимое запроса",
    "figura.docs.http_response.get_headers": "Возвращает заголовки ответа",
    "figura.docs.blockstate.get_outline_shape": "Возвращает таблицу с параллелепипедами, отвечающими за контур блока\nКаждый параллелепипед — это таблица с двумя векторами, определяющими противоположные углы",
    "figura.docs.blockstate.get_entity_data": "Возвращает NBT-данные соответствующего блока-сущности в виде таблицы\nПоскольку мод работает на стороне клиента, таблица фактически может не содержать подлинных NBT-данных, хранящихся на сервере",
    "figura.docs.http_request_builder.send": "Отправляет этот запрос и возвращает будущий объект, который будет содержать объект ответа, как только запрос будет выполнен",
    "figura.docs.future": "Объект, содержащий результат операции, которая не может быть завершена немедленно",
    "figura.docs.future.is_done": "Проверяет, выполнено ли future успешно или с ошибкой",
    "figura.docs.future.has_error": "Проверяет, произошла ли ошибка во время этого будущего выполнения",
    "figura.docs.socket": "TCP сокет",
    "figura.docs.socket.get_input_stream": "Возвращает входной поток, привязанный к этому сокету",
    "figura.docs.socket.get_output_stream": "Возвращает выходной поток, привязанный к этому сокету",
    "figura.docs.socket.get_port": "Возвращает порт, к которому подключен этот сокет",
    "figura.docs.socket.is_connected": "Проверяет, подключен ли этот сокет",
    "figura.docs.socket.is_closed": "Проверяет, закрыт ли этот сокет",
    "figura.docs.vanilla_part.get_scale": "Получаем заданный масштаб этой детали\nВозвращает значение, установленное функцией \"set\"",
    "figura.docs.vanilla_part.get_offset_scale": "Возвращает смещение масштаба этой детали",
    "figura.docs.vanilla_part.set_offset_scale": "Смещает масштаб этой части, умножая на ванильное значение",
    "figura.docs.socket.close": "Закрывает этот сокет",
    "figura.docs.future.get_value": "Возвращает значение этого объекта future, если future был успешно выполнен",
    "figura.docs.socket.get_host": "Возвращает хост, к которому подключен этот сокет",
    "figura.docs.client.get_version_name": "Получает у клиента полное наименование версии игры",
    "figura.docs.client.get_client_brand": "Получает «тип версии» клиента: обычно название клиентского загрузчика модов",
    "figura.docs.blockstate.is_air": "Возвращает true, если блок является воздухом",
    "figura.docs.client.is_paused": "Возвращает true, если игра приостановлена",
    "figura.docs.client.get_version": "Получает у клиента версию игры",
    "figura.docs.client.get_server_brand": "Получает тип сервера, к которому подключён клиент\nВ одиночной игре возвращает «Integrated»",
    "figura.docs.client.get_fps_string": "Получает FPS клиента как строку на экране отладки\nСодержит информацию о текущем и максимальном FPS, вертикальной синхронизации, типах облаков и радиусе смешивания биомов",
    "figura.docs.blockstate.get_textures": "Возвращает таблицу с текстурами блока\nКлюч таблицы — грань, по которой происходит отбраковка текстур; значение — подтаблица, содержащая пути к этим текстурам\nДля некоторых блоков (таких как вода) возвращает пустую таблицу",
    "figura.docs.client.is_snapshot": "Возвращает true, если клиент запущен на версии снапшота",
    "figura.docs.client.get_fps": "Получает текущее значение FPS клиента\nВозвращает 0, если счётчик FPS ещё не определён (или если компьютер совсем не справляется)",
    "figura.docs.client": "Глобальный API для взаимодействия с клиентом игры\nБольшинство функций возвращают данные, которые можно найти на экране отладки (F3)",
    "figura.docs.client.get_entity_statistics": "Получает информацию о загруженных в клиенте сущностях как строку на экране отладки",
    "figura.docs.client.get_chunk_statistics": "Получает информацию о чанке, в котором стоит игрок, как строку на экране отладки",
    "figura.docs.client.get_fov": "Получает текущее поле зрения из настроек клиента (без учёта эффектов, изменяющих поле зрения)",
    "figura.docs.client.get_particle_count": "Получает текущее количество загруженных на клиенте частиц",
    "figura.docs.client.is_hud_enabled": "Возвращает true, если интерфейс игры отображается (F1 скрывает интерфейс)",
    "figura.docs.client.get_entity_count": "Получает текущее количество загруженных на клиенте сущностей",
    "figura.docs.client.get_date": "Получает таблицу с информацией о текущем времени клиента",
    "figura.docs.client.has_shader_pack_mod": "Возвращает true, если на клиенте установлен мод для шейдеров",
    "figura.docs.client.compare_versions": "Сравнивает, если одна версия меньше (-1), равна (0) или больше (1) другой",
    "figura.docs.client.get_active_resource_packs": "Получает таблицу с названиями активных наборов ресурсов",
    "figura.docs.client.get_sound_statistics": "Получает информацию о текущих воспроизводимых в клиенте звуках как строку на экране отладки",
    "figura.docs.client.get_text_height": "Получает высоту заданного текста в пикселях",
    "figura.docs.client.get_window_size": "Получает размеры окна клиента как вектор с шириной и высотой в пикселях",
    "figura.docs.client.get_figura_version": "Получает версию Figura, установленную на клиенте",
    "figura.docs.client.get_max_memory": "Получает максимальное количество памяти в байтах, которое JVM может выделить клиенту",
    "figura.docs.client.is_window_focused": "Возвращает true, если окно игры находится в фокусе",
    "figura.docs.client.get_system_time": "Получает текущее системное время в миллисекундах",
    "figura.docs.client.get_scaled_window_size": "Получает размеры окна игры, выраженные во внутренних единицах интерфейса",
    "figura.docs.client.get_camera_pos": "Получает позицию камеры",
    "figura.docs.client.get_camera_rot": "Получает поворот камеры",
    "figura.docs.client.get_text_width": "Получает ширину заданного текста в пикселях\nДля многострочного текста возвращает наибольшую ширину текста одной строки",
    "figura.docs.client.get_active_lang": "Получает код текущего языка игры",
    "figura.docs.client.is_mod_loaded": "Возвращает true, если мод с указанным идентификатором загружен",
    "figura.docs.client.has_shader_pack": "Возвращает true, если сейчас используются шейдеры",
    "figura.docs.client.generate_uuid": "Генерирует случайный UUID",
    "figura.docs.client.uuid_to_int_array": "Преобразует строковое представление UUID в массив целых чисел и возвращает этот массив четырьмя значениями",
    "figura.docs.client.get_viewer": "Получает игрока на запущенном клиенте",
    "figura.docs.client.get_gui_scale": "Получает текущий размер интерфейса из настроек клиента\nЕсли используется «Авто», возвращает фактический размер",
    "figura.docs.client.has_resource": "Проверяет, существует ли определенный ресурс в клиентских ресурсах",
    "figura.docs.client.get_current_effect": "Получает путь к текущему шейдеру, применяемому при наблюдении от лица некоторых сущностей\nОбычно возвращает nil",
    "figura.docs.client.get_used_memory": "Получает текущее используемое клиентом количество памяти в байтах",
    "figura.docs.client.get_allocated_memory": "Получает текущее выделенное клиенту количество памяти в байтах",
    "figura.docs.client.is_debug_overlay_enabled": "Возвращает true, если открыт экран отладки",
    "figura.docs.client.get_java_version": "Получает текущую версию Java, которую использует клиент",
    "figura.docs.client.get_mouse_pos": "Получает позицию курсора относительно левого верхнего угла окна клиента",
    "figura.docs.client.get_shader_pack_name": "Получает название текущих шейдеров; возвращает пустую строку, если шейдеры не используются.",
    "figura.docs.client.get_camera_dir": "Получает единичный вектор направления камеры",
    "figura.docs.client.get_text_dimensions": "Получает ширину и высоту заданного текста в пикселях с возможностью включить переносы строк (wrap) и задать максимальную ширину (maxWidth)",
    "figura.docs.client.get_camera_entity": "Получает сущность, к которой привязана камера: себя или сущность, за которой ведётся наблюдение",
    "figura.docs.client.get_server_data": "Получает таблицу с информацией о текущем сервере (также работает в одиночной игре)",
    "figura.docs.client.int_uuid_to_string": "Преобразует UUID из массива целых чисел, заданными четырьмя аргументами, в строковое представление из шестнадцатеричных символов",
    "figura.docs.config.load": "Загружает из файла сохранённое по указанному ключу значение\nЕсли ключ не указан, возвращает таблицу со всеми значениями",
    "figura.docs.entity.get_rot": "Получает поворот сущности в градусах\nЕсли указан параметр delta, линейно интерполирует поворот между предыдущим и текущим тактами\nЗначение delta по умолчанию — 1",
    "figura.docs.entity.is_loaded": "Возвращает true, если объект сущности загружен и активен\nСущность может быть не загружена, если она, например, находится вне дальности прорисовки мира или в другом измерении",
    "figura.docs.client.get_tab_list": "Получает таблицу с отображаемым в списке игроков текстом",
    "figura.docs.config.save": "Сохраняет в файл значение по указанному ключу\nЕсли значение равно nil, убирает его из файла",
    "figura.docs.player.get_food": "Получает текущий уровень сытости у игрока (значение от 0 до 20)",
    "figura.docs.client.get_scoreboard": "Получает таблицу с задачами (например, настроенными командой /scroreboard). Ключ в таблице — слот отображения задачи: в списке игроков, под именем игрока, в общей или командной таблице сбоку",
    "figura.docs.client.list_atlases": "Получает таблицу, содержащую пути к созданным текстурным атласам",
    "figura.docs.client.get_registry": "Получает таблицу со всеми значениями в указанном реестре\nУзнать список доступных реестров можно в документации по перечислениям",
    "figura.docs.client.get_frame_time": "Получает текущий момент между последним и следующим тактами как число от 0.0 до 1.0\nЭто значение равно параметру delta в событии RENDER",
    "figura.docs.client.get_actionbar": "Получает текущую надпись над инвентарём (возвращает nil, если надписи нет)",
    "figura.docs.client.get_title": "Получает текущий заголовок (или nil, если заголовка нет)",
    "figura.docs.client.get_subtitle": "Получает текущий подзаголовок (или nil, если подзаголовка нет)",
    "figura.docs.client.get_atlas": "Получает объект TextureAtlasAPI, содержащий информацию об указанном текстурном атласе\nВозвращает nil, если атлас не найден",
    "figura.docs.client.get_enum": "Возвращает таблицу со значениями заданного перечисления\nПеречисления можно узнать с помощью /figura docs enums",
    "figura.docs.config": "Глобальный API для сохранения и загрузки данных аватара между игровыми сессиями",
    "figura.docs.config.get_name": "Получает имя конечного файла",
    "figura.docs.config.set_name": "Задаёт имя конечного файла, в котором будут сохранение и загрузка данных\nИспользуется название аватара как имя файла по умолчанию",
    "figura.docs.entity": "Прокси-класс сущности",
    "figura.docs.entity.get_uuid": "Получает UUID сущности",
    "figura.docs.entity.get_velocity": "Получает скорость сущности, полученную вычитанием предыдущей позиции (в предыдущем такте) из текущей",
    "figura.docs.entity.get_dimension_name": "Получает идентификатор измерения, в котором находится сущность",
    "figura.docs.entity.get_vehicle": "Получает сущность, на которой сидит игрок\nЕсли игрок ни на чём не сидит, возвращает nil",
    "figura.docs.entity.is_on_ground": "Возвращает true, если сущность находится на земле",
    "figura.docs.entity.get_eye_height": "Получает текущую высоту глаз сущности",
    "figura.docs.entity.get_name": "Получает имя сущности\nЕсли имени нет, возвращает переведённый текст с типом сущности",
    "figura.docs.entity.is_in_lava": "Возвращает true, если сущность находится в лаве",
    "figura.docs.entity.is_underwater": "Возвращает true, если глаза сущности находятся в воде",
    "figura.docs.entity.is_in_rain": "Возвращает true, если сущность стоит под дождём",
    "figura.docs.entity.has_avatar": "Возвращает true, если у сущности есть загруженный аватар Figura",
    "figura.docs.entity.is_sprinting": "Возвращает true, если сущность бежит",
    "figura.docs.entity.is_glowing": "Возвращает true, если сущность светится",
    "figura.docs.entity.is_invisible": "Возвращает true, если сущность невидима",
    "figura.docs.entity.is_silent": "Возвращает true, если сущности запрещено издавать звуки",
    "figura.docs.entity.is_sneaking": "Возвращает true, если сущность крадётся логически (нельзя упасть с края блока, не видно имя за стеной и т. п.)",
    "figura.docs.entity.is_crouching": "Возвращает true, если сущность крадётся визуально",
    "figura.docs.entity.get_nbt": "Получает таблицу с NBT-данными сущности\nСервер может не отправлять некоторые NBT-данные",
    "figura.docs.entity.is_on_fire": "Возвращает true, если сущность горит",
    "figura.docs.entity.is_alive": "Возвращает true, если сущность жива",
    "figura.docs.entity.get_passengers": "Получает таблицу с пассажирами сущности",
    "figura.docs.entity.get_max_air": "Получает максимальный уровень кислорода, который может быть у сущности",
    "figura.docs.entity.get_frozen_ticks": "Получает время в тактах, на протяжении которого сущность сейчас мёрзнет в рыхлом снеге",
    "figura.docs.entity.has_container": "Возвращает true, если у сущности есть контейнер (грузовые лодки, грузовые вагонетки и т. п.)",
    "figura.docs.entity.has_inventory": "Возвращает true, если у сущности есть инвентарь (лошади, верблюды, ламы и т. п.)",
    "figura.docs.entity.get_variable": "Получает по ключу значение, сохранённое в метаданные аватара сущности с помощью avatar:store()",
    "figura.docs.entity.is_player": "Возвращает true, если сущность является игроком",
    "figura.docs.living_entity": "Прокси-класс живой сущности (LivingEntity)",
    "figura.docs.entity.is_living": "Возвращает true, если сущность принадлежит к классу живых сущностей (LivingEntity)",
    "figura.docs.living_entity.get_held_item": "Получает стопку предметов из ведущей руки сущности\nЕсли параметр offhand равен true, возвращает предмет из второстепенной руки\nЕсли в руке нет предмета, возвращает воздух",
    "figura.docs.living_entity.get_active_item": "Получает стопку предметов, которые сейчас использует сущность\nЕсли ничего не используется, возвращает воздух",
    "figura.docs.living_entity.get_health": "Получает оставшийся уровень здоровья у сущности",
    "figura.docs.living_entity.get_max_health": "Получает максимальный уровень здоровья, который может быть у сущности",
    "figura.docs.living_entity.get_armor": "Получает текущий уровень брони у сущности",
    "figura.docs.living_entity.get_arrow_count": "Получает количество воткнутых в сущность стрел",
    "figura.docs.living_entity.get_stinger_count": "Получает количество воткнутых в сущность пчелиных жал",
    "figura.docs.living_entity.is_using_item": "Возвращает true, если сущность использует предмет",
    "figura.docs.living_entity.is_climbing": "Возвращает true, если сущность взбирается (по таким блокам, как лестница, лианы и лоза)",
    "figura.docs.living_entity.get_swing_arm": "Получает руку, которой сущность делает взмах\nВозможные значения: MAIN_HAND (основная), OFF_HAND (второстепенная)",
    "figura.docs.living_entity.get_absorption_amount": "Получает текущий уровень поглощения у сущности (обозначается жёлтыми сердцами)",
    "figura.docs.living_entity.is_sensitive_to_water": "Возвращает true, если сущность получает урон от воды",
    "figura.docs.living_entity.is_gliding": "Возвращает true, если сущность летит на элитрах",
    "figura.docs.living_entity.is_blocking": "Возвращает true, если сущность блокирует щитом",
    "figura.docs.living_entity.get_swing_time": "Получает время в тактах, на протяжении которого сущность сейчас делает взмах рукой",
    "figura.docs.player": "Прокси-класс игрока\nЧерез глобальный объект player можно получить пользователя аватара",
    "figura.docs.player.get_exhaustion": "Получает текущий уровень истощения у игрока",
    "figura.docs.player.get_experience_progress": "Получает прогресс до следующего уровня у игрока (значение от 0 до 1)",
    "figura.docs.player.has_cape": "Возвращает true, если у игрока выбран плащ",
    "figura.docs.player.has_skin": "Возвращает true, если у игрока выбран скин",
    "figura.docs.player.is_fishing": "Возвращает true, если игрок сейчас рыбачит",
    "figura.docs.player.get_charged_attack_delay": "Получает время в тактах, за которое заряжается атака игрока",
    "figura.docs.player.get_shoulder_entity": "Получает таблицу с NBT-данными сущности на левом или правом плече (параметр right должен быть равен false или true соответственно)",
    "figura.docs.player.get_ip_address": "Получает IP-адрес игрока",
    "figura.docs.viewer": "Расширение прокси-класса игрока, предназначенное только для зрителей\nОбеспечивает доступ к некоторым функциям, доступным только для хоста",
    "figura.docs.events": "Глобальный API, содержащий все события Figura\nМожно получить через глобальный объект events",
    "figura.docs.client.get_translated_string": "Возвращает строку с переводом по указанному ключу\nПеревод выполняется на текущем языке клиента\nМожно указать ещё один аргумент или таблицу аргументов, которые заполнят перевод",
    "figura.docs.entity.get_pos": "Получает позицию сущности в мире\nЕсли указан параметр delta, линейно интерполирует позицию между предыдущим и текущим тактами\nЗначение delta по умолчанию — 1",
    "figura.docs.entity.get_look_dir": "Получает единичный вектор направления взгляда сущности\nЭто направление показано синим при отображении хитбоксов (F3+B)",
    "figura.docs.entity.get_targeted_block": "Получает состояние блока, на который наведена сущность\nЭтот блок также можно увидеть на экране отладки\nМаксимальная дистанция (distance) — 20 (значение по умолчанию), минимальная — -20\nВозвращает три значения: блок, позицию и сторону пересечения блока",
    "figura.docs.living_entity.is_left_handed": "Возвращает true, если ведущая рука сущности — левая",
    "figura.docs.living_entity.get_entity_category": "Получает категорию, к которой относится сущность\nВозможные значения: ARTHROPOD (членистоногие), UNDEAD (нежить), WATER (водные), ILLAGER (зловреды), UNDEFINED (не определено, категория по умолчанию)",
    "figura.docs.player.get_saturation": "Получает текущий уровень насыщения у игрока",
    "figura.docs.player.get_experience_level": "Получает текущий уровень игрока",
    "figura.docs.player.get_model_type": "Получает тип модели игрока\nВозможные значения: SLIM (тонкие руки), DEFAULT (стандартные руки)",
    "figura.docs.player.get_team_info": "Получает таблицу с информацией о команде игрока\nЕсли игрок не состоит в команде, возвращает nil",
    "figura.docs.entity.get_type": "Получает идентификатор типа сущности\nНапример, minecraft:pig",
    "figura.docs.entity.is_wet": "Возвращает true, если сущность находится в воде, под дождём или в колонне пузырей",
    "figura.docs.entity.get_controlling_passenger": "Получает сущность-пассажира, которая управляет данной сущностью",
    "figura.docs.entity.get_targeted_entity": "Получает сущность, на которую наведена данная сущность\nЭту сущность также можно увидеть на экране отладки\nМаксимальная дистанция (distance) — 20 (значение по умолчанию), минимальная — 0",
    "figura.docs.player.get_gamemode": "Получает режим игры у игрока\nВозможные значения: SURVIVAL (выживание), CREATIVE (творческий), ADVENTURE (приключения), SPECTATOR (наблюдение)\nЕсли режим игры неизвестен, возвращает nil",
    "figura.docs.living_entity.get_death_time": "Получает время в тактах, на протяжении которого сущность мертва",
    "figura.docs.living_entity.get_swing_duration": "Получает время в тактах, за которое сущность делает взмах рукой",
    "figura.docs.entity.get_pose": "Получает текущую позу игрока\nВозможные значения: STANDING, FALL_FLYING, SLEEPING, SWIMMING, SPIN_ATTACK, CROUCHING, LONG_JUMPING и DYING",
    "figura.docs.entity.get_bounding_box": "Получает размеры хитбокса сущности\nВозвращаемые x, y, z — это соответственно ширина, высота, ширина\nУ хитбоксов в Minecraft всегда квадратное основание",
    "figura.docs.entity.is_in_water": "Возвращает true, если сущность находится в воде (даже если вода находится в затопленном блоке)",
    "figura.docs.entity.get_eye_y": "Получает позицию глаз сущности по оси Y\nНе следует путать с getEyeHeight(): функция getEyeY() ещё учитывает позицию сущности по оси Y",
    "figura.docs.entity.get_item": "Получает стопку предметов из указанной ячейки\nНумерация ячеек у игрока следующая: 1 — ведущая рука; 2 — второстепенная рука; 3–6 — доспехи с ботинок до шлема соответственно\nЕсли указан неверный номер ячейки, возвращает nil",
    "figura.docs.entity.get_permission_level": "Получает уровень полномочий сущности\nУровень полномочий оператора сервера по умолчанию равен 4",
    "figura.docs.entity.get_controlled_vehicle": "Получает сущность-транспорт, на которой сидит данная сущность",
    "figura.docs.living_entity.get_body_yaw": "Получает поворот тела сущности по оси рыскания в градусах\nЕсли указан параметр delta, линейно интерполирует поворот тела между предыдущим и текущим тактами\nЗначение delta по умолчанию — 1",
    "figura.docs.living_entity.get_active_hand": "Получает руку, которая использует предмет\nВозможные значения: MAIN_HAND (основная), OFF_HAND (второстепенная)",
    "figura.docs.living_entity.is_swinging_arm": "Возвращает true, если сущность сейчас делает взмах рукой",
    "figura.docs.living_entity.is_visually_swimming": "Возвращает true, если сущность находится в позе плавания",
    "figura.docs.living_entity.riptide_spinning": "Возвращает true, если сущность находится в анимации кручения с трезубцем",
    "figura.docs.player.is_skin_layer_visible": "Возвращает true, если у игрока сейчас видна указанная часть из «Настроек внешнего вида»",
    "figura.docs.living_entity.get_active_item_time": "Получает время в тактах, на протяжении которого сущность сейчас использует предмет",
    "figura.docs.player.get_cooldown_percent": "Возвращает значение того, имеет ли данный ItemStack активное время восстановления, в процентах от 0.0 до 1.0\nЕсли нет, возвращает значение 0.0\nПринимает два параметра stack и delta, delta компенсирует количество тактов восстановления, используемое для более плавной анимации.",
    "figura.docs.events.tick": "Событие TICK выполняется каждый внутриигровой такт, пока существует сущность аватара",
    "figura.docs.events.entity_init": "Событие ENTITY_INIT выполняется один раз при появлении сущности аватара",
    "figura.docs.events.world_render": "Событие WORLD_RENDER выполняется каждый кадр перед этапом отрисовки мира\nВыполняется, даже если аватар скрыт (например, в виде от первого лица)\nПараметр delta — текущий момент между последним и следующим тактами, выраженный числом от 0.0 до 1.0",
    "figura.docs.events.post_world_render": "Событие POST_WORLD_RENDER выполняется каждый кадр после этапа отрисовки мира\nВыполняется, даже если аватар скрыт (например, в виде от первого лица)\nПараметр delta — текущий момент между последним и следующим тактами, выраженный числом от 0.0 до 1.0",
    "figura.docs.events.post_render": "Событие POST_RENDER выполняется каждый кадр после этапа отрисовки аватара\nПервый параметр delta — текущий момент между последним и следующим тактами, выраженный числом от 0.0 до 1.0\nВторой параметр — текущий режим рендера, обозначающий контекст возникновения события\nТретий параметр — матрица, применяемая при отрисовке аватара",
    "figura.docs.events.mouse_scroll": "Событие MOUSE_SCROLL выполняется при прокрутке колеса мыши\nПараметр delta — направление прокрутки\nЕсли возвращается true, связанные ванильные функции отменяются",
    "figura.docs.events.mouse_move": "Событие MOUSE_MOVE выполняется при перемещении курсора\nДва параметра x и y — разница между текущей и сохранённой предыдущей позициями\nЕсли возвращается true, связанные ванильные функции отменяются (также перестаёт сохраняться предыдущая позиция)",
    "figura.docs.events.key_press": "Событие KEY_PRESS выполняется при нажатии клавиши на клавиатуре\nСодержит три параметра: key — числовой идентификатор нажатой клавиши; action — состояние события нажатия клавиши (0 — отпускание, 1 — нажатие, 2 — удерживание); modifier — битовая маска нажатых клавиш-модификаторов (Shift, Alt и т. п.)\nЕсли возвращается true, связанные ванильные функции отменяются",
    "figura.docs.events.char_typed": "Событие CHAR_TYPED выполняется при вводе символа\nСодержит три параметра: string — преобразованная из кода символа строка; modifier — битовая маска нажатых клавиш-модификаторов (Shift, Alt и т. п.); codepoint — код введённого символа",
    "figura.docs.events.on_play_sound": "Событие ON_PLAY_SOUND выполняется перед воспроизведением звука\nСодержит семь параметров: идентификатор; позиция; громкость; высота; цикличность (true или false); категория; путь к файлу\nЕсли возвращается true, отменяет воспроизведение звука",
    "figura.docs.event.clear": "Очищает у события связи со всеми функциями",
    "figura.docs.event.get_registered_count": "Возвращает количество объединённых под указанным названием функций, которые привязаны к событию",
    "figura.docs.event.remove": "Убирает у события связи с указанной функцией или с всеми функциями, объединёнными под указанным названием\nВозвращает количество функций, с которыми были убраны связи",
    "figura.docs.host": "Глобальный API, предназначенный только для хоста аватара\nФункции API ничего не делают у других зрителей",
    "figura.docs.host.is_host": "Возвращает true, если текущий экземпляр скрипта выполняется на хосте",
    "figura.docs.host.set_unlock_cursor": "Задаёт, активно ли свободное перемещение курсора по экрану вместо управления поворотом игрока",
    "figura.docs.host.clear_title": "Убирает текущий заголовок с экрана",
    "figura.docs.events.world_tick": "Событие WORLD_TICK выполняется каждый внутриигровой такт",
    "figura.docs.events.skull_render": "Событие SKULL_RENDER выполняется перед этапом отрисовки блока головы\nСодержит 5 параметров:\nПервый параметр delta — текущий момент между последним и следующим тактами, выраженный числом от 0.0 до 1.0\nВторой параметр block — блок, для которого производится отрисовка\nТретий параметр item — предмет, для которого производится отрисовка\nЧетвёртый параметр entity — сущность, для которой производится отрисовка\nПятый параметр mode — контекст отрисовки (HEAD (голова), BLOCK (блок) и т. д.)\nЕсли возвращается true, отрисовка отменяется",
    "figura.docs.events.item_render": "Событие ITEM_RENDER выполняется перед этапом отрисовки предмета владельца аватара\nСодержит шесть параметров: сам предмет; контекст отрисовки; позиция; поворот; размер; отрисовка в левой руке (true или false)\nЕсли возвращается модель с предковым типом Item, она заменяет модель предмета при его отрисовке",
    "figura.docs.event.register": "Привязывает функцию к событию\nФункции выполняются в порядке, в котором они привязаны\nМожно указать строку, которая объединит функции под одним названием для упрощения работы с ними в дальнейшем",
    "figura.docs.events.render": "Событие RENDER выполняется каждый кадр перед этапом отрисовки аватара\nПервый параметр delta — текущий момент между последним и следующим тактами, выраженный числом от 0.0 до 1.0\nВторой параметр — текущий режим рендера, обозначающий контекст возникновения события\nТретий параметр — матрица, применяемая при отрисовке аватара",
    "figura.docs.events.chat_send_message": "Событие CHAT_SEND_MESSAGE выполняется перед отправкой сообщения в чат\nСтроковой параметр содержит сообщение, которое будет отправлено\nВозвращаемое значение передаётся следующим событиям того же типа и изменяет сообщение перед отправкой (если разрешено в настройках); если возвращается nil, отправка отменяется",
    "figura.docs.events.use_item": "Событие USE_ITEM выполняется, когда сущность использует предмет\nСодержит предмет, действие и количество создаваемых предметом частиц в качестве параметров\nЕсли возвращается true, связанные ванильные функции отменяются",
    "figura.docs.events.arrow_render": "Событие ARROW_RENDER выполняется перед этапом отрисовки стрелы, выпущенной владельцем аватара\nСодержит два параметра: delta — текущий момент между последним и следующим тактами; arrow — сущность выпущенной стрелы\nЕсли возвращается true, отрисовка стрелы и привязанных к ней моделей отменяется\nНеобходимы разрешения на изменение ванильной модели",
    "figura.docs.events.chat_receive_message": "Событие CHAT_RECEIVE_MESSAGE выполняется при появлении сообщения в чате\nПервый параметр — текст сообщения в формате простой строки\nВторой параметр — текст сообщения в формате JSON-строки\nЕсли первым возвращается отличное от nil значение, оно заменит сообщение\nЕсли первым значением возвращается false, сообщение не появится в чате\nВторое необязательное возвращаемое значение — RGB-вектор, определяющий цвет фона сообщения",
    "figura.docs.events.mouse_press": "Событие MOUSE_PRESS выполняется при нажатии кнопки мыши\nСодержит три параметра: button — числовой идентификатор нажатой кнопки; action — состояние события нажатия кнопки (0 — отпускание, 1 — нажатие, 2 — удерживание); modifier — битовая маска нажатых клавиш-модификаторов (Shift, Alt и т. п.)\nЕсли возвращается true, связанные ванильные функции отменяются",
    "figura.docs.host.unlock_cursor": "Определяет, активно ли свободное перемещение курсора по экрану вместо управления поворотом игрока",
    "figura.docs.host.is_cursor_unlocked": "Возвращает true, если скриптом включено свободное перемещение курсора по экрану",
    "figura.docs.host.set_title_times": "Задаёт время отображения заголовка на экране (stayTime), а также длительности его появления (fadeInTime) и исчезновения (fadeOutTime)",
    "figura.docs.host.set_subtitle": "Задаёт подзаголовку указанный текст\nТекст указывается в формате JSON-строки",
    "figura.docs.host.set_title": "Задаёт заголовку указанный текст\nТекст указывается в формате JSON-строки",
    "figura.docs.host.set_actionbar": "Задаёт надписи над инвентарём указанный текст\nЗначение по умолчанию у логического параметра — false",
    "figura.docs.host.send_chat_message": "Отправляет указанное сообщение в чат",
    "figura.docs.host.send_chat_command": "Отправляет указанную команду в чат",
    "figura.docs.host.append_chat_history": "Добавляет сообщение в список недавно отправленных (доступный при нажатии клавиши «Вверх» в чате)",
    "figura.docs.host.get_chat_message": "Получает таблицу с информацией о сообщении чата\nПараметр index — номер сообщения в чате, начиная с последнего",
    "figura.docs.host.set_chat_message": "Изменяет сообщение в чате на указанное\nПараметр index — номер сообщения в чате, начиная с последнего\nЕсли в качестве нового сообщения указано nil, сообщение исчезает из чата",
    "figura.docs.host.swing_arm": "Запускает у игрока анимацию взмаха рукой\nЕсли параметр offhand равен true, происходит взмах второстепенной рукой",
    "figura.docs.host.is_first_person": "Возвращает true, если камера находится в виде от первого лица",
    "figura.docs.host.is_camera_backwards": "Возвращает true, если камера направлена назад",
    "figura.docs.host.get_slot": "Получает предмет из указанной ячейки\nИдентификатор ячейки можно указать числом (начиная с 0) или строкой (как в команде /item)",
    "figura.docs.itemstack.is_stackable": "Возвращает true, если предмет можно объединять в стопки",
    "figura.docs.matrix2": "Квадратная матрица размера 2",
    "figura.docs.itemstack": "Прокси-класс стопки предметов",
    "figura.docs.itemstack.id": "Идентификатор предмета",
    "figura.docs.itemstack.get_id": "Получает идентификатор предмета",
    "figura.docs.itemstack.get_tag": "Получает таблицу с NBT-данными предмета",
    "figura.docs.itemstack.get_count": "Получает количество предметов в стопке",
    "figura.docs.itemstack.get_pop_time": "Получает текущее время анимации подпрыгивания предмета (в тактах). Анимация появляется при подбирании игроком предмета",
    "figura.docs.itemstack.has_glint": "Возвращает true, если у предмета есть мерцание чар",
    "figura.docs.itemstack.is_block_item": "Возвращает true, если предмету соответствует блок",
    "figura.docs.itemstack.is_food": "Возвращает true, если предмет является едой",
    "figura.docs.itemstack.get_name": "Получает название предмета",
    "figura.docs.itemstack.get_max_count": "Получает максимальное количество предметов в стопке",
    "figura.docs.itemstack.is_enchantable": "Возвращает true, если на предмет можно наложить чары на чародейском столе",
    "figura.docs.itemstack.get_max_damage": "Получает максимальный уровень прочности предмета",
    "figura.docs.itemstack.get_repair_cost": "Получает требуемый уровень для ремонта предмета в наковальне",
    "figura.docs.itemstack.to_stack_string": "Возвращает стопку предметов как строку, применяемую в командах",
    "figura.docs.itemstack.is_armor": "Возвращает true, если предмет является бронёй",
    "figura.docs.itemstack.is_tool": "Возвращает true, если предмет является инструментом (топором, лопатой, киркой, ...)",
    "figura.docs.itemstack.copy": "Получает копию этой стопки предметов",
    "figura.docs.keybinds": "Глобальный API, содержащий функции для создания горячих клавиш",
    "figura.docs.keybinds.get_keybinds": "Получает таблицу с созданными горячими клавишами",
    "figura.docs.keybind.set_on_press": "Задаёт функцию, выполняемую при нажатии клавиши\nУ функции два параметра\nПервый параметр — битовая маска нажатых клавиш-модификаторов\nShift — 1, Ctrl — 2, Alt — 4\nВторой параметр — горячая клавиша",
    "figura.docs.keybind.set_on_release": "Задаёт функцию, выполняемую при отпускании клавиши\nУ функции два параметра\nПервый параметр — битовая маска нажатых клавиш-модификаторов\nShift — 1, Ctrl — 2, Alt — 4\nВторой параметр — горячая клавиша",
    "figura.docs.keybind.set_key": "Задаёт клавишу, для которой предназначена горячая клавиша",
    "figura.docs.keybind.is_default": "Возвращает true, если клавиша имеет состояние по умолчанию (не изменена в меню горячих клавиш)",
    "figura.docs.keybind.get_key": "Получает клавишу, для которой предназначена горячая клавиша",
    "figura.docs.keybind.get_name": "Получает название горячей клавиши, указанное при её создании",
    "figura.docs.keybind.is_pressed": "Возвращает true, если горячая клавиша нажата",
    "figura.docs.keybind.is_enabled": "Возвращает true, если горячая клавиша включена",
    "figura.docs.keybind.set_gui": "Задаёт, можно ли использовать горячую клавишу с открытым экраном",
    "figura.docs.matrices.mat2": "Создаёт 2×2-матрицу из указанных столбцов\nЕсли столбцы не указаны, возвращает единичную матрицу размера 2",
    "figura.docs.matrices.mat4": "Создаёт 4×4-матрицу из указанных столбцов\nЕсли столбцы не указаны, возвращает единичную матрицу размера 4",
    "figura.docs.matrices.rotation2": "Создаёт 2×2-матрицу поворота на указанный угол\nУгол указывается в градусах",
    "figura.docs.matrices.x_rotation3": "Создаёт 3×3-матрицу поворота на указанный угол вокруг оси X\nУгол указывается в градусах",
    "figura.docs.matrices.z_rotation3": "Создаёт 3×3-матрицу поворота на указанный угол вокруг оси Z\nУгол указывается в градусах",
    "figura.docs.matrices.x_rotation4": "Создаёт 4×4-матрицу поворота на указанный угол вокруг оси X\nУгол указывается в градусах",
    "figura.docs.matrices.y_rotation4": "Создаёт 4×4-матрицу поворота на указанный угол вокруг оси Y\nУгол указывается в градусах",
    "figura.docs.matrices.scale2": "Создаёт 2×2-матрицу масштабирования с указанными коэффициентами",
    "figura.docs.matrices.scale4": "Создаёт 4×4-матрицу масштабирования с указанными коэффициентами",
    "figura.docs.matrices.translate4": "Создаёт 4×4-матрицу перемещения на указанное смещение",
    "figura.docs.matrix3": "Квадратная матрица размера 3",
    "figura.docs.matrix4": "Квадратная матрица размера 4",
    "figura.docs.matrix_n.copy": "Создаёт копию матрицы и возвращает её",
    "figura.docs.matrix_n.get_row": "Получает заданную строку этой матрицы в виде вектора\nИндексация начинается с 1, как обычно",
    "figura.docs.matrix_n.multiply": "Умножает эту матрицу на другую матрицу, с другой матрицей слева\nВозвращает self для цепочки",
    "figura.docs.matrix_n.transpose": "Перемещает эту матрицу, изменяя значения внутри\nТранспонирование означает поменять строки и столбцы местами\nВозвращает self для цепочки",
    "figura.docs.matrix_n.invert": "Инвертирует эту матрицу, изменяя значение внутри\nВозвращает self для цепочки",
    "figura.docs.matrix_n.inverted": "Возвращает копию этой матрицы, но инвертированную",
    "figura.docs.matrix_n.det": "Вычисляет и возвращает определитель этой матрицы",
    "figura.docs.matrix_n.add": "Добавляет другую матрицу к этой матрице\nВозвращает self для цепочки",
    "figura.docs.matrix_n.sub": "Вычитает другую матрицу из этой\nВозвращает self для цепочки",
    "figura.docs.matrix_n.translate": "Переводит эту матрицу на заданную величину, изменяя значение внутри\nВозвращает self для цепочки",
    "figura.docs.matrix_n.rotate_y": "Возвращает эту матрицу вокруг оси Y на заданное количество градусов\nВозвращает self для цепочки",
    "figura.docs.matrix_n.rotate": "Возвращает эту матрицу на указанную величину, изменяя значение внутри\nУглы задаются в градусах\nВозвращает self для цепочки",
    "figura.docs.matrix_n.deaugmented": "Отлаживает эту матрицу, удаляя строку и столбец",
    "figura.docs.matrix_n.apply_dir": "Обрабатывает заданные значения как вектор, дополняет этот вектор 0, умножает его на матрицу и возвращает деаугилированный вектор первых значений",
    "figura.docs.model_part.pre_render": "Функция, выполняемая перед отрисовкой элемента",
    "figura.docs.model_part.set_pre_render": "Задаёт функцию, выполняемую перед отрисовкой элемента",
    "figura.docs.model_part.set_post_render": "Задаёт функцию, выполняемую после отрисовки элемента и его потомков",
    "figura.docs.model_part.get_parent": "Получает предка у элемента\nЕсли у элемента нет предков, возвращает nil",
    "figura.docs.model_part.is_child_of": "Возвращает true, если элемент является потомком другого указанного элемента",
    "figura.docs.model_part.set_pos": "Задаёт у элемента смещение относительно своей позиции в Blockbench\nЗначение nil задаёт смещение, равное 0",
    "figura.docs.model_part.get_true_pos": "Получает у элемента итоговое смещение как сумму двух смещений: относительного от своей позиции в Blockbench и определённого анимацией",
    "figura.docs.model_part.set_rot": "Задаёт абсолютный поворот элемента\nЗначение nil задаёт поворот, равный 0\nУглы указываются в градусах\nДля изменения относительного поворота используйте функцию с \"offset\" в названии",
    "figura.docs.model_part.set_offset_rot": "Задаёт относительный поворот элемента\nЗначение nil задаёт поворот, равный 0\nУглы указываются в градусах\nДля изменения абсолютного поворота используйте функцию без \"offset\" в названии",
    "figura.docs.model_part.set_scale": "Задаёт множитель размера элемента\nЗначение nil задаёт множитель, равный 1",
    "figura.docs.model_part.set_offset_scale": "Задаёт относительный множитель размера элемента\nЗначение nil задаёт множитель, равный 1\nДля изменения абсолютного множителя используйте функцию без \"offset\" в названии",
    "figura.docs.model_part.get_true_scale": "Получает у элемента итоговый множитель размера как сумму трёх множителей: абсолютного, относительного и определённого анимацией",
    "figura.docs.model_part.set_pivot": "Задаёт абсолютную опорную точку элемента\nЗначение nil задаёт опорную точку, равную 0\nДля изменения относительной опорной точки используйте функцию с \"offset\" в названии",
    "figura.docs.model_part.set_offset_pivot": "Устанавливает точку смещения оси поворота для этой детали (мультипликативную)\nЗначение nil задаёт опорную точку, равную 0\nДля изменения абсолютной опорной точки используйте функцию без \"offset\" в названии",
    "figura.docs.model_part.get_position_matrix": "Получает у элемента матрицу позиции, предварительно пересчитав её, используя позицию, поворот, размер и опорную точку этого элемента",
    "figura.docs.model_part.get_normal_matrix": "Получает у элемента матрицу нормали, предварительно пересчитав её, используя позицию, поворот, размер и опорную точку этого элемента",
    "figura.docs.itemstack.tag": "Таблица с NBT-данными предмета\nЕсли у предмета нет NBT-данных, значение равно nil",
    "figura.docs.itemstack.get_damage": "Получает уровень повреждения предмета\nУровень повреждения может быть у предметов со шкалой прочности (например, инструментов)",
    "figura.docs.itemstack.get_tags": "Получает таблицу с тегами предмета",
    "figura.docs.itemstack.get_use_action": "Получает название анимации использования предмета",
    "figura.docs.itemstack.get_rarity": "Получает редкость предмета\nCOMMON — белый, UNCOMMON — жёлтый, RARE — голубой, EPIC — пурпурный",
    "figura.docs.itemstack.get_use_duration": "Получает время в тактах, за которое предмет используется\nСейчас есть только у пищи\nУ сушёной ламинарии это время равно 16 тактам, у остальной пищи — 32",
    "figura.docs.keybinds.get_vanilla_key": "Получает идентификатор клавиши, связанный с указанной встроенной горячей клавишей\nУзнать все идентификаторы клавиш и встроенных горячих клавиш можно в документации по перечислениям",
    "figura.docs.keybind.get_id": "Получает числовой идентификатор клавиши, для которой предназначена горячая клавиша",
    "figura.docs.keybind.is_gui_enabled": "Возвращает true, если горячую клавишу можно использовать с открытым экраном (например, с открытым чатом или инвентарём)",
    "figura.docs.matrices.rotation3": "Создаёт 3×3-матрицу поворота на указанные углы\nУглы указываются в градусах; порядок поворота — ZYX",
    "figura.docs.matrix_n.reset": "Возвращает эту матрицу обратно в матрицу идентичности\nВозвращает self для цепочки",
    "figura.docs.matrix_n.scale": "Масштабирует эту матрицу на заданную величину, изменяя значение внутри\nВозвращает self для цепочки",
    "figura.docs.matrix_n.augmented": "Расширяет эту матрицу, добавляя дополнительную строку и столбец\nСтавит 1 по диагонали на новом месте, а остальные - ноль",
    "figura.docs.matrix_n.apply": "Рассматривает заданные значения как вектор, увеличивает этот вектор на 1, умножает его на матрицу и возвращает деаугилированный вектор первых значений",
    "figura.docs.model_part.get_name": "Название элемента модели",
    "figura.docs.model_part.get_rot": "Получает у элемента поворот в сумме со своим поворотом в Blockbench\nДля получения относительного поворота используйте функцию с «offset» в названии",
    "figura.docs.itemstack.is_damageable": "Возвращает true, если у предмета есть уровень прочности",
    "figura.docs.keybinds.new_keybind": "Создаёт горячую клавишу и возвращает её\nПараметр name — название, используемое в меню горячих клавиш\nПараметр key — идентификатор клавиши (например, key.keyboard.r)\nПараметр gui определяет, можно ли использовать горячую клавишу с открытым экраном\nУзнать все идентификаторы клавиш можно в документации по перечислениям",
    "figura.docs.keybinds.from_vanilla": "Создаёт горячую клавишу на основе идентификатора встроенной горячей клавиши",
    "figura.docs.keybind": "Горячая клавиша аватара\nОбъект горячей клавиши можно получить через KeybindAPI",
    "figura.docs.keybind.set_enabled": "Задаёт состояние включённости горячей клавиши",
    "figura.docs.matrices": "Глобальный API, содержащий функции для работы с матрицами\nМожно получить через глобальный объект matrices",
    "figura.docs.matrices.mat3": "Создаёт 3×3-матрицу из указанных столбцов\nЕсли столбцы не указаны, возвращает единичную матрицу размера 3",
    "figura.docs.matrices.y_rotation3": "Создаёт 3×3-матрицу поворота на указанный угол вокруг оси Y\nУгол указывается в градусах",
    "figura.docs.matrices.scale3": "Создаёт 3×3-матрицу масштабирования с указанными коэффициентами",
    "figura.docs.matrix_n.set": "Устанавливает для этой матрицы те же значения, что и для переданной матрицы\nВозвращает self для цепочки",
    "figura.docs.matrix_n.transposed": "Возвращает копию этой матрицы, но переставленную\nТранспонирование означает перестановку строк и столбцов местами",
    "figura.docs.matrix_n.rotate_x": "Возвращает эту матрицу вокруг оси X на заданное количество градусов\nВозвращает self для цепочки",
    "figura.docs.matrix_n.rotate_z": "Возвращает эту матрицу вокруг оси Z на заданное количество градусов\nВозвращает self для цепочки",
    "figura.docs.model_part": "Элемент модели аватара: группа, куб или меш в Blockbench\nВсе файлы .bbmodel и содержащий их глобальный объект models также являются элементами модели",
    "figura.docs.model_part.get_children": "Получает таблицу с потомками элемента",
    "figura.docs.itemstack.get_equipment_slot": "Получает название ячейки, для которой предназначен предмет",
    "figura.docs.itemstack.get_blockstate": "Возвращает соответствующий предмету блок\nЕсли такого блока нет, возвращает nil",
    "figura.docs.keybind.press": "Функция, выполняемая при нажатии клавиши\nУ функции два параметра\nПервый параметр — битовая маска нажатых клавиш-модификаторов\nShift — 1, Ctrl — 2, Alt — 4\nВторой параметр — горячая клавиша\nЕсли возвращается true, все встроенные горячие клавиши, использующие эту же клавишу, игнорируются",
    "figura.docs.keybind.release": "Функция, выполняемая при отпускании клавиши\nУ функции два параметра\nПервый параметр — битовая маска нажатых клавиш-модификаторов\nShift — 1, Ctrl — 2, Alt — 4\nВторой параметр — горячая клавиша\nЕсли возвращается true, все встроенные горячие клавиши, использующие эту же клавишу, игнорируются",
    "figura.docs.keybind.get_key_name": "Получает наименование клавиши, для которой предназначена горячая клавиша",
    "figura.docs.matrices.rotation4": "Создаёт 4×4-матрицу поворота на указанные углы\nУглы указываются в градусах; порядок поворота — ZYX",
    "figura.docs.matrices.z_rotation4": "Создаёт 4×4-матрицу поворота на указанный угол вокруг оси Z\nУгол указывается в градусах",
    "figura.docs.matrices.translate3": "Создаёт 3×3-матрицу перемещения на указанное смещение",
    "figura.docs.matrix_n.get_column": "Получает заданный столбец этой матрицы в виде вектора\nИндексация начинается с 1, как обычно",
    "figura.docs.matrix_n.right_multiply": "Умножает эту матрицу на другую матрицу, причем другая матрица находится справа\nВозвращает self для цепочки",
    "figura.docs.model_part.mid_render": "Функция, выполняемая во время отрисовки элемента после вычисления его матриц",
    "figura.docs.model_part.post_render": "Функция, выполняемая после отрисовки элемента и его потомков",
    "figura.docs.model_part.set_mid_render": "Задаёт функцию, выполняемую во время отрисовки элемента после вычисления его матриц",
    "figura.docs.model_part.get_pos": "Получает у элемента смещение относительно своей позиции в Blockbench\nМожет вернуть отличное от {0,0,0} значение только после вызова setPos()",
    "figura.docs.model_part.get_anim_pos": "Получает у элемента смещение, определённое текущей анимацией",
    "figura.docs.model_part.get_anim_rot": "Получает у элемента относительный поворот, определённый текущей анимацией",
    "figura.docs.model_part.get_true_rot": "Получает у элемента итоговый поворот как сумму трёх поворотов: абсолютного, относительного и определённого анимацией",
    "figura.docs.model_part.get_scale": "Получает у элемента множитель своего размера в Blockbench\nМожет вернуть отличное от {1, 1, 1} значение только после вызова setScale()",
    "figura.docs.model_part.get_offset_scale": "Получает у элемента относительный множитель размера\nДля получения абсолютного множителя используйте функцию без «offset» в названии",
    "figura.docs.model_part.get_offset_rot": "Получает у элемента поворот относительно своего поворота в Blockbench\nДля получения абсолютного поворота используйте функцию без «offset» в названии",
    "figura.docs.model_part.get_anim_scale": "Получает у элемента множитель размера, определённый текущей анимацией",
    "figura.docs.model_part.get_pivot": "Получает у элемента опорную точку в сумме со своей опорной точкой в Blockbench\nДля получения относительной опорной точки используйте функцию с «offset» в названии",
    "figura.docs.model_part.get_offset_pivot": "Получает у элемента опорную точку относительно своей опорной точки в Blockbench\nДля получения абсолютной опорной точки используйте функцию без «offset» в названии",
    "figura.docs.model_part.get_true_pivot": "Получает у элемента итоговую опорную точку как сумму двух опорных точек: абсолютной и относительной",
    "figura.docs.model_part.get_position_matrix_raw": "Получает у элемента матрицу позиции\nНе пересчитывает матрицу перед получением",
    "figura.docs.model_part.get_normal_matrix_raw": "Получает у элемента матрицу нормали\nНе пересчитывает матрицу перед получением",
    "figura.docs.host.set_slot": "Заменяет предмет в указанной ячейке\nИдентификатор ячейки можно указать числом (начиная с 0) или строкой (как в команде /item)\nЕсли идентификатор равен -1, используется первая доступная ячейка\nРаботает только в творческом режиме",
    "figura.docs.host.get_chat_color": "Получает цвет вводимого в чате текста",
    "figura.docs.host.set_chat_color": "Задаёт цвет вводимого в чате текста",
    "figura.docs.host.set_chat_text": "Заменяет вводимый в чате текст на заданную строку",
    "figura.docs.host.get_chat_text": "Получает вводимый в чате текст",
    "figura.docs.host.get_screen": "Получает имя класса открытого экрана\nЕсли ни один экран не открыт, возвращает nil",
    "figura.docs.host.get_screen_slot_count": "Получает количество ячеек на открытом экране\nЕсли ни один экран не открыт или на экране нет ячеек, возвращает nil",
    "figura.docs.host.get_screen_slot": "Получает предмет у ячейки на экране\nИдентификатор ячейки можно указать числом (начиная с 0) или строкой (как в команде /item)\nЕсли ни один экран не открыт, на экране нет ячеек или указан номер несуществующей ячейки, возвращает nil",
    "figura.docs.host.is_chat_open": "Возвращает true, если открыт чат",
    "figura.docs.host.is_container_open": "Возвращает true, если открыт экран контейнера",
    "figura.docs.host.screenshot": "Делает снимок экрана и возвращает его как текстуру",
    "figura.docs.host.is_avatar_uploaded": "Возвращает true, если текущий аватар загружен в облако",
    "figura.docs.host.get_status_effects": "Получает таблицу со всеми эффектами у игрока\nТаблица содержит подтаблицы с названием, уровнем, длительностью и видимостью частиц каждого эффекта",
    "figura.docs.host.get_clipboard": "Получает текст из буфера обмена",
    "figura.docs.host.set_clipboard": "Записывает текст в буфер обмена",
    "figura.docs.host.is_flying": "Возвращает true, если игрок летает",
    "figura.docs.host.get_reach_distance": "Получает текущую дальность взаимодействия с блоками у игрока",
    "figura.docs.host.get_air": "Получает оставшийся уровень кислорода у игрока",
    "figura.docs.host.get_pick_entity": "Получает заданную у клиента игры сущность, на которую наведён игрок",
    "figura.docs.host.get_attack_charge": "Возвращает текущий заряд атаки игрока как число от 0.0 до 1.0\nЕсли заряд меньше 1.0, игрок нанесёт меньше урона",
    "figura.docs.host.is_jumping": "Возвращает true, если игрок прыгает\nМожет вернуть false после первого такта с начала прыжка",
    "figura.docs.host.get_pick_block": "Получает заданный у клиента игры блок, на который наведён игрок\nВозвращает три значения: блок, позицию и сторону пересечения блока",
    "figura.docs.model_part.set_matrix": "Заменяет у элемента матрицу позиции на указанную\nМатрица нормали автоматически задаётся как обратная транспонированная матрица позиции\nНЕ ИЗМЕНЯЕТ значения позиции, поворота и размера элемента\nВызов setPos() или аналогичной функции перезапишет матрицу, заданную функцией setMatrix()",
    "figura.docs.model_part.get_secondary_render_type": "Получает у элемента текущий вторичный тип рендера\nЕсли значение равно nil, тип зависит от вторичного типа рендера предкового элемента",
    "figura.docs.model_part.set_secondary_texture": "Заменяет у элемента вторичную текстуру на указанную\nУзнать все типы текстуры можно в документации по перечислениям\nДля типа RESOURCE второй параметр должен содержать путь до текстуры Minecraft\nДля типа CUSTOM второй параметр должен содержать объект текстуры",
    "figura.docs.model_part.set_primary_render_type": "Задаёт текущий первичный тип рендера элемента\nЕсли значение равно nil, тип зависит от первичного типа рендера предкового элемента\nУзнать все типы рендера можно в документации по перечислениям",
    "figura.docs.model_part.set_primary_texture": "Заменяет у элемента первичную текстуру на указанную\nУзнать все типы текстуры можно в документации по перечислениям\nДля типа RESOURCE второй параметр должен содержать путь до текстуры Minecraft\nДля типа CUSTOM второй параметр должен содержать объект текстуры",
    "figura.docs.model_part.get_secondary_defined_textures": "Возвращает вторичные текстуры этой детали\nВозвращает таблицу каждой текстуры для указанной грани.",
    "figura.docs.model_part.get_visible": "Получает видимость элемента\nРаботает рекурсивно. Если родительский элемент этого элемента невидимый, этот элемент также вернёт значение false",
    "figura.docs.model_part.set_visible": "Задаёт видимость элемента\nДочерние элементы невидимых частей также остаются невидимыми и не обрабатываются.",
    "figura.docs.model_part.get_primary_render_type": "Получает у элемента текущий первичный тип рендера\nЕсли значение равно nil, тип зависит от первичного типа рендера предкового элемента",
    "figura.docs.model_part.set_secondary_render_type": "Задаёт текущий вторичный тип рендера элемента\nЕсли значение равно nil, тип зависит от вторичного типа рендера предкового элемента\nУзнать все типы рендера можно в документации по перечислениям",
    "figura.docs.model_part.get_primary_texture": "Возвращает основную текстуру этой детали\nВозвращает два значения, первое из которых - тип переопределения, второе - значение, если таковое имеется.",
    "figura.docs.model_part.get_primary_defined_textures": "Возвращает основные текстуры этой детали\nВозвращает таблицу каждой текстуры для указанной грани.",
    "figura.docs.model_part.get_secondary_texture": "Возвращает вторичную текстуру этой детали\nВозвращает два значения, первое из которых - тип переопределения, второе - значение, если таковое имеется.",
    "figura.docs.model_part.get_textures": "Получает таблицу со всеми используемыми элементом текстурами\nТаблица не содержит текстуры потомков, поэтому для групп обычно возвращается пустая таблица",
    "figura.docs.model_part.get_secondary_color": "Получает вторичный цвет элемента\nRGB-составляющие указываются в диапазоне от 0.0 до 1.0",
    "figura.docs.model_part.set_color": "Задаёт цвет для первичного и вторичного цветов элемента\nRGB-составляющие указываются в диапазоне от 0.0 до 1.0",
    "figura.docs.model_part.get_color": "Получает у элемента цвет, усреднённый между первичным и вторичным цветами\nRGB-составляющие указываются в диапазоне от 0.0 до 1.0",
    "figura.docs.model_part.set_opacity": "Задаёт непрозрачность элемента\nПараметр непрозрачности влияет только на элементы с подходящим типом рендера (например, TRANSLUCENT)\nЗадать тип рендера можно с помощью функции setPrimaryRenderType()",
    "figura.docs.model_part.set_light": "Задаёт уровень освещённости, используемый при отрисовке элемента\nЗначения указываются в диапазоне от 0 до 15 и соответствуют блочному и небесному освещению\nЕсли значение равно nil, убирает переопределение уровня освещённости",
    "figura.docs.model_part.part_to_world_matrix": "Получает матрицу перехода для представления элемента модели в пространстве мира\nРекомендуется использовать в POST_RENDER: к этому моменту матрица будет обновлена\nВ RENDER матрица отстаёт на 1 кадр от визуального положения элемента в текущем кадре\nЕсли модель не отображается в мире, матрица не обновляется\nОтрисовка модели в виде элемента интерфейса (например, куклы) не влияет на матрицу",
    "figura.docs.model_part.get_texture_size": "Получает у элемента ширину и высоту текстуры в пикселях\nВыдаёт ошибку, если у элемента несколько разноразмерных текстур, или если элемент является группой",
    "figura.docs.model_part.set_uv": "Задаёт UV элемента\nЗначения нормализованы: они могут быть в диапазоне от 0.0 до 1.0\nНапример, setUV(0.5, 0.25) переместит UV на половину ширины текстуры направо и одну четверть высоты вниз",
    "figura.docs.model_part.get_uv": "Получает UV элемента\nЗначения нормализованы: они могут быть в диапазоне от 0.0 до 1.0",
    "figura.docs.model_part.set_uv_pixels": "Задаёт у элемента UV в пикселях\nАвтоматически делит значения на результат getTextureSize()\nВыдаёт ошибку, если у элемента несколько разноразмерных текстур\nЕсли элемент является группой, будет попытка выполнить setUVPixels() для потомков",
    "figura.docs.model_part.get_uv_pixels": "Получает UV элемента\nАвтоматически умножает значения на результат getTextureSize()\nВыдаёт ошибку, если у элемента несколько разноразмерных текстур, или если элемент является группой",
    "figura.docs.model_part.set_uv_matrix": "Задаёт UV-матрицу элемента\nМатрица применяется ко всем UV-точкам, при этом UV-координаты обрабатываются как однородные\nФункции setUV() и setUVPixels() — более простые способы изменения этой матрицы",
    "figura.docs.model_part.get_uv_matrix": "Получает UV-матрицу элемента",
    "figura.docs.model_part.set_primary_color": "Задаёт первичный цвет элемента\nRGB-составляющие указываются в диапазоне от 0.0 до 1.0",
    "figura.docs.model_part.get_primary_color": "Получает первичный цвет элемента\nRGB-составляющие указываются в диапазоне от 0.0 до 1.0",
    "figura.docs.model_part.set_secondary_color": "Задаёт вторичный цвет элемента\nRGB-составляющие указываются в диапазоне от 0.0 до 1.0",
    "figura.docs.model_part.get_opacity": "Получает непрозрачность элемента\nПараметр непрозрачности влияет только на элементы с подходящим типом рендера (например, TRANSLUCENT)\nЗадать тип рендера можно с помощью функции setPrimaryRenderType()",
    "figura.docs.model_part.get_light": "Получает у элемента заданный уровень освещённости\nНе взаимодействует с игровым освещением; возвращает только значения, заданные функцией setLight() ранее",
    "figura.docs.model_part.set_overlay": "Задаёт уровни наложения цветов, используемые при отрисовке элемента\nПараметры принимают значения от 0 до 15 и обозначают уровни наложения белого цвета и цвета урона\nЕсли значение равно nil, убирает переопределение уровня наложения соответствующего цвета",
    "figura.docs.model_part.get_vertices": "Получает таблицу со всеми вершинами с указанным идентификатором текстуры\nВозвращает nil, если вершины не найдены",
    "figura.docs.model_part.remove_child": "Убирает указанный элемент из списка потомков текущего элемента",
    "figura.docs.model_part.copy": "Получает копию элемента со всеми изменениями и вершинами\nПотомки элемента копируются в новый список как ссылки",
    "figura.docs.model_part.new_part": "Создаёт элемент-группу как потомка текущего элемента (опорная точка копируется)\nПринимает название и необязательный параметр с предковым типом нового элемента",
    "figura.docs.model_part.remove_task": "Удаляет у элемента задачу отрисовки с указанным названием\nЕсли название не указано, удаляет все задачи",
    "figura.docs.model_part.get_overlay": "Получает цвет наложения, который вы установили ранее для этой части\nНе взаимодействует с системой наложения Minecraft, а восстанавливает только те значения, которые вы установили ранее с помощью setOverlay()",
    "figura.docs.model_part.set_parent_type": "Устанавливает родительский тип детали\nСм. части ParentType в списках документов для разрешенных типов",
    "figura.docs.model_part.get_parent_type": "Возвращает текущий родительский тип детали",
    "figura.docs.model_part.get_type": "Возвращает, является ли эта часть \"GROUP\", \"CUBE\" или \"MESH\"",
    "figura.docs.model_part.override_vanilla_rot": "Возвращает true, если ванильный поворот элемента переопределён анимацией",
    "figura.docs.model_part.override_vanilla_pos": "Возвращается, если ванильное вращение этой части переопределяется анимацией",
    "figura.docs.model_part.override_vanilla_scale": "Возвращает, если стандартный масштаб этой части переопределяется анимацией",
    "figura.docs.model_part.new_text": "Создаёт у элемента новую задачу отрисовки текста",
    "figura.docs.model_part.new_item": "Создаёт у элемента новую задачу отрисовки предмета",
    "figura.docs.model_part.new_block": "Создаёт у элемента новую задачу отрисовки блока",
    "figura.docs.model_part.new_sprite": "Создаёт у элемента новую задачу отрисовки спрайта",
    "figura.docs.model_part.new_entity": "Создаёт у элемента новую задачу отрисовки сущности",
    "figura.docs.model_part.add_task": "Добавляет к элементу указанную задачу отрисовки",
    "figura.docs.model_part.get_task": "Получает у элемента задачу отрисовки с указанным названием\nЕсли название не указано, возвращает таблицу со всеми задачами",
    "figura.docs.model_part.remove": "Убирает элемент из списка потомков своего предка",
    "figura.docs.model_part.get_all_vertices": "Получает таблицу со всеми идентификаторами текстур и соответствующими им вершинами",
    "figura.docs.model_part.move_to": "Делает элемент потомком указанного элемента",
    "figura.docs.model_part.add_child": "Добавляет указанный элемент в список потомков текущего элемента",
    "figura.docs.nameplate_entity": "Настройка имени сущности",
    "figura.docs.nameplate.chat": "Настройка имени в чате",
    "figura.docs.nameplate_entity.set_pos": "Задаёт смещение имени",
    "figura.docs.nameplate_entity.set_light": "Задаёт уровень освещённости имени\nЗначения указываются в диапазоне от 0 до 15 и соответствуют блочному и небесному освещению\nЕсли значение равно nil, убирает переопределение уровня освещённости",
    "figura.docs.nameplate_entity.set_outline": "Задаёт, должен ли у имени быть контур\nНесовместимо с тенью имени",
    "figura.docs.nameplate": "Глобальный API для настройки имени аватара в чате, над головой и в списке игроков",
    "figura.docs.nameplate.entity": "Настройка имени над головой",
    "figura.docs.nameplate.list": "Настройка имени в списке игроков",
    "figura.docs.nameplate.all": "Группа настройки имени во всех местах одновременно",
    "figura.docs.nameplate_customization": "Настройка имени",
    "figura.docs.nameplate_customization.get_text": "Получает заданный текст имени",
    "figura.docs.nameplate_customization.set_text": "Задаёт текст имени",
    "figura.docs.nameplate_entity.get_pivot": "Получает заданную опорную точку имени",
    "figura.docs.nameplate_entity.set_pivot": "Задаёт опорную точку имени",
    "figura.docs.nameplate_entity.get_pos": "Получает заданное смещение имени",
    "figura.docs.nameplate_entity.get_scale": "Получает заданный множитель размера имени",
    "figura.docs.nameplate_entity.set_scale": "Задаёт множитель размера имени",
    "figura.docs.nameplate_entity.get_background_color": "Получает заданный цвет фона имени",
    "figura.docs.nameplate_entity.set_outline_color": "Задаёт цвет контура имени",
    "figura.docs.nameplate_entity.get_light": "Получает заданный уровень освещённости имени",
    "figura.docs.nameplate_entity.is_visible": "Возвращает true, если имя должно отображаться",
    "figura.docs.nameplate_entity.set_visible": "Задаёт, должно ли отображаться имя",
    "figura.docs.nameplate_entity.has_shadow": "Возвращает true, если у имени должна быть тень",
    "figura.docs.nameplate_entity.set_shadow": "Задаёт, должна ли у имени быть тень\nНесовместимо с контуром имени",
    "figura.docs.nameplate_entity.has_outliner": "Возвращает true, если у имени должен быть контур",
    "figura.docs.nameplate_group": "Группа, управляющая другими настройками имени",
    "figura.docs.nameplate_group.set_text": "Задаёт текст у всех настроек имени в группе",
    "figura.docs.nameplate_entity.set_background_color": "Задаёт цвет фона имени\nЕсли прозрачность не указана, использует значение из настроек игры",
    "figura.docs.particles": "Глобальный API для работы с частицами\nОбращение по ключу с идентификатором частицы создаёт объект этой частицы\nМожно получить через глобальный объект particles",
    "figura.docs.particles.new_particle": "Создаёт частицу с указанными названием, позицией и скоростью\nУ некоторых частиц есть особые свойства (например, у частицы dust)\nТакие свойства можно указать через параметр name (так же как и в командах)",
    "figura.docs.particles.remove_particles": "Удаляет все частицы, созданные текущим аватаром",
    "figura.docs.particles.is_present": "Возвращает true, если указанный идентификатор частицы существует",
    "figura.docs.particle": "Частица, которую можно создать или изменить\nМожно получить через обращение к ParticleAPI по ключу\nСуществует как объектно-ориентированная альтернатива particles:newParticle()",
    "figura.docs.particle.is_alive": "Возвращает true, если частица не помечена для удаления",
    "figura.docs.particle.get_pos": "Получает позицию частицы",
    "figura.docs.particle.get_velocity": "Получает скорость частицы",
    "figura.docs.particle.set_velocity": "Задаёт скорость частицы\nСкорость указывается в мировых координатах",
    "figura.docs.particle.get_color": "Получает цвет частицы",
    "figura.docs.particle.get_lifetime": "Получает время существования частицы",
    "figura.docs.particle.set_lifetime": "Задаёт время в тактах, которое частица должна существовать в мире",
    "figura.docs.particle.get_power": "Получает силу частицы",
    "figura.docs.particle.set_power": "Задаёт силу частицы",
    "figura.docs.particle.get_scale": "Получает размер частицы",
    "figura.docs.particle.get_gravity": "Получает гравитацию частицы",
    "figura.docs.particle.set_gravity": "Задаёт гравитацию частицы",
    "figura.docs.particle.set_physics": "Задаёт, обладает ли частица физикой",
    "figura.docs.pings": "Глобальный API, предназначенный для регистрации и вызова пингов",
    "figura.docs.raycast": "Глобальный API, содержащий функции для рейкастинга",
    "figura.docs.raycast.block": "Выполняет рейкастинг до блока в мире.\nВозвращает блок, точную позицию и сторону пересечения этого блока.\nЕсли блок не найден, возвращает nil.\nПараметры blockCastType и fluidCastType определяют, какие типы блоков и жидкостей нужно учитывать.\nЗначения типов по умолчанию — COLLIDER и NONE соответственно",
    "figura.docs.particle.spawn": "Создаёт частицу с текущими свойствами",
    "figura.docs.particle.remove": "Удаляет частицу из мира",
    "figura.docs.particle.set_pos": "Задаёт позицию частицы\nПозиция указывается в мировых координатах",
    "figura.docs.particle.set_scale": "Задаёт размер частицы",
    "figura.docs.particle.has_physics": "Возвращает true, если частица обладает физикой",
    "figura.docs.ping_function": "Особая функция, работающая с сетевыми данными",
    "figura.docs.particle.set_color": "Задаёт цвет частицы\nПрозрачность не поддерживается большинством частиц\nRGBA-составляющие по умолчанию равны 1",
    "figura.docs.raycast.aabb": "Выполняет рейкастинг на основе указанных начальной и конечной позиций, а также массива из AABB.\nAABB указывается в виде таблицы с двумя векторами, определяющими противоположные углы параллелепипеда.\n`{vec(0,0,0),vec(1,0.5,1)}` — допустимый AABB, `{ {vec(0,0,0),vec(1,0.5,1)}, {vec(0,0.5,0.5),vec(1,1,1)} }` — допустимый массив из AABB.\nВозвращает таблицу пересечённого AABB, точную позицию пересечения как вектор, сторону пересечения как строку (или nil, если пересечение внутри AABB) и номер пересечённого AABB в массиве",
    "figura.docs.raycast.entity": "Выполняет рейкастинг до сущности в мире.\nВозвращает сущность и точную позицию пересечения этой сущности.\nЕсли сущность не найдена, возвращает nil.\nПараметр predicate определяет, каких сущностей нужно учитывать.\nУ функции этого параметра один аргумент: объект сущности. Возврат этой функцией true означает, что сущность нужно учитывать.\nЕсли параметр predicate не задан, учитываются все сущности",
    "figura.docs.texture.update": "Обновляет текстуру на графическом процессоре (GPU), применяя все изменения",
    "figura.docs.render_task.remove": "Удаляет эту задачу рендеринга из родительской части модели",
    "figura.docs.render_task": "Представляет задачу рендеринга, которую Figura завершает каждый кадр\nАбстрактный суперкласс для ItemTask, BlockTask и TextTask",
    "figura.docs.render_task.get_name": "Получить имя этой задачи",
    "figura.docs.render_task.is_visible": "Проверяет, видима ли эта задача",
    "figura.docs.render_task.set_visible": "Устанавливает, должна ли эта задача рендериться или нет",
    "figura.docs.render_task.get_light": "Возвращает значение переопределения освещения для этой задачи",
    "figura.docs.render_task.set_light": "Устанавливает значение переопределения освещенности для этой задачи\nПриведены значения от 0 до 15, указывающие уровни освещенности блоков и неба, которые вы хотите использовать\nПри нулевом значении переопределение освещенности для этой задачи будет сброшено",
    "figura.docs.render_task.get_overlay": "Возвращает значение переопределения наложения для этой задачи",
    "figura.docs.render_task.set_overlay": "Устанавливает значение переопределения наложения для этой задачи\nЗначения указываются от 0 до 15, обозначая уровни белого наложения и наложения урона, которые вы хотите использовать\nПередача значения nil сбросит переопределение наложения для этой задачи",
    "figura.docs.render_task.get_rot": "Возвращает вращение этой задачи",
    "figura.docs.render_task.set_rot": "Устанавливает вращение задачи относительно прикрепленной части",
    "figura.docs.render_task.set_scale": "Устанавливает масштаб задачи относительно прикрепленной части",
    "figura.docs.render_task.get_normal_matrix": "Пересчитывает матрицу нормалей для этой задачи рендеринга на основе её текущего положения, вращения, масштаба и точки поворота, затем возвращает эту матрицу",
    "figura.docs.item_task": "Задача для рендеринга предмета",
    "figura.docs.item_task.set_item": "Устанавливает предмет для этой задачи рендеринга",
    "figura.docs.item_task.get_display_mode": "Возвращает режим отображения предмета для этой задачи",
    "figura.docs.item_task.set_display_mode": "Устанавливает режим отображения предмета для этой задачи",
    "figura.docs.block_task": "Задача для рендеринга блока",
    "figura.docs.block_task.set_block": "Устанавливает блок для этой задачи рендеринга",
    "figura.docs.text_task": "Задача для рендеринга текста",
    "figura.docs.text_task.get_text": "Возвращает текст из этой задачи",
    "figura.docs.text_task.set_text": "Устанавливает текст для этой задачи рендеринга",
    "figura.docs.text_task.get_alignment": "Возвращает выравнивание текста\nПо умолчанию \"LEFT\"",
    "figura.docs.text_task.set_alignment": "Устанавливает выравнивание текста\nМожет быть \"LEFT\", \"RIGHT\" или \"CENTER\"\nПо умолчанию \"LEFT\"",
    "figura.docs.text_task.has_shadow": "Проверяет, имеет ли текст этой задачи тень",
    "figura.docs.text_task.has_outline": "Проверяет, имеет ли текст этой задачи обводку",
    "figura.docs.text_task.get_outline_color": "Возвращает цвет обводки текста для этой задачи",
    "figura.docs.text_task.set_outline_color": "Устанавливает цвет обводки, с которым должен отображаться текст\nСовместимо только с режимом \"Outline\"",
    "figura.docs.text_task.get_width": "Возвращает максимальную ширину текста\nПо умолчанию 0",
    "figura.docs.text_task.has_wrap": "Проверяет, должен ли текст переноситься на новые строки",
    "figura.docs.text_task.set_wrap": "Устанавливает, должен ли текст переноситься на новые строки",
    "figura.docs.text_task.is_see_through": "Проверяет, может ли текст быть видимым сквозь стены\nПо умолчанию false",
    "figura.docs.text_task.set_see_through": "Устанавливает, может ли текст быть видимым сквозь стены\nПо умолчанию false",
    "figura.docs.text_task.set_background": "Устанавливает, должен ли текст отображать фон\nПо умолчанию false",
    "figura.docs.text_task.get_opacity": "Возвращает непрозрачность этого текста",
    "figura.docs.text_task.set_opacity": "Устанавливает непрозрачность этого текста",
    "figura.docs.sprite_task": "Задача для рендеринга одного спрайта",
    "figura.docs.sprite_task.get_texture": "Возвращает текущую текстуру этой задачи",
    "figura.docs.sprite_task.get_dimensions": "Возвращает размеры текстуры, используемые для вычисления UV координат",
    "figura.docs.sprite_task.set_dimensions": "Устанавливает размеры текстуры, используемые для вычисления UV координат",
    "figura.docs.sprite_task.set_size": "Устанавливает ширину и высоту, используемые для рендеринга этого спрайта",
    "figura.docs.sprite_task.get_region": "Возвращает UV-область текстуры",
    "figura.docs.sprite_task.get_uv": "Возвращает смещение UV этой текстуры",
    "figura.docs.sprite_task.get_uv_pixels": "Возвращает смещение UV этой текстуры в пикселях, основываясь на её размере",
    "figura.docs.sprite_task.set_uv_pixels": "Устанавливает смещение UV для этой текстуры в пикселях, основываясь на её размере",
    "figura.docs.sprite_task.set_color": "Устанавливает множитель цвета для этого спрайта\nЗначения задаются в формате RGBA от 0 до 1\nЗначения по умолчанию — 1, альфа-канал является необязательным",
    "figura.docs.sprite_task.get_vertices": "Возвращает таблицу со всеми 4 вершинами этого спрайта\nИзменение значений через другие функции приведет к сбросу этих вершин",
    "figura.docs.entity_task": "Задача для рендеринга сущности",
    "figura.docs.entity_task.set_nbt": "Устанавливает [NBT сущности]",
    "figura.docs.entity_task.set_head_rotation": "Обновляет вращение головы сущности, если это применимо",
    "figura.docs.renderer": "Глобальное API, предоставляющее функции, изменяющие способ рендеринга вашего персонажа в Minecraft",
    "figura.docs.renderer.render_fire": "Определяет, должен ли визуально отображаться эффект огня, когда вы находитесь в огне\nПо умолчанию true",
    "figura.docs.renderer.render_vehicle": "Определяет, будет ли ваше транспортное средство (лодка, вагонетка, лошадь и т.д.) отображаться\nПо умолчанию true",
    "figura.docs.renderer.render_crosshair": "Переключает, должен ли ваш прицел отображаться\nПо умолчанию true",
    "figura.docs.renderer.render_hud": "Переключает, должен ли отображаться стандартный интерфейс (HUD)\nРуки и интерфейс Figura не включены",
    "figura.docs.sound.get_subtitle": "Получает текст субтитров из этого звука",
    "figura.docs.sound.set_subtitle": "Устанавливает текст субтитров для этого звука",
    "figura.docs.textures.read": "Читает текстуру из строки base64 или массива байтов",
    "figura.docs.textures.get_textures": "Возвращает таблицу со всеми текстурами, используемыми этим аватаром\nНе включайте сгенерированные текстуры из этого API",
    "figura.docs.textures.from_vanilla": "Возвращает копию текстуры ресурса в виде объекта текстуры для модификации",
    "figura.docs.texture.get_name": "Возвращает имя этой текстуры",
    "figura.docs.texture.get_path": "Возвращает путь к ресурсу этой текстуры",
    "figura.docs.texture.get_dimensions": "Возвращает вектор ширины и высоты этой текстуры",
    "figura.docs.texture.restore": "Восстанавливает текстуру в исходное состояние, до любых модификаций",
    "figura.docs.texture.save": "Возвращает строку в формате base64, представляющую эту текстуру",
    "figura.docs.texture_atlas": "Объект текстурного атласа с вспомогательными функциями, связанными с текстурным атласом",
    "figura.docs.texture_atlas.list_sprites": "Возвращает таблицу со всеми путями спрайтов в этом атласе",
    "figura.docs.texture_atlas.get_sprite_uv": "Возвращает vec4, содержащий UV заданного спрайта\nUV упорядочены как U0, V0, U1, V1",
    "figura.docs.texture_atlas.get_width": "Возвращает ширину этого атласа",
    "figura.docs.texture_atlas.get_height": "Возвращает высоту этого атласа",
    "figura.docs.vanilla_model.head": "Голова игрока, не включая шляпу",
    "figura.docs.vanilla_model.body": "Тело игрока, не включая внешний слой",
    "figura.docs.vanilla_model.left_arm": "Левая рука игрока, не включая внешний слой",
    "figura.docs.vanilla_model.right_arm": "Правая рука игрока, не включая внешний слой",
    "figura.docs.vanilla_model.left_leg": "Левая нога игрока, не включая внешний слой",
    "figura.docs.vanilla_model.right_leg": "Правая нога игрока, не включая внешний слой",
    "figura.docs.vanilla_model.jacket": "Внешний слой тела игрока",
    "figura.docs.vanilla_model.left_sleeve": "Внешний слой левой руки игрока",
    "figura.docs.vanilla_model.right_sleeve": "Внешний слой правой руки игрока",
    "figura.docs.vanilla_model.right_pants": "Внешний слой правой ноги игрока",
    "figura.docs.vanilla_model.cape": "Многослойный: Плащ игрока",
    "figura.docs.vanilla_model.cape_model": "Ванильная модель плаща",
    "figura.docs.json_object.put": "Помещает указанное значение по заданному ключу",
    "figura.docs.json_object.contains_value": "Содержит ли этот объект указанное значение",
    "figura.docs.render_task.get_scale": "Возвращает масштаб этой задачи",
    "figura.docs.render_task.get_pos": "Возвращает положение этой задачи",
    "figura.docs.render_task.set_pos": "Устанавливает положение задачи относительно прикрепленной части.\nИспользует координаты модели",
    "figura.docs.render_task.get_position_matrix": "Пересчитывает матрицу для этой задачи рендеринга на основе её текущего положения, вращения, масштаба и точки поворота, затем возвращает эту матрицу",
    "figura.docs.render_task.get_position_matrix_raw": "Возвращает матрицу положения для этой задачи рендеринга.\nОтличие необработанной (Raw) версии функции заключается в том, что она не пересчитывает матрицу перед её получением",
    "figura.docs.render_task.get_normal_matrix_raw": "Возвращает матрицу нормалей для этой задачи рендеринга.\nОтличие необработанной (Raw) версии функции заключается в том, что она не пересчитывает матрицу перед её возвратом",
    "figura.docs.text_task.has_background": "Проверяет, должен ли текст отображать фон\nПо умолчанию false",
    "figura.docs.text_task.get_background_color": "Возвращает цвет фона этого текста",
    "figura.docs.render_task.set_matrix": "Устанавливает указанную матрицу как матрицу положения для этой задачи рендеринга.\nМатрица нормалей автоматически рассчитывается как обратная транспонированная этой матрицы.\nВызов этой функции НЕ ИЗМЕНЯЕТ значения положения, вращения или масштаба в задаче рендеринга.\nЕсли вызвать setPos() или аналогичную функцию, эффекты setMatrix() будут перезаписаны",
    "figura.docs.text_task.set_shadow": "Переключает, должен ли текст отображаться с тенью\nНе совместимо с режимом \"Outline\"",
    "figura.docs.text_task.set_width": "Устанавливает максимальную ширину текста, перенося его на несколько строк\nШирина 0 или меньше не переносит текст\nПо умолчанию 0",
    "figura.docs.sprite_task.get_size": "Возвращает ширину и высоту, используемые для рендеринга этого спрайта",
    "figura.docs.sprite_task.set_uv": "Устанавливает смещение UV для этой текстуры\nОбласть и размер используются для расчета конечных UV координат",
    "figura.docs.json_object.contains_key": "Содержит ли этот объект указанной ключ",
    "figura.docs.textures.get": "Получает зарегистрированную текстуру по её имени или nil, если текстура с таким именем не найдена",
    "figura.docs.text_task.set_outline": "Переключает, должен ли текст отображаться с обводкой\nТекст всегда будет отображаться с максимальной яркостью, если ему назначена обводка\nНе совместимо с режимами \"Shadow\" и \"Emissive\"",
    "figura.docs.sprite_task.get_color": "Возвращает текущий множитель цвета этого спрайта\nЗначения задаются в формате RGBA от 0 до 1",
    "figura.docs.sprite_task.get_render_type": "Возвращает имя текущего типа рендеринга для этого спрайта",
    "figura.docs.entity_task.update_walking_distance": "Обновляет анимации ходьбы с учетом новой информации, если это применимо. Для ожидаемого результата следует вызывать каждую тактовую единицу с соответствующим значением",
    "figura.docs.text_task.set_background_color": "Устанавливает цвет фона для этого текста\nЕсли значение альфа-канала не указано, будет использоваться стандартное значение (как в настройках доступности)",
    "figura.docs.sprite_task.set_texture": "Устанавливает текстуру для этой задачи\nШирина и высота текстуры должны быть указаны, если текстура задается в виде расположения\nДля пользовательских текстур размеры указывать необязательно",
    "figura.docs.sprite_task.set_region": "Устанавливает UV-область текстуры\nИспользует её размеры для расчета максимальных UV координат",
    "figura.docs.sprite_task.set_render_type": "Устанавливает текущий тип рендеринга для этого спрайта\nПо умолчанию TRANSLUCENT\nПроверьте команду enum в документации для всех типов рендеринга",
    "figura.docs.entity_task.as_entity": "Возвращает сущность, связанную с этой задачей, или nil, если сущность не может существовать по какой-либо причине\nИз-за особых обстоятельств некоторые значения последующих показаний могут быть совершенно бесполезными",
    "figura.docs.renderer.force_paperdoll": "Переключает, должен ли отображаться бумажный кукол, независимо от действий игрока\nЕсли бумажный кукол отключен или установлен на всегда отображать, ничего не изменится\nПо умолчанию false",
    "figura.docs.json_array.remove": "Удаляет указанное значение из этого массива",
    "figura.docs.sound.set_loop": "Переключает, должен ли этот звук зацикливаться\nПо умолчанию false",
    "figura.docs.textures": "Глобальное API, которое позволяет создавать текстуры во время выполнения программы",
    "figura.docs.textures.new_texture": "Создает новую текстуру с указанным именем, шириной и высотой\nТекстура заполняется однотонным цветом",
    "figura.docs.textures.copy": "Создает копию текстуры\nКопия регистрируется под указанным именем",
    "figura.docs.texture.fill": "Устанавливает цвет RGBA для всей указанной области",
    "figura.docs.texture.apply_matrix": "Применяет преобразования ко всем пикселям в указанной области этой текстуры с помощью матрицы.\nЕсли `clip` равно true, результирующие цветовые каналы будут ограничены значениями от 0 до 1",
    "figura.docs.vanilla_model": "Глобальное API, которое предоставляет функции для взаимодействия с ванильной моделью игрока и её частями\nДоступно под именем \"vanilla_model\"",
    "figura.docs.vanilla_model.left_pants": "Внешний слой левой ноги игрока",
    "figura.docs.texture": "Объект текстуры, который может быть сгенерирован моделью или создан с помощью TextureAPI",
    "figura.docs.texture.get_pixel": "Получает цвет RGBA из указанного пикселя",
    "figura.docs.texture.set_pixel": "Устанавливает цвет RGBA для указанного пикселя",
    "figura.docs.vanilla_model.fake_cape": "Пользовательская копия плаща, попытка сохранить его трансформации, так как математика ванильного плаща... странная",
    "figura.docs.texture.apply_func": "Вызывает указанную функцию на заданной области этой текстуры, перебирая каждый пиксель и передавая его текущие координаты x, y и цвет в качестве аргументов. Цвет представлен в формате vec4 (RGBA), а возвращаемое значение устанавливает цвет этого пикселя.\nНеверные возвращаемые значения или nil не оказывают эффекта",
    "figura.docs.vanilla_model.hat": "Внешний слой головы игрока",
    "figura.docs.renderer.should_render_fire": "Проверяет, должен ли отображаться эффект огня",
    "figura.docs.renderer.set_render_fire": "Устанавливает, следует ли использовать эффект огня",
    "figura.docs.renderer.set_render_vehicle": "Устанавливает, следует ли визуализировать ваш автомобиль",
    "figura.docs.renderer.set_render_crosshair": "Устанавливает, должно ли отображаться перекрестие",
    "figura.docs.renderer.should_force_paperdoll": "Определяет, показывать ли \"Куклу\" (та что слева сверху, Как в бедроке)",
    "figura.docs.renderer.should_render_hud": "Проверяет, должен ли отображаться ванильный HUD",
    "figura.docs.renderer.set_render_hud": "Устанавливает, должен ли отображаться ванильный HUD",
    "figura.docs.renderer.set_upside_down": "Устанавливает, будет ли этот объект отображаться перевернутым",
    "figura.docs.renderer.get_shadow_radius": "Получает радиус вашей тени",
    "figura.docs.renderer.is_first_person": "Проверяет, находится ли камера от первого лица",
    "figura.docs.renderer.is_camera_backwards": "Проверяет, находится ли ваша камера в режиме просмотра от третьего лица задом наперед",
    "figura.docs.renderer.get_camera_pos": "Возвращает смещение положения камеры",
    "figura.docs.renderer.get_camera_pivot": "Получает абсолютную точку поворота камеры",
    "figura.docs.renderer.get_camera_offset_pivot": "Получает смещение оси поворота камеры",
    "figura.docs.renderer.should_render_vehicle": "Проверьте, следует ли визуализировать ваш транспорт",
    "figura.docs.renderer.should_render_crosshair": "Проверяет, следует ли вашему прицелу отображаться",
    "figura.docs.renderer.set_shadow_radius": "Устанавливает радиус вашей тени\nЗначение по умолчанию равно нулю, что означает, что для игроков используется стандартное значение по умолчанию, равное 0,5\nМаксимальное значение равно 12",
    "figura.docs.renderer.set_force_paperdoll": "Определяет, следует ли принудительно визуализировать куклу игрока",
    "figura.docs.renderer.is_upside_down": "Проверяет, следует ли отображать этот объект в перевернутом виде",
    "figura.docs.renderer.set_camera_pos": "Устанавливает смещение положения камеры\nНулевым значением для положения является 0",
    "figura.docs.renderer.set_camera_pivot": "Устанавливает абсолютную точку поворота камеры\nТочка поворота также перемещает камеру\nЕе значения указаны относительно окружающего мира\nНулевым значением для точки поворота будет 0\nДля получения относительных значений поворота воспользуйтесь функцией \"смещение\" точки поворота",
    "figura.docs.renderer.set_offset_camera_pivot": "Устанавливает смещение точки центра для камеры\nТочка центра также будет перемещать камеру\nЕго значения относительны к миру\nНулевые значения для поворота предполагаются равными 0\nдля относительных значений вращения проверьте функцию поворота без смещения",
    "figura.docs.renderer.get_camera_rot": "Получает абсолютный угол поворота камеры",
    "figura.docs.sounds": "Глобальный API, который используется для воспроизведения звуков Minecraft\nДоступ к которому осуществляется под названием \"sounds\"",
    "figura.docs.renderer.set_camera_rot": "Устанавливает абсолютный поворот камеры\nПозиция не учитывается для крена\nНулевые значения для поворота считаются равными 0\nДля относительных значений поворота проверьте",
    "figura.docs.renderer.get_camera_offset_rot": "Возвращает смещение поворота камеры",
    "figura.docs.renderer.set_offset_camera_rot": "Задает смещение поворота камеры\nПредполагается, что нулевые значения для поворота равны 0\nУглы указаны в градусах\nАбсолютные значения поворота приведены в функции поворота без смещения",
    "figura.docs.renderer.get_camera_matrix": "Возвращает измененную матрицу камеры",
    "figura.docs.renderer.set_camera_matrix": "Устанавливает матрицу камеры с заданной матрицей",
    "figura.docs.renderer.get_camera_normal": "Возвращает измененную обычную матрицу камеры",
    "figura.docs.renderer.set_camera_normal": "Устанавливает нормальную матрицу камеры с заданной матрицей",
    "figura.docs.renderer.set_post_effect": "Устанавливает текущий эффект рендеринга\nАналогично удалённой настройке Super Secret",
    "figura.docs.renderer.get_fov": "Получает множитель вашего поля зрения",
    "figura.docs.renderer.set_fov": "Устанавливает множитель вашего поля зрения\nЗначение по умолчанию равно нулю, что означает, что к вашему полю зрения не будут применены никакие изменения",
    "figura.docs.renderer.get_crosshair_offset": "Определяет смещение вашего перекрестия",
    "figura.docs.renderer.set_crosshair_offset": "Устанавливает смещение вашего перекрестия",
    "figura.docs.renderer.get_outline_color": "Получает цвет контура пользовательского эффекта свечения",
    "figura.docs.renderer.set_outline_color": "Устанавливает цвет контура пользовательского эффекта свечения",
    "figura.docs.renderer.get_primary_fire_texture": "Возвращает текущую пользовательскую текстуру основного огня",
    "figura.docs.renderer.get_secondary_fire_texture": "Возвращает текущую пользовательскую текстуру вторичного огня",
    "figura.docs.renderer.set_render_left_arm": "Выберите, должна ли левая рука отображаться от первого лица, независимо от того, держите вы предмет или нет",
    "figura.docs.renderer.get_render_left_arm": "Получает, должна ли левая рука отображаться от первого лица",
    "figura.docs.renderer.set_render_right_arm": "Выберите, должна ли правая рука отображаться от первого лица, независимо от того, держите вы предмет или нет",
    "figura.docs.renderer.get_render_right_arm": "Получает, должна ли правая рука отображаться от первого лица",
    "figura.docs.renderer.set_eye_offset": "Устанавливает смещение для положения глаз объекта, изменяя целевой блок и объект",
    "figura.docs.renderer.get_block_outline_color": "Возвращает заданный цвет для контура выбранного блока\nПо умолчанию равен нулю (nil)",
    "figura.docs.renderer.get_root_rotation_allowed": "Возвращает, должны ли к модели быть применены корневые повороты",
    "figura.docs.sounds.stop_sound": "Останавливает воспроизведение звуков с этого аватара\nЕсли указан идентификатор, то звуки будут остановленный только с этим идентификатором",
    "figura.docs.sounds.new_sound": "Регистрирует новый пользовательский звук для этого аватара\nПервым аргументом является идентификатор звука, в то время как вторым аргументом является либо массив байтовых звуковых данных, либо их строковое представление в base64",
    "figura.docs.sounds.get_custom_sounds": "Возвращает таблицу со всеми зарегистрированными пользовательскими идентификаторами звуков",
    "figura.docs.renderer.set_primary_fire_texture": "Устанавливает пользовательскую текстуру основного огня, которая будет отображаться, пока объект находится в огне\nЭффект создается двумя слоями\nДополнительный слой - это то, что отображается от первого лица\nПри отсутствии дополнительного слоя основной слой используется в качестве резервного",
    "figura.docs.renderer.set_secondary_fire_texture": "Устанавливает пользовательскую текстуру вторичного огня, которая будет отображаться, пока объект находится в огне\nЭффект создается двумя слоями\nВторичный слой - это то, что отображается от первого лица\nПри отсутствии вторичного слоя основной слой используется в качестве резервного",
    "figura.docs.renderer.get_eye_offset": "Возвращает смещение для положения глаз объекта\nПо умолчанию равно нулю (nil)",
    "figura.docs.renderer.set_block_outline_color": "Задает цвет контура выбранного блока\nЗначение альфа по умолчанию равно 0,4\nМожет быть несовместимо с шейдерами",
    "figura.docs.renderer.set_root_rotation_allowed": "Определяет, должны ли к модели быть применены корневые повороты или нет\nПо умолчанию true",
    "figura.docs.sounds.play_sound": "Воспроизводит указанный звук в указанном месте с заданными коэффициентами громкости и высоты тона\nSound id - это либо идентификатор, либо пользовательское название звука\nГромкость в Minecraft определяется тем, насколько далеко люди могут слышать звук, а не его фактической громкостью\nЕсли вы не указываете значения громкости и высоты тона, то по умолчанию используется значение 1",
    "figura.docs.sounds.is_present": "Проверяет, зарегистрирован ли этот звуковой идентификатор с помощью пользовательских звуков аватара или обычного звука",
    "figura.docs.sound.set_attenuation": "Устанавливает затухание этого звука\nПо умолчанию 1",
    "figura.docs.sound": "Представляет звук который может быть проигран\nПолучен через индексирование SoundAPI\nСуществует как обектно-ориентированная альтернатива sound:playSound()",
    "figura.docs.sound.play": "Проиграть этот звук, или возобновить звук стоявший на паузе",
    "figura.docs.sound.is_playing": "Проверяет играет ли этот звук",
    "figura.docs.sound.pause": "Приостанавливает воспроизведение этого звука",
    "figura.docs.sound.stop": "Останавливает воспроизведение этого звука",
    "figura.docs.sound.set_pos": "Устанавливает позицию этого звука\nПозиция указываеться в мировых координатах\nПо умолчанию 0",
    "figura.docs.sound.get_volume": "Получает громкость этого звука",
    "figura.docs.sound.get_pos": "Получить позицию этого звука",
    "figura.docs.sound.get_pitch": "Получает высоту этого звука",
    "figura.docs.sound.set_pitch": "Устанавливает высоту этого звука\nПо умолчанию 1",
    "figura.docs.sound.is_looping": "Проверяет зациклен ли этот звук",
    "figura.docs.vanilla_model.helmet": "Многокомпонентный: Модель шлема",
    "figura.docs.vanilla_model.helmet_item": "Предмет в слоте головы брони",
    "figura.docs.sound.get_attenuation": "Получает затухание этого звука",
    "figura.docs.sound.set_volume": "Указывает громкость этого звука\nПо умолчанию 1",
    "figura.docs.vanilla_model.boots_left_leg": "Левый ботинок от модели ботинков",
    "figura.docs.vanilla_model.boots_right_leg": "Правый ботинок от модели ботинков",
    "figura.docs.vanilla_model.right_elytra": "Правое крыло от модели элитр",
    "figura.docs.vanilla_model.left_elytra": "Левое крыло от модели элитр",
    "figura.docs.vanilla_model.chestplate_body": "Тело модели нагрудника",
    "figura.docs.vanilla_model.chestplate_left_arm": "Левая рука модели нагрудника",
    "figura.docs.vanilla_model.chestplate_right_arm": "Правая рука модели нагрудника",
    "figura.docs.vanilla_model.leggings_body": "Тело модели поножей",
    "figura.docs.vanilla_model.leggings_right_leg": "Правая нога от модели поножей",
    "figura.docs.vanilla_model.helmet_head": "Верх модели шлема",
    "figura.docs.vanilla_model.helmet_hat": "Шапка модели шлема",
    "figura.docs.vanilla_model.chestplate": "Multi-part: Модель нагрудника",
    "figura.docs.vanilla_model.leggings": "Multi-part: модель поножей",
    "figura.docs.vanilla_model.elytra": "Multi-part: модель элитр",
    "figura.docs.vanilla_model.boots": "Multi-part: Модель ботинок",
    "figura.docs.vanilla_model.held_items": "Multi-part: Предметы находящиеся в руках игрока",
    "figura.docs.vanilla_model.leggings_left_leg": "Левая нога от модели поножей",
    "figura.docs.vectors.vec": "Создает и возвращает вектор соответствующего размера для хранения переданных аргументов\nНапример, если вы вызываете vec(3, 4, 0, 2), то функция вернет Vector4, содержащий эти значения\nДля этой функции существует глобальный псевдоним «vec», что означает, что \"vectors.\" можно опустить",
    "figura.docs.vanilla_model.left_item": "Предмет в левой руке игрока",
    "figura.docs.vanilla_model.right_item": "Предмет в правой руке игрока",
    "figura.docs.vanilla_model.parrots": "Многокомпонентный: Попугаи на плечах игрока",
    "figura.docs.vanilla_model.left_parrot": "Попугай на левом плече игрока",
    "figura.docs.vanilla_model.right_parrot": "Попугай на правом плече игрока",
    "figura.docs.vanilla_model.all": "Многокомпонентный: Полная ванильная модель",
    "figura.docs.vanilla_model.outer_layer": "Многокомпонентный: Внешний слой игрока",
    "figura.docs.vanilla_model.inner_layer": "Многокомпонентный: Основная часть игрока, все, кроме внешнего слоя",
    "figura.docs.vanilla_model.armor": "Многокомпонентный: Вся броня на модели",
    "figura.docs.vanilla_model.player": "Многокомпонентный: Внешний и внутренний слои кожи игрока, а также плащ",
    "figura.docs.vanilla_part": "Абстрактный суперкласс для ванильных деталей и групп моделей\nЭту часть можно трансформировать подобно частям кастомной модели, но не с такой же степенью",
    "figura.docs.vanilla_part.get_visible": "Получает информацию о том, сделали ли вы эту часть видимой или невидимой",
    "figura.docs.vanilla_part.set_visible": "Делает эту часть видимой или невидимой",
    "figura.docs.vanilla_part.get_pos": "Получить заданную позицию этой детали\nВозвращает значение, установленное функцией \"set\"",
    "figura.docs.vanilla_part.set_pos": "Устанавливает позицию этой части, сохранив предыдущие значения",
    "figura.docs.vanilla_part.get_rot": "Получить заданный оборот этой детали\nВозвращает значение, заданное функцией \"set\"",
    "figura.docs.vanilla_part.set_rot": "Устанавливает вращение этой части",
    "figura.docs.vanilla_part.get_offset_rot": "Получает смещение поворота этой детали",
    "figura.docs.vanilla_part.set_offset_rot": "Смещает вращение этой части, добавляя поверх значений ванили",
    "figura.docs.vanilla_model_part": "Представляет деталь модели в ванильной модели\nМожно запрашивать значение ванильного преобразования",
    "figura.docs.vanilla_model_part.get_origin_rot": "Получает вращение для этой ванильной части модели, которая в настоящее время применяется в Minecraft",
    "figura.docs.vanilla_model_part.get_origin_scale": "Получает масштаб для этой ванильной части модели, которая в настоящее время применяется в Minecraft",
    "figura.docs.vanilla_group_part.set_pos": "Устанавливает позицию этой детали и ее дочерних элементов, сохранив предыдущие значения",
    "figura.docs.vanilla_group_part.set_offset_rot": "Смещает эту часть и ее дочерние вращения, добавляя поверх ванильных значений",
    "figura.docs.vectors.hex_to_rgb": "Разбирает цвет Hex-строки в вектор в формате RGB\nГекс «#» является необязательным и может иметь произвольную длину, однако вычисляются только первые 6 гекс-цифр, также поддерживаются короткие гекс-цифры (длина 3)\nНапример, «#42» соответствует «420000», а «F0B» соответствует «FF00BB»",
    "figura.docs.vectors.hsv_to_rgb": "Конвертирует заданный цвет из формата HSV в формат RGB",
    "figura.docs.vectors.rgb_to_hsv": "Конвертирует заданный цвет из формата RGB в формат HSV",
    "figura.docs.vectors.rotate_around_axis": "Поворачивает вектор относительно вектора вращения",
    "figura.docs.vectors.to_camera_space": "Преобразует положение в мире в положение относительно камеры зрителя",
    "figura.docs.vector_n.add": "Добавляет заданный вектор или значение к этому вектору и возвращает self для цепочки",
    "figura.docs.vector_n.sub": "Вычитает заданный вектор или значение из этого вектора и возвращает self для цепочки",
    "figura.docs.vector_n.mul": "Умножает заданный вектор или значение на этот вектор и возвращает self для цепочки",
    "figura.docs.vector_n.div": "Делит этот вектор на заданный вектор или значение и возвращает self для цепочки",
    "figura.docs.vector_n.scale": "Масштабирует этот вектор на заданный коэффициент и возвращает self для цепочки",
    "figura.docs.world.get_day": "Получает текущий день\nЕсли передано значение delta, то ко времени добавляется дельта\nПо умолчанию значение дельты равно нулю",
    "figura.docs.data": "Глобальный API, который предоставляет функции для работы с функциями, связанными с данными",
    "figura.docs.data.create_buffer": "Создает пустой буфер",
    "figura.docs.buffer": "Объект байтового буфера",
    "figura.docs.buffer.read_short": "Читает короткий фрагмент из этого буфера",
    "figura.docs.buffer.read_ushort": "Читает беззнаковое короткое из этого буфера",
    "figura.docs.buffer.read_long": "Читает длинное число из этого буфера",
    "figura.docs.buffer.read_float": "Читает число с плавающей запятой из этого буфера",
    "figura.docs.buffer.read_short_le": "Читает маленькое эндианное число из этого буфера",
    "figura.docs.buffer.read_int_le": "Читает из этого буфера маленькое эндианное целое число",
    "figura.docs.buffer.read_long_le": "Читает из этого буфера маленькое эндиановое длинное число",
    "figura.docs.buffer.read_double_le": "Читает из этого буфера маленькое эндианное длинное число с плавающей запятой",
    "figura.docs.buffer.read_base_64": "Читает байты из этого буфера в строку Base64. Длина - количество прочитанных байт, по умолчанию 1024",
    "figura.docs.buffer.write": "Записывает один байт в этот буфер",
    "figura.docs.buffer.write_short": "Записывает короткое сообщение в этот буфер",
    "figura.docs.buffer.write_ushort": "Записывает в этот буфер беззнаковое короткое значение",
    "figura.docs.buffer.write_int": "Записывает целое число в этот буфер",
    "figura.docs.vanilla_group_part.set_offset_scale": "Смещает эту часть и ее дочерние шкалы, умножая на значение ванили",
    "figura.docs.vanilla_model_part.get_origin_visible": "Получает, отображается ли эта ванильная часть модели без вмешательства вашего скрипта",
    "figura.docs.vanilla_model_part.get_origin_pos": "Получает смещение позиции к этой ванильной части модели, которая в настоящее время применяется в Minecraft",
    "figura.docs.vanilla_group_part": "Представляет группу деталей модели в ванильной модели\nИспользуется для удобной ссылки на обычные детали\nВсе изменения также касаются всех дочерних деталей",
    "figura.docs.vectors.world_to_screen_space": "Преобразует положение в мире в положение относительно экрана зрителя",
    "figura.docs.vector_n.set": "Задаёт этому вектору заданные значения\nНулевые значения приравниваются к нулю\nВозвращает self для цепочки",
    "figura.docs.vector_n.offset": "Сдвигает этот вектор на заданный множитель, добавляя множитель ко всем компонентам, и возвращает self для цепочки",
    "figura.docs.vectors.rgb_to_hex": "Конвертирует заданный цвет из формата RGB в формат Hex\nСимвол «#» не включается в возвращаемое значение",
    "figura.docs.vectors.angle_to_dir": "Преобразует угол наклона/поворота (в градусах) в вектор направления",
    "figura.docs.buffer.read": "Читает один байт из этого буфера",
    "figura.docs.buffer.read_string": "Читает строку из этого буфера. По умолчанию используется кодировка UTF8. Длина - количество байт для чтения",
    "figura.docs.buffer.read_byte_array": "Читает байты из этого буфера в строковый массив байт. Длина - количество прочитанных байт, по умолчанию 1024",
    "figura.docs.vector_n.reduce": "Уменьшает этот вектор по модулю заданного вектора или значений и возвращает self для цепочки",
    "figura.docs.world.get_height": "Возвращает самую высокую точку в заданной позиции в соответствии с предоставленной картой высот\nПо умолчанию MOTION_BLOCKING, если не предоставлена карта высот",
    "figura.docs.buffer.read_int": "Читает целое число из этого буфера",
    "figura.docs.buffer.read_double": "Читает длинное число с плавающей запятой из этого буфера",
    "figura.docs.buffer.read_ushort_le": "Читает маленькое эндианское беззнаковое короткое число из этого буфера",
    "figura.docs.buffer.read_float_le": "Читает из этого буфера маленькое эндианное число с плавающей запятой",
    "figura.docs.world.get_day_time": "Получает время текущего дня в диапазоне от 0 до 24000\nЕсли передано значение delta, то ко времени добавляется дельта\nПо умолчанию значение дельты равно нулю",
    "figura.docs.buffer.write_int_le": "Записывает в этот буфер маленькое целое энцифровое число",
    "figura.docs.buffer.write_float_le": "Записывает в этот буфер маленькое энцифровое число с плавающей запятой",
    "figura.docs.buffer.get_position": "Возвращает текущую позицию этого буфера",
    "figura.docs.buffer.get_max_capacity": "Возвращает максимальную емкость, которую может иметь этот буфер",
    "figura.docs.input_stream.mark_supported": "Поддерживает ли этот поток входных данных маркировку или нет",
    "figura.docs.output_stream.write": "Записывает один байт в этот поток",
    "figura.docs.json_builder.pretty_printing": "Должен ли сериализатор применять отступы для объектов и массивов. По умолчанию - false",
    "figura.docs.json_object.get": "Возвращает значение, привязанное к указанному ключу. Подумайте об использовании containsKey раньше, поскольку объект может содержать нулевые значения, в отличие от обычной таблицы",
    "figura.docs.file.exists": "Проверяет, существует ли файл/каталог по указанному пути",
    "figura.docs.file.mkdir": "Создает каталог по указанному пути. Возвращает true, если папка успешно создана",
    "figura.docs.file.write": "Записывает значение с указанным провайдером в файл",
    "figura.docs.file.delete": "Удаляет файл/каталог по указанному пути. Возвращает true в случае успеха",
    "figura.docs.buffer.write_long": "Записывает длинное число в этот буфер",
    "figura.docs.buffer.write_float": "Записывает число с плавающей точкой в этот буфер",
    "figura.docs.buffer.write_double": "Записывает длинное число с плавающей точкой в этот буфер",
    "figura.docs.buffer.write_short_le": "Записывает в этот буфер небольшое эндианное короткое число",
    "figura.docs.buffer.write_ushort_le": "Записывает в этот буфер небольшое эндианное беззнаковое короткое число в этот буфер",
    "figura.docs.buffer.write_long_le": "Записывает в этот буфер маленькое длинное энцифровое число",
    "figura.docs.buffer.write_double_le": "Записывает в этот буфер маленькое длинное энцифровое число с плавающей запятой",
    "figura.docs.buffer.write_base_64": "Записывает байты строки Base64 в этот буфер и возвращает количество записанных байт.",
    "figura.docs.buffer.write_byte_array": "Записывает необработанные байты строки в этот буфер и возвращает количество записанных байт.",
    "figura.docs.buffer.get_length": "Возвращает длину этого буфера",
    "figura.docs.buffer.set_position": "Устанавливает текущую позицию этого буфера",
    "figura.docs.buffer.available": "Возвращает количество байт, доступных для чтения",
    "figura.docs.buffer.write_to_stream": "Записывает данные из этого буфера в предоставленный поток вывода",
    "figura.docs.buffer.is_closed": "Проверяет, закрыт ли этот буфер или нет",
    "figura.docs.input_stream": "Поток входных данных",
    "figura.docs.input_stream.read": "Читает один байт из этого потока. Может сгенерировать ошибку, если поток является асинхронным",
    "figura.docs.input_stream.skip": "Пропускает заданное количество байт в потоке. Возвращает фактическое количество пропущенных байт",
    "figura.docs.input_stream.available": "Возвращает количество доступных байт",
    "figura.docs.input_stream.close": "Закрывает этот поток ввода",
    "figura.docs.input_stream.mark": "Обозначает текущую позицию во входном потоке",
    "figura.docs.input_stream.reset": "Сбрасывает позицию входного потока до отметки",
    "figura.docs.input_stream.is_async_only": "Этот поток является только асинхронным или нет",
    "figura.docs.input_stream.transfer_to": "Передает оставшиеся данные в этом входном потоке в предоставленный выходной поток",
    "figura.docs.output_stream": "Выходной поток данных",
    "figura.docs.output_stream.close": "Закрывает этот поток вывода.",
    "figura.docs.output_stream.flush": "Смывает данные в этом исходном потоке.",
    "figura.docs.json.new_builder": "Создает новый конструктор сериализаторов json",
    "figura.docs.json.new_array": "Создает новый json-массив",
    "figura.docs.json.new_object": "Создает новый json-объект",
    "figura.docs.json_builder": "Конструктор сериализаторов JSON",
    "figura.docs.json_builder.html_escaping": "Должен ли сериализатор экранировать не ASCII символы. По умолчанию - true",
    "figura.docs.json_builder.serialize_nils": "Должен ли сериализатор сериализировать нули, которые ставятся на JSON-объекты и массивы. По умолчанию - false",
    "figura.docs.json_builder.build": "Собирает сериализатор с текущими настройками",
    "figura.docs.json_serializer.serialize": "Сериализует предоставленное значение в строку JSON",
    "figura.docs.json_serializer.deserialize": "Сериализует предоставленную строку JSON в lua-значение",
    "figura.docs.json_array.get": "Возвращает значение по указанному индексу",
    "figura.docs.json_array.size": "Возвращает размер этого массива",
    "figura.docs.json_array.contains": "Проверяет, содержит ли массив заданное значение",
    "figura.docs.json_array.add": "Добавляет указанное значение в этот массив",
    "figura.docs.json_array.set": "Устанавливает предоставленное значение по указанному индексу в этом массиве",
    "figura.docs.json_array.index_of": "Возвращает первый индекс предоставленного значения в этом массиве",
    "figura.docs.json_array.last_index_of": "Возвращает последний индекс предоставленного значения в этом массиве",
    "figura.docs.json_array.clear": "Очищает этот массив",
    "figura.docs.json_object.size": "Возвращает размер этого объекта",
    "figura.docs.json_object.remove": "Удалить значение с заданным ключом из объекта",
    "figura.docs.json_object.clear": "Очищает этот объект",
    "figura.docs.file": "Глобальный API, который содержит функции для работы с файлами",
    "figura.docs.file.is_path_allowed": "Проверяет, разрешено ли использовать этот путь",
    "figura.docs.file.allowed": "Проверяет, можно ли использовать FileAPI для этого аватара",
    "figura.docs.file.is_file": "Проверяет, является ли указанный путь файлом или нет",
    "figura.docs.file.is_directory": "Проверяет, является ли указанный путь каталогом",
    "figura.docs.file.open_write_stream": "Открывает поток вывода для файла по указанному пути",
    "figura.docs.file.read_string": "Читает весь файл как строку",
    "figura.docs.file.write_string": "Записывает строку в файл",
    "figura.docs.file.read": "Читает значение из файла с указанным считывателем",
    "figura.docs.file.mkdirs": "Создает каталог по указанному пути, включая все родительские каталоги. Возвращает true, если папка успешно создана",
    "figura.docs.file.list": "Перечисляет все файлы и каталоги по указанному пути, или возвращает ноль, если каталог не существует или путь не является каталогом",
    "figura.docs.resources.get_paths": "Возвращает таблицу с путями ко всем ресурсам, хранящимся в аватаре",
    "figura.docs.resources.get": "Возвращает входной поток с данными для ресурса по указанному пути",
    "figura.docs.net": "Глобальный API, который содержит функции, связанные с сетью",
    "figura.docs.net.http": "Экземпляр HttpAPI",
    "figura.docs.net.socket": "Экземпляр SocketAPI",
    "figura.docs.net.is_networking_allowed": "Проверяет, может ли ваш аватар использовать сетевые функции. Всегда неверно, если сеть отключена в настройках",
    "figura.docs.net.is_link_allowed": "Проверяет, разрешено ли использовать указанную ссылку в сетевом api",
    "figura.docs.http": "Глобальный API, который содержит функции, связанные с HTTP",
    "figura.docs.http.request": "Создает конструктор запросов для указанного URI",
    "figura.docs.http_request_builder": "Конструктор HTTP-запросов",
    "figura.docs.http_request_builder.uri": "Устанавливает URI для этого запроса, возвращает сам себя для цепочки",
    "figura.docs.http_request_builder.method": "Устанавливает метод для этого запроса, возвращает сам себя для цепочки. Если метод равен нулю, будет использовано значение по умолчанию - «GET»",
    "figura.docs.http_request_builder.body": "Задает тело для этого запроса, возвращает само тело для цепочки. Если данные равны нулю, запрос будет отправлен без тела",
    "figura.docs.http_request_builder.header": "Задает заголовок для этого запроса, возвращает сам себя для цепочки. Если значение нулевое, заголовок будет удален",
    "figura.docs.future.get_or_error": "Вызывает ошибку, если она возникла во время выполнения этого фьючерса, иначе возвращает значение",
    "figura.docs.future.throw_error": "Сгенерирует ошибку, если она возникла во время выполнения этого будущего.",
    "figura.docs.http_response.get_data": "Возвращает входной поток с данными ответа",
    "figura.docs.socket_api": "Глобальный API, предназначенный для работы с TCP-сокетами",
    "figura.docs.socket_api.open": "Открывает соединение с указанным хостом и портом. Возвращает будущее из Socket",
    "figura.docs.buffer.write_string": "Записывает строку в этот буфер и возвращает количество записанных байт. По умолчанию используется кодировка UTF8.",
    "figura.docs.buffer.read_from_stream": "Читает данные из входного потока и записывает их в буфер, возвращает количество записанных байт",
    "figura.docs.input_stream.read_async": "Начинает читать указанное количество байт из этого потока и возвращает будущее, которое будет содержать массив байт потока после завершения",
    "figura.docs.json_serializer": "Объект, созданный для сериализации и десериализации JSON-строк с определенными настройками",
    "figura.docs.json_array.remove_at": "Удаляет значения по указанному индексу в этом массиве",
    "figura.docs.buffer.close": "Закрывает этот буфер, помечая его память для освобождения сборщиком мусора. После вызова этой функции буфер больше не может быть использован",
    "figura.docs.json": "Глобальный API, который содержит функции для работы с JSON",
    "figura.docs.json.is_serializable": "Проверяет, можно ли заданное значение сериализировать",
    "figura.docs.json_array": "JSON-массив, в основном таблица, но более ограниченный для соответствия JSON-массивам",
    "figura.docs.json_array.insert": "Вставляет предоставленное значение в этот массив по указанному индексу",
    "figura.docs.json_object": "JSON-объект, в основном таблица, но более ограниченный для сопоставления JSON-объектов",
    "figura.docs.file.open_read_stream": "Открывает поток ввода для файла по указанному пути",
    "figura.docs.entity.get_nearest_entity": "Возвращает ближайшую сущность к данной сущности\nЕсли `type` это идентификатор сущности(например `minecraft:bee`), будут учитываться только сущности этого типа.\nРадиус по умолчанию равен 20 и определяет размер области поиска сущностей, представляя собой куб, расширяющийся во всех направлениях от игрока.",
    "figura.docs.animation.is_paused": "Проверяет приостановлена ли анимация",
    "figura.docs.events.damage": "Вызывается когда вы получаете урон\nПринимает четыре аргумента: тип урона как строку, сущность что получает урон, атакующая сущность, и последнее место получения урона\\nПоследние три аргумента могут возвращать nil если нет источника урона",
    "figura.docs.world.get_map_data": "Принимает строку, например, `map_3`, и возвращает таблицу данных если карта существует.\nДанные карты могут быть несинхронизированы и обновляются только при удержании карты в руках.",
    "figura.docs.animation.is_playing": "Проверяет запущена ли анимация",
    "figura.docs.events.trident_render": "Событие TRIDENT_RENDER запущено для каждого трезубца что метнул владелец аватара\nОно принимает два аргумента, изменение тика, и сущность трезубца\nВозврат значения \"true\" предотвращает отображение трезубца, включая части трезубца.\nТребует разрешения \"Изменение Ванильной Модели\"",
    "figura.docs.world.get_entities": "Возвращает список сущностей, находящихся внутри коробки заданной двумя позициями",
    "figura.config.inventory_scissor.tooltip": "Включение этого предотвращает отображение куклы игрока за пределами области просмотра в инвентаре",
    "figura.docs.entity.is_moving": "Возвращает значение true если сущность имеет какую-либо скорость\nПринимает булево значение, если он равен true, скорость по оси Y игнорируется",
    "figura.config.inventory_scissor": "Обрезать рендер инвентаря",
    "figura.docs.animation.is_stopped": "Проверяет остановлена ли анимация",
    "figura.docs.animation.is_holding": "Проверяет держится ли анимация на последнем кадре",
    "figura.docs.entity.is_falling": "Возвращает true если сущность имеет отрицательную скорость Y и не находится на земле",
    "figura.docs.events.totem": "Вызывается при использовании Тотема бессмертия для избежания смерти\nЕсли возвращает true, то анимация завершилась",
    "figura.docs.host.write_to_log": "Записывает прямо в журнал-лог майнкрафта, позволяет фиксировать отладочные данные не загромождая чат.",
    "figura.docs.host.warn_to_log": "Записывает предупреждение прямо в журнал-лог майнкрафта,\nпозволяет фиксировать отладочные данные не загромождая чат"
}
